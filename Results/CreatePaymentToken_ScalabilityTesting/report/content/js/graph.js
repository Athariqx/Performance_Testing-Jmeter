/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 2385.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 34.0], [0.8, 87.0], [0.9, 272.0], [1.0, 279.0], [1.1, 282.0], [1.2, 285.0], [1.3, 289.0], [1.4, 295.0], [1.5, 305.0], [1.6, 309.0], [1.7, 312.0], [1.8, 313.0], [1.9, 315.0], [2.0, 315.0], [2.1, 317.0], [2.2, 317.0], [2.3, 318.0], [2.4, 318.0], [2.5, 319.0], [2.6, 320.0], [2.7, 320.0], [2.8, 321.0], [2.9, 321.0], [3.0, 322.0], [3.1, 322.0], [3.2, 323.0], [3.3, 324.0], [3.4, 324.0], [3.5, 324.0], [3.6, 325.0], [3.7, 326.0], [3.8, 326.0], [3.9, 326.0], [4.0, 327.0], [4.1, 327.0], [4.2, 328.0], [4.3, 328.0], [4.4, 329.0], [4.5, 329.0], [4.6, 329.0], [4.7, 330.0], [4.8, 330.0], [4.9, 331.0], [5.0, 331.0], [5.1, 332.0], [5.2, 332.0], [5.3, 333.0], [5.4, 333.0], [5.5, 333.0], [5.6, 334.0], [5.7, 334.0], [5.8, 335.0], [5.9, 335.0], [6.0, 335.0], [6.1, 336.0], [6.2, 336.0], [6.3, 337.0], [6.4, 337.0], [6.5, 338.0], [6.6, 338.0], [6.7, 339.0], [6.8, 339.0], [6.9, 340.0], [7.0, 340.0], [7.1, 340.0], [7.2, 341.0], [7.3, 341.0], [7.4, 342.0], [7.5, 342.0], [7.6, 342.0], [7.7, 343.0], [7.8, 343.0], [7.9, 344.0], [8.0, 344.0], [8.1, 345.0], [8.2, 346.0], [8.3, 346.0], [8.4, 347.0], [8.5, 347.0], [8.6, 347.0], [8.7, 348.0], [8.8, 348.0], [8.9, 349.0], [9.0, 349.0], [9.1, 350.0], [9.2, 351.0], [9.3, 351.0], [9.4, 352.0], [9.5, 352.0], [9.6, 353.0], [9.7, 353.0], [9.8, 354.0], [9.9, 354.0], [10.0, 355.0], [10.1, 355.0], [10.2, 356.0], [10.3, 357.0], [10.4, 357.0], [10.5, 358.0], [10.6, 359.0], [10.7, 359.0], [10.8, 360.0], [10.9, 360.0], [11.0, 361.0], [11.1, 362.0], [11.2, 363.0], [11.3, 363.0], [11.4, 364.0], [11.5, 364.0], [11.6, 365.0], [11.7, 365.0], [11.8, 366.0], [11.9, 366.0], [12.0, 367.0], [12.1, 368.0], [12.2, 368.0], [12.3, 369.0], [12.4, 370.0], [12.5, 371.0], [12.6, 371.0], [12.7, 372.0], [12.8, 373.0], [12.9, 375.0], [13.0, 375.0], [13.1, 376.0], [13.2, 377.0], [13.3, 378.0], [13.4, 378.0], [13.5, 379.0], [13.6, 380.0], [13.7, 381.0], [13.8, 381.0], [13.9, 382.0], [14.0, 383.0], [14.1, 384.0], [14.2, 385.0], [14.3, 386.0], [14.4, 387.0], [14.5, 387.0], [14.6, 388.0], [14.7, 389.0], [14.8, 390.0], [14.9, 391.0], [15.0, 392.0], [15.1, 393.0], [15.2, 394.0], [15.3, 395.0], [15.4, 396.0], [15.5, 396.0], [15.6, 398.0], [15.7, 399.0], [15.8, 400.0], [15.9, 401.0], [16.0, 402.0], [16.1, 402.0], [16.2, 403.0], [16.3, 404.0], [16.4, 405.0], [16.5, 406.0], [16.6, 407.0], [16.7, 407.0], [16.8, 408.0], [16.9, 409.0], [17.0, 409.0], [17.1, 410.0], [17.2, 411.0], [17.3, 413.0], [17.4, 414.0], [17.5, 415.0], [17.6, 416.0], [17.7, 417.0], [17.8, 418.0], [17.9, 418.0], [18.0, 419.0], [18.1, 421.0], [18.2, 422.0], [18.3, 422.0], [18.4, 423.0], [18.5, 423.0], [18.6, 424.0], [18.7, 426.0], [18.8, 426.0], [18.9, 427.0], [19.0, 428.0], [19.1, 429.0], [19.2, 430.0], [19.3, 431.0], [19.4, 432.0], [19.5, 433.0], [19.6, 434.0], [19.7, 435.0], [19.8, 435.0], [19.9, 436.0], [20.0, 437.0], [20.1, 437.0], [20.2, 438.0], [20.3, 439.0], [20.4, 440.0], [20.5, 440.0], [20.6, 442.0], [20.7, 442.0], [20.8, 443.0], [20.9, 444.0], [21.0, 444.0], [21.1, 445.0], [21.2, 445.0], [21.3, 447.0], [21.4, 448.0], [21.5, 449.0], [21.6, 450.0], [21.7, 451.0], [21.8, 451.0], [21.9, 452.0], [22.0, 453.0], [22.1, 453.0], [22.2, 455.0], [22.3, 456.0], [22.4, 457.0], [22.5, 457.0], [22.6, 458.0], [22.7, 459.0], [22.8, 460.0], [22.9, 461.0], [23.0, 462.0], [23.1, 463.0], [23.2, 463.0], [23.3, 464.0], [23.4, 465.0], [23.5, 466.0], [23.6, 467.0], [23.7, 468.0], [23.8, 468.0], [23.9, 469.0], [24.0, 470.0], [24.1, 470.0], [24.2, 472.0], [24.3, 473.0], [24.4, 474.0], [24.5, 475.0], [24.6, 475.0], [24.7, 477.0], [24.8, 477.0], [24.9, 478.0], [25.0, 479.0], [25.1, 480.0], [25.2, 481.0], [25.3, 481.0], [25.4, 482.0], [25.5, 483.0], [25.6, 484.0], [25.7, 485.0], [25.8, 487.0], [25.9, 488.0], [26.0, 488.0], [26.1, 490.0], [26.2, 490.0], [26.3, 491.0], [26.4, 492.0], [26.5, 493.0], [26.6, 494.0], [26.7, 495.0], [26.8, 496.0], [26.9, 497.0], [27.0, 499.0], [27.1, 500.0], [27.2, 501.0], [27.3, 503.0], [27.4, 503.0], [27.5, 504.0], [27.6, 506.0], [27.7, 506.0], [27.8, 507.0], [27.9, 509.0], [28.0, 510.0], [28.1, 511.0], [28.2, 512.0], [28.3, 513.0], [28.4, 515.0], [28.5, 516.0], [28.6, 517.0], [28.7, 518.0], [28.8, 519.0], [28.9, 520.0], [29.0, 521.0], [29.1, 523.0], [29.2, 524.0], [29.3, 526.0], [29.4, 527.0], [29.5, 528.0], [29.6, 529.0], [29.7, 530.0], [29.8, 531.0], [29.9, 532.0], [30.0, 533.0], [30.1, 535.0], [30.2, 536.0], [30.3, 537.0], [30.4, 539.0], [30.5, 541.0], [30.6, 542.0], [30.7, 543.0], [30.8, 545.0], [30.9, 547.0], [31.0, 548.0], [31.1, 550.0], [31.2, 551.0], [31.3, 553.0], [31.4, 555.0], [31.5, 556.0], [31.6, 558.0], [31.7, 559.0], [31.8, 561.0], [31.9, 563.0], [32.0, 564.0], [32.1, 565.0], [32.2, 566.0], [32.3, 568.0], [32.4, 569.0], [32.5, 570.0], [32.6, 572.0], [32.7, 573.0], [32.8, 574.0], [32.9, 576.0], [33.0, 577.0], [33.1, 578.0], [33.2, 579.0], [33.3, 580.0], [33.4, 582.0], [33.5, 583.0], [33.6, 585.0], [33.7, 587.0], [33.8, 588.0], [33.9, 589.0], [34.0, 591.0], [34.1, 592.0], [34.2, 593.0], [34.3, 593.0], [34.4, 596.0], [34.5, 597.0], [34.6, 599.0], [34.7, 600.0], [34.8, 601.0], [34.9, 602.0], [35.0, 604.0], [35.1, 605.0], [35.2, 606.0], [35.3, 607.0], [35.4, 609.0], [35.5, 610.0], [35.6, 611.0], [35.7, 612.0], [35.8, 613.0], [35.9, 614.0], [36.0, 615.0], [36.1, 616.0], [36.2, 617.0], [36.3, 619.0], [36.4, 620.0], [36.5, 621.0], [36.6, 622.0], [36.7, 623.0], [36.8, 624.0], [36.9, 625.0], [37.0, 626.0], [37.1, 627.0], [37.2, 628.0], [37.3, 629.0], [37.4, 630.0], [37.5, 631.0], [37.6, 632.0], [37.7, 633.0], [37.8, 634.0], [37.9, 635.0], [38.0, 637.0], [38.1, 637.0], [38.2, 638.0], [38.3, 639.0], [38.4, 640.0], [38.5, 641.0], [38.6, 641.0], [38.7, 643.0], [38.8, 644.0], [38.9, 644.0], [39.0, 645.0], [39.1, 646.0], [39.2, 647.0], [39.3, 648.0], [39.4, 649.0], [39.5, 650.0], [39.6, 651.0], [39.7, 652.0], [39.8, 653.0], [39.9, 654.0], [40.0, 654.0], [40.1, 656.0], [40.2, 657.0], [40.3, 658.0], [40.4, 659.0], [40.5, 661.0], [40.6, 662.0], [40.7, 662.0], [40.8, 663.0], [40.9, 665.0], [41.0, 666.0], [41.1, 667.0], [41.2, 669.0], [41.3, 669.0], [41.4, 670.0], [41.5, 672.0], [41.6, 673.0], [41.7, 674.0], [41.8, 675.0], [41.9, 676.0], [42.0, 678.0], [42.1, 679.0], [42.2, 679.0], [42.3, 680.0], [42.4, 681.0], [42.5, 682.0], [42.6, 684.0], [42.7, 685.0], [42.8, 687.0], [42.9, 688.0], [43.0, 689.0], [43.1, 691.0], [43.2, 692.0], [43.3, 693.0], [43.4, 694.0], [43.5, 697.0], [43.6, 698.0], [43.7, 699.0], [43.8, 701.0], [43.9, 703.0], [44.0, 704.0], [44.1, 707.0], [44.2, 708.0], [44.3, 709.0], [44.4, 710.0], [44.5, 711.0], [44.6, 712.0], [44.7, 714.0], [44.8, 717.0], [44.9, 718.0], [45.0, 719.0], [45.1, 721.0], [45.2, 722.0], [45.3, 725.0], [45.4, 726.0], [45.5, 726.0], [45.6, 729.0], [45.7, 730.0], [45.8, 732.0], [45.9, 734.0], [46.0, 736.0], [46.1, 738.0], [46.2, 740.0], [46.3, 741.0], [46.4, 743.0], [46.5, 745.0], [46.6, 747.0], [46.7, 748.0], [46.8, 750.0], [46.9, 751.0], [47.0, 753.0], [47.1, 754.0], [47.2, 755.0], [47.3, 758.0], [47.4, 759.0], [47.5, 761.0], [47.6, 764.0], [47.7, 766.0], [47.8, 768.0], [47.9, 770.0], [48.0, 771.0], [48.1, 773.0], [48.2, 775.0], [48.3, 776.0], [48.4, 779.0], [48.5, 781.0], [48.6, 783.0], [48.7, 785.0], [48.8, 786.0], [48.9, 788.0], [49.0, 790.0], [49.1, 791.0], [49.2, 793.0], [49.3, 795.0], [49.4, 796.0], [49.5, 797.0], [49.6, 799.0], [49.7, 800.0], [49.8, 802.0], [49.9, 803.0], [50.0, 805.0], [50.1, 807.0], [50.2, 808.0], [50.3, 810.0], [50.4, 811.0], [50.5, 813.0], [50.6, 814.0], [50.7, 816.0], [50.8, 818.0], [50.9, 819.0], [51.0, 821.0], [51.1, 822.0], [51.2, 824.0], [51.3, 826.0], [51.4, 827.0], [51.5, 828.0], [51.6, 831.0], [51.7, 832.0], [51.8, 834.0], [51.9, 836.0], [52.0, 837.0], [52.1, 839.0], [52.2, 841.0], [52.3, 843.0], [52.4, 844.0], [52.5, 846.0], [52.6, 848.0], [52.7, 849.0], [52.8, 850.0], [52.9, 853.0], [53.0, 855.0], [53.1, 857.0], [53.2, 858.0], [53.3, 859.0], [53.4, 861.0], [53.5, 863.0], [53.6, 865.0], [53.7, 866.0], [53.8, 868.0], [53.9, 869.0], [54.0, 871.0], [54.1, 873.0], [54.2, 874.0], [54.3, 875.0], [54.4, 876.0], [54.5, 878.0], [54.6, 880.0], [54.7, 882.0], [54.8, 883.0], [54.9, 885.0], [55.0, 887.0], [55.1, 888.0], [55.2, 889.0], [55.3, 891.0], [55.4, 892.0], [55.5, 895.0], [55.6, 896.0], [55.7, 898.0], [55.8, 901.0], [55.9, 903.0], [56.0, 904.0], [56.1, 906.0], [56.2, 908.0], [56.3, 909.0], [56.4, 912.0], [56.5, 914.0], [56.6, 916.0], [56.7, 920.0], [56.8, 923.0], [56.9, 926.0], [57.0, 927.0], [57.1, 930.0], [57.2, 932.0], [57.3, 935.0], [57.4, 936.0], [57.5, 938.0], [57.6, 941.0], [57.7, 943.0], [57.8, 945.0], [57.9, 947.0], [58.0, 949.0], [58.1, 952.0], [58.2, 954.0], [58.3, 957.0], [58.4, 959.0], [58.5, 961.0], [58.6, 963.0], [58.7, 965.0], [58.8, 967.0], [58.9, 969.0], [59.0, 974.0], [59.1, 976.0], [59.2, 978.0], [59.3, 980.0], [59.4, 982.0], [59.5, 983.0], [59.6, 985.0], [59.7, 987.0], [59.8, 988.0], [59.9, 989.0], [60.0, 990.0], [60.1, 991.0], [60.2, 993.0], [60.3, 995.0], [60.4, 997.0], [60.5, 998.0], [60.6, 1000.0], [60.7, 1001.0], [60.8, 1003.0], [60.9, 1004.0], [61.0, 1006.0], [61.1, 1008.0], [61.2, 1009.0], [61.3, 1011.0], [61.4, 1012.0], [61.5, 1014.0], [61.6, 1015.0], [61.7, 1017.0], [61.8, 1018.0], [61.9, 1019.0], [62.0, 1020.0], [62.1, 1022.0], [62.2, 1024.0], [62.3, 1025.0], [62.4, 1028.0], [62.5, 1030.0], [62.6, 1032.0], [62.7, 1034.0], [62.8, 1035.0], [62.9, 1037.0], [63.0, 1039.0], [63.1, 1040.0], [63.2, 1042.0], [63.3, 1044.0], [63.4, 1047.0], [63.5, 1048.0], [63.6, 1050.0], [63.7, 1052.0], [63.8, 1054.0], [63.9, 1056.0], [64.0, 1057.0], [64.1, 1059.0], [64.2, 1060.0], [64.3, 1061.0], [64.4, 1062.0], [64.5, 1063.0], [64.6, 1065.0], [64.7, 1066.0], [64.8, 1067.0], [64.9, 1069.0], [65.0, 1071.0], [65.1, 1071.0], [65.2, 1072.0], [65.3, 1073.0], [65.4, 1074.0], [65.5, 1075.0], [65.6, 1076.0], [65.7, 1077.0], [65.8, 1078.0], [65.9, 1079.0], [66.0, 1080.0], [66.1, 1081.0], [66.2, 1082.0], [66.3, 1083.0], [66.4, 1084.0], [66.5, 1084.0], [66.6, 1085.0], [66.7, 1086.0], [66.8, 1087.0], [66.9, 1087.0], [67.0, 1088.0], [67.1, 1089.0], [67.2, 1090.0], [67.3, 1090.0], [67.4, 1091.0], [67.5, 1093.0], [67.6, 1093.0], [67.7, 1094.0], [67.8, 1095.0], [67.9, 1095.0], [68.0, 1096.0], [68.1, 1097.0], [68.2, 1098.0], [68.3, 1098.0], [68.4, 1099.0], [68.5, 1100.0], [68.6, 1100.0], [68.7, 1101.0], [68.8, 1101.0], [68.9, 1102.0], [69.0, 1103.0], [69.1, 1103.0], [69.2, 1104.0], [69.3, 1104.0], [69.4, 1105.0], [69.5, 1105.0], [69.6, 1105.0], [69.7, 1106.0], [69.8, 1107.0], [69.9, 1107.0], [70.0, 1108.0], [70.1, 1109.0], [70.2, 1110.0], [70.3, 1110.0], [70.4, 1111.0], [70.5, 1111.0], [70.6, 1112.0], [70.7, 1112.0], [70.8, 1113.0], [70.9, 1113.0], [71.0, 1114.0], [71.1, 1114.0], [71.2, 1115.0], [71.3, 1115.0], [71.4, 1116.0], [71.5, 1116.0], [71.6, 1117.0], [71.7, 1117.0], [71.8, 1117.0], [71.9, 1118.0], [72.0, 1119.0], [72.1, 1119.0], [72.2, 1120.0], [72.3, 1120.0], [72.4, 1121.0], [72.5, 1121.0], [72.6, 1121.0], [72.7, 1122.0], [72.8, 1122.0], [72.9, 1123.0], [73.0, 1123.0], [73.1, 1124.0], [73.2, 1124.0], [73.3, 1125.0], [73.4, 1126.0], [73.5, 1126.0], [73.6, 1127.0], [73.7, 1127.0], [73.8, 1128.0], [73.9, 1128.0], [74.0, 1129.0], [74.1, 1129.0], [74.2, 1129.0], [74.3, 1130.0], [74.4, 1131.0], [74.5, 1131.0], [74.6, 1132.0], [74.7, 1132.0], [74.8, 1133.0], [74.9, 1134.0], [75.0, 1134.0], [75.1, 1134.0], [75.2, 1135.0], [75.3, 1135.0], [75.4, 1136.0], [75.5, 1136.0], [75.6, 1136.0], [75.7, 1137.0], [75.8, 1137.0], [75.9, 1138.0], [76.0, 1138.0], [76.1, 1139.0], [76.2, 1139.0], [76.3, 1139.0], [76.4, 1140.0], [76.5, 1140.0], [76.6, 1141.0], [76.7, 1142.0], [76.8, 1142.0], [76.9, 1143.0], [77.0, 1144.0], [77.1, 1144.0], [77.2, 1144.0], [77.3, 1145.0], [77.4, 1145.0], [77.5, 1146.0], [77.6, 1146.0], [77.7, 1147.0], [77.8, 1148.0], [77.9, 1148.0], [78.0, 1149.0], [78.1, 1149.0], [78.2, 1150.0], [78.3, 1150.0], [78.4, 1151.0], [78.5, 1151.0], [78.6, 1152.0], [78.7, 1153.0], [78.8, 1153.0], [78.9, 1154.0], [79.0, 1154.0], [79.1, 1154.0], [79.2, 1155.0], [79.3, 1156.0], [79.4, 1156.0], [79.5, 1157.0], [79.6, 1157.0], [79.7, 1158.0], [79.8, 1158.0], [79.9, 1159.0], [80.0, 1159.0], [80.1, 1160.0], [80.2, 1161.0], [80.3, 1161.0], [80.4, 1162.0], [80.5, 1163.0], [80.6, 1163.0], [80.7, 1164.0], [80.8, 1165.0], [80.9, 1165.0], [81.0, 1166.0], [81.1, 1166.0], [81.2, 1167.0], [81.3, 1167.0], [81.4, 1168.0], [81.5, 1169.0], [81.6, 1169.0], [81.7, 1170.0], [81.8, 1171.0], [81.9, 1171.0], [82.0, 1172.0], [82.1, 1172.0], [82.2, 1173.0], [82.3, 1174.0], [82.4, 1175.0], [82.5, 1175.0], [82.6, 1176.0], [82.7, 1177.0], [82.8, 1178.0], [82.9, 1179.0], [83.0, 1179.0], [83.1, 1180.0], [83.2, 1181.0], [83.3, 1182.0], [83.4, 1183.0], [83.5, 1184.0], [83.6, 1185.0], [83.7, 1186.0], [83.8, 1187.0], [83.9, 1188.0], [84.0, 1190.0], [84.1, 1191.0], [84.2, 1192.0], [84.3, 1193.0], [84.4, 1194.0], [84.5, 1196.0], [84.6, 1197.0], [84.7, 1199.0], [84.8, 1200.0], [84.9, 1202.0], [85.0, 1204.0], [85.1, 1206.0], [85.2, 1207.0], [85.3, 1208.0], [85.4, 1209.0], [85.5, 1211.0], [85.6, 1212.0], [85.7, 1214.0], [85.8, 1215.0], [85.9, 1216.0], [86.0, 1217.0], [86.1, 1219.0], [86.2, 1222.0], [86.3, 1223.0], [86.4, 1225.0], [86.5, 1226.0], [86.6, 1228.0], [86.7, 1230.0], [86.8, 1232.0], [86.9, 1234.0], [87.0, 1236.0], [87.1, 1238.0], [87.2, 1240.0], [87.3, 1241.0], [87.4, 1243.0], [87.5, 1245.0], [87.6, 1247.0], [87.7, 1249.0], [87.8, 1251.0], [87.9, 1252.0], [88.0, 1254.0], [88.1, 1256.0], [88.2, 1258.0], [88.3, 1259.0], [88.4, 1263.0], [88.5, 1265.0], [88.6, 1266.0], [88.7, 1268.0], [88.8, 1270.0], [88.9, 1272.0], [89.0, 1274.0], [89.1, 1276.0], [89.2, 1279.0], [89.3, 1281.0], [89.4, 1283.0], [89.5, 1284.0], [89.6, 1285.0], [89.7, 1287.0], [89.8, 1289.0], [89.9, 1291.0], [90.0, 1293.0], [90.1, 1295.0], [90.2, 1298.0], [90.3, 1299.0], [90.4, 1302.0], [90.5, 1303.0], [90.6, 1304.0], [90.7, 1308.0], [90.8, 1310.0], [90.9, 1313.0], [91.0, 1315.0], [91.1, 1318.0], [91.2, 1320.0], [91.3, 1322.0], [91.4, 1324.0], [91.5, 1327.0], [91.6, 1330.0], [91.7, 1335.0], [91.8, 1338.0], [91.9, 1342.0], [92.0, 1344.0], [92.1, 1346.0], [92.2, 1350.0], [92.3, 1353.0], [92.4, 1355.0], [92.5, 1357.0], [92.6, 1360.0], [92.7, 1362.0], [92.8, 1366.0], [92.9, 1369.0], [93.0, 1372.0], [93.1, 1376.0], [93.2, 1378.0], [93.3, 1381.0], [93.4, 1383.0], [93.5, 1385.0], [93.6, 1390.0], [93.7, 1392.0], [93.8, 1394.0], [93.9, 1398.0], [94.0, 1400.0], [94.1, 1403.0], [94.2, 1405.0], [94.3, 1407.0], [94.4, 1411.0], [94.5, 1417.0], [94.6, 1420.0], [94.7, 1423.0], [94.8, 1425.0], [94.9, 1428.0], [95.0, 1432.0], [95.1, 1436.0], [95.2, 1438.0], [95.3, 1441.0], [95.4, 1444.0], [95.5, 1448.0], [95.6, 1453.0], [95.7, 1457.0], [95.8, 1460.0], [95.9, 1465.0], [96.0, 1468.0], [96.1, 1471.0], [96.2, 1473.0], [96.3, 1476.0], [96.4, 1479.0], [96.5, 1481.0], [96.6, 1484.0], [96.7, 1488.0], [96.8, 1493.0], [96.9, 1499.0], [97.0, 1501.0], [97.1, 1507.0], [97.2, 1513.0], [97.3, 1517.0], [97.4, 1522.0], [97.5, 1526.0], [97.6, 1533.0], [97.7, 1539.0], [97.8, 1544.0], [97.9, 1549.0], [98.0, 1554.0], [98.1, 1560.0], [98.2, 1565.0], [98.3, 1577.0], [98.4, 1589.0], [98.5, 1602.0], [98.6, 1621.0], [98.7, 1637.0], [98.8, 1658.0], [98.9, 1674.0], [99.0, 1688.0], [99.1, 1710.0], [99.2, 1734.0], [99.3, 1758.0], [99.4, 1782.0], [99.5, 1805.0], [99.6, 1847.0], [99.7, 1864.0], [99.8, 1879.0], [99.9, 2006.0]], "isOverall": false, "label": "(ScalabilityTesting)CreatePaymentToken_tr_ForGivenPaymentSource", "isController": true}, {"data": [[0.0, 31.0], [0.1, 65.0], [0.2, 192.0], [0.3, 278.0], [0.4, 281.0], [0.5, 285.0], [0.6, 288.0], [0.7, 293.0], [0.8, 302.0], [0.9, 308.0], [1.0, 311.0], [1.1, 313.0], [1.2, 314.0], [1.3, 315.0], [1.4, 316.0], [1.5, 317.0], [1.6, 318.0], [1.7, 318.0], [1.8, 319.0], [1.9, 319.0], [2.0, 320.0], [2.1, 321.0], [2.2, 321.0], [2.3, 321.0], [2.4, 322.0], [2.5, 323.0], [2.6, 323.0], [2.7, 324.0], [2.8, 324.0], [2.9, 324.0], [3.0, 325.0], [3.1, 326.0], [3.2, 326.0], [3.3, 326.0], [3.4, 327.0], [3.5, 327.0], [3.6, 328.0], [3.7, 328.0], [3.8, 329.0], [3.9, 329.0], [4.0, 330.0], [4.1, 330.0], [4.2, 330.0], [4.3, 331.0], [4.4, 331.0], [4.5, 332.0], [4.6, 332.0], [4.7, 332.0], [4.8, 333.0], [4.9, 333.0], [5.0, 334.0], [5.1, 334.0], [5.2, 334.0], [5.3, 335.0], [5.4, 335.0], [5.5, 336.0], [5.6, 336.0], [5.7, 337.0], [5.8, 337.0], [5.9, 337.0], [6.0, 338.0], [6.1, 338.0], [6.2, 339.0], [6.3, 339.0], [6.4, 340.0], [6.5, 340.0], [6.6, 341.0], [6.7, 341.0], [6.8, 341.0], [6.9, 342.0], [7.0, 342.0], [7.1, 343.0], [7.2, 343.0], [7.3, 344.0], [7.4, 344.0], [7.5, 345.0], [7.6, 345.0], [7.7, 346.0], [7.8, 346.0], [7.9, 347.0], [8.0, 347.0], [8.1, 347.0], [8.2, 348.0], [8.3, 349.0], [8.4, 349.0], [8.5, 349.0], [8.6, 350.0], [8.7, 351.0], [8.8, 351.0], [8.9, 352.0], [9.0, 352.0], [9.1, 353.0], [9.2, 353.0], [9.3, 354.0], [9.4, 354.0], [9.5, 355.0], [9.6, 355.0], [9.7, 356.0], [9.8, 357.0], [9.9, 357.0], [10.0, 358.0], [10.1, 359.0], [10.2, 359.0], [10.3, 360.0], [10.4, 360.0], [10.5, 361.0], [10.6, 362.0], [10.7, 363.0], [10.8, 363.0], [10.9, 364.0], [11.0, 364.0], [11.1, 365.0], [11.2, 365.0], [11.3, 366.0], [11.4, 366.0], [11.5, 367.0], [11.6, 368.0], [11.7, 369.0], [11.8, 369.0], [11.9, 370.0], [12.0, 371.0], [12.1, 371.0], [12.2, 372.0], [12.3, 373.0], [12.4, 375.0], [12.5, 376.0], [12.6, 376.0], [12.7, 377.0], [12.8, 378.0], [12.9, 378.0], [13.0, 379.0], [13.1, 380.0], [13.2, 381.0], [13.3, 381.0], [13.4, 382.0], [13.5, 383.0], [13.6, 384.0], [13.7, 385.0], [13.8, 386.0], [13.9, 386.0], [14.0, 387.0], [14.1, 388.0], [14.2, 389.0], [14.3, 390.0], [14.4, 391.0], [14.5, 392.0], [14.6, 393.0], [14.7, 394.0], [14.8, 395.0], [14.9, 395.0], [15.0, 396.0], [15.1, 397.0], [15.2, 398.0], [15.3, 400.0], [15.4, 400.0], [15.5, 401.0], [15.6, 402.0], [15.7, 403.0], [15.8, 404.0], [15.9, 404.0], [16.0, 405.0], [16.1, 406.0], [16.2, 407.0], [16.3, 408.0], [16.4, 408.0], [16.5, 409.0], [16.6, 409.0], [16.7, 411.0], [16.8, 412.0], [16.9, 413.0], [17.0, 414.0], [17.1, 415.0], [17.2, 416.0], [17.3, 417.0], [17.4, 418.0], [17.5, 418.0], [17.6, 419.0], [17.7, 421.0], [17.8, 421.0], [17.9, 422.0], [18.0, 423.0], [18.1, 423.0], [18.2, 424.0], [18.3, 426.0], [18.4, 426.0], [18.5, 427.0], [18.6, 428.0], [18.7, 429.0], [18.8, 429.0], [18.9, 430.0], [19.0, 432.0], [19.1, 432.0], [19.2, 434.0], [19.3, 434.0], [19.4, 435.0], [19.5, 435.0], [19.6, 437.0], [19.7, 437.0], [19.8, 438.0], [19.9, 439.0], [20.0, 440.0], [20.1, 440.0], [20.2, 441.0], [20.3, 442.0], [20.4, 443.0], [20.5, 443.0], [20.6, 444.0], [20.7, 445.0], [20.8, 445.0], [20.9, 446.0], [21.0, 447.0], [21.1, 448.0], [21.2, 449.0], [21.3, 450.0], [21.4, 451.0], [21.5, 452.0], [21.6, 452.0], [21.7, 453.0], [21.8, 454.0], [21.9, 455.0], [22.0, 456.0], [22.1, 457.0], [22.2, 458.0], [22.3, 459.0], [22.4, 460.0], [22.5, 460.0], [22.6, 461.0], [22.7, 462.0], [22.8, 463.0], [22.9, 463.0], [23.0, 464.0], [23.1, 465.0], [23.2, 466.0], [23.3, 467.0], [23.4, 467.0], [23.5, 468.0], [23.6, 469.0], [23.7, 469.0], [23.8, 470.0], [23.9, 471.0], [24.0, 472.0], [24.1, 474.0], [24.2, 475.0], [24.3, 475.0], [24.4, 477.0], [24.5, 477.0], [24.6, 478.0], [24.7, 479.0], [24.8, 479.0], [24.9, 480.0], [25.0, 481.0], [25.1, 482.0], [25.2, 483.0], [25.3, 484.0], [25.4, 485.0], [25.5, 486.0], [25.6, 487.0], [25.7, 488.0], [25.8, 490.0], [25.9, 490.0], [26.0, 491.0], [26.1, 492.0], [26.2, 493.0], [26.3, 494.0], [26.4, 495.0], [26.5, 496.0], [26.6, 497.0], [26.7, 498.0], [26.8, 499.0], [26.9, 501.0], [27.0, 502.0], [27.1, 503.0], [27.2, 504.0], [27.3, 505.0], [27.4, 506.0], [27.5, 507.0], [27.6, 508.0], [27.7, 509.0], [27.8, 510.0], [27.9, 512.0], [28.0, 513.0], [28.1, 514.0], [28.2, 515.0], [28.3, 516.0], [28.4, 517.0], [28.5, 518.0], [28.6, 519.0], [28.7, 521.0], [28.8, 522.0], [28.9, 524.0], [29.0, 525.0], [29.1, 526.0], [29.2, 527.0], [29.3, 528.0], [29.4, 529.0], [29.5, 530.0], [29.6, 532.0], [29.7, 532.0], [29.8, 534.0], [29.9, 535.0], [30.0, 536.0], [30.1, 538.0], [30.2, 539.0], [30.3, 541.0], [30.4, 542.0], [30.5, 543.0], [30.6, 545.0], [30.7, 547.0], [30.8, 548.0], [30.9, 550.0], [31.0, 551.0], [31.1, 553.0], [31.2, 555.0], [31.3, 556.0], [31.4, 558.0], [31.5, 559.0], [31.6, 560.0], [31.7, 563.0], [31.8, 564.0], [31.9, 565.0], [32.0, 566.0], [32.1, 568.0], [32.2, 569.0], [32.3, 570.0], [32.4, 572.0], [32.5, 573.0], [32.6, 574.0], [32.7, 576.0], [32.8, 577.0], [32.9, 577.0], [33.0, 579.0], [33.1, 580.0], [33.2, 581.0], [33.3, 583.0], [33.4, 585.0], [33.5, 586.0], [33.6, 588.0], [33.7, 589.0], [33.8, 590.0], [33.9, 591.0], [34.0, 593.0], [34.1, 593.0], [34.2, 595.0], [34.3, 596.0], [34.4, 598.0], [34.5, 599.0], [34.6, 601.0], [34.7, 602.0], [34.8, 603.0], [34.9, 604.0], [35.0, 606.0], [35.1, 606.0], [35.2, 608.0], [35.3, 609.0], [35.4, 610.0], [35.5, 611.0], [35.6, 612.0], [35.7, 613.0], [35.8, 615.0], [35.9, 616.0], [36.0, 617.0], [36.1, 618.0], [36.2, 619.0], [36.3, 620.0], [36.4, 621.0], [36.5, 622.0], [36.6, 623.0], [36.7, 624.0], [36.8, 625.0], [36.9, 626.0], [37.0, 627.0], [37.1, 628.0], [37.2, 629.0], [37.3, 630.0], [37.4, 630.0], [37.5, 632.0], [37.6, 633.0], [37.7, 634.0], [37.8, 635.0], [37.9, 636.0], [38.0, 637.0], [38.1, 638.0], [38.2, 639.0], [38.3, 639.0], [38.4, 640.0], [38.5, 641.0], [38.6, 642.0], [38.7, 643.0], [38.8, 644.0], [38.9, 645.0], [39.0, 646.0], [39.1, 646.0], [39.2, 647.0], [39.3, 648.0], [39.4, 649.0], [39.5, 650.0], [39.6, 651.0], [39.7, 652.0], [39.8, 653.0], [39.9, 654.0], [40.0, 655.0], [40.1, 656.0], [40.2, 657.0], [40.3, 658.0], [40.4, 659.0], [40.5, 661.0], [40.6, 662.0], [40.7, 662.0], [40.8, 663.0], [40.9, 665.0], [41.0, 666.0], [41.1, 667.0], [41.2, 669.0], [41.3, 669.0], [41.4, 670.0], [41.5, 672.0], [41.6, 673.0], [41.7, 674.0], [41.8, 675.0], [41.9, 676.0], [42.0, 678.0], [42.1, 679.0], [42.2, 679.0], [42.3, 680.0], [42.4, 681.0], [42.5, 682.0], [42.6, 683.0], [42.7, 685.0], [42.8, 687.0], [42.9, 688.0], [43.0, 689.0], [43.1, 690.0], [43.2, 692.0], [43.3, 693.0], [43.4, 694.0], [43.5, 695.0], [43.6, 697.0], [43.7, 699.0], [43.8, 700.0], [43.9, 701.0], [44.0, 704.0], [44.1, 705.0], [44.2, 707.0], [44.3, 708.0], [44.4, 709.0], [44.5, 710.0], [44.6, 712.0], [44.7, 713.0], [44.8, 715.0], [44.9, 717.0], [45.0, 719.0], [45.1, 720.0], [45.2, 721.0], [45.3, 723.0], [45.4, 725.0], [45.5, 726.0], [45.6, 727.0], [45.7, 729.0], [45.8, 731.0], [45.9, 732.0], [46.0, 734.0], [46.1, 736.0], [46.2, 738.0], [46.3, 739.0], [46.4, 741.0], [46.5, 743.0], [46.6, 745.0], [46.7, 746.0], [46.8, 748.0], [46.9, 749.0], [47.0, 751.0], [47.1, 753.0], [47.2, 754.0], [47.3, 755.0], [47.4, 758.0], [47.5, 759.0], [47.6, 761.0], [47.7, 763.0], [47.8, 765.0], [47.9, 768.0], [48.0, 769.0], [48.1, 771.0], [48.2, 772.0], [48.3, 774.0], [48.4, 776.0], [48.5, 777.0], [48.6, 780.0], [48.7, 782.0], [48.8, 784.0], [48.9, 786.0], [49.0, 788.0], [49.1, 790.0], [49.2, 791.0], [49.3, 793.0], [49.4, 794.0], [49.5, 795.0], [49.6, 797.0], [49.7, 799.0], [49.8, 800.0], [49.9, 801.0], [50.0, 802.0], [50.1, 804.0], [50.2, 806.0], [50.3, 807.0], [50.4, 809.0], [50.5, 811.0], [50.6, 812.0], [50.7, 813.0], [50.8, 815.0], [50.9, 817.0], [51.0, 819.0], [51.1, 820.0], [51.2, 821.0], [51.3, 823.0], [51.4, 824.0], [51.5, 826.0], [51.6, 828.0], [51.7, 830.0], [51.8, 831.0], [51.9, 833.0], [52.0, 835.0], [52.1, 837.0], [52.2, 838.0], [52.3, 840.0], [52.4, 842.0], [52.5, 844.0], [52.6, 845.0], [52.7, 847.0], [52.8, 848.0], [52.9, 849.0], [53.0, 851.0], [53.1, 854.0], [53.2, 855.0], [53.3, 857.0], [53.4, 858.0], [53.5, 860.0], [53.6, 862.0], [53.7, 864.0], [53.8, 865.0], [53.9, 867.0], [54.0, 868.0], [54.1, 870.0], [54.2, 872.0], [54.3, 873.0], [54.4, 875.0], [54.5, 876.0], [54.6, 876.0], [54.7, 878.0], [54.8, 880.0], [54.9, 882.0], [55.0, 884.0], [55.1, 885.0], [55.2, 887.0], [55.3, 888.0], [55.4, 890.0], [55.5, 891.0], [55.6, 893.0], [55.7, 895.0], [55.8, 896.0], [55.9, 899.0], [56.0, 901.0], [56.1, 903.0], [56.2, 905.0], [56.3, 906.0], [56.4, 908.0], [56.5, 910.0], [56.6, 912.0], [56.7, 914.0], [56.8, 917.0], [56.9, 920.0], [57.0, 923.0], [57.1, 926.0], [57.2, 928.0], [57.3, 931.0], [57.4, 933.0], [57.5, 935.0], [57.6, 936.0], [57.7, 939.0], [57.8, 941.0], [57.9, 943.0], [58.0, 946.0], [58.1, 948.0], [58.2, 949.0], [58.3, 952.0], [58.4, 956.0], [58.5, 957.0], [58.6, 960.0], [58.7, 962.0], [58.8, 964.0], [58.9, 966.0], [59.0, 969.0], [59.1, 972.0], [59.2, 975.0], [59.3, 977.0], [59.4, 979.0], [59.5, 982.0], [59.6, 983.0], [59.7, 985.0], [59.8, 987.0], [59.9, 988.0], [60.0, 989.0], [60.1, 990.0], [60.2, 991.0], [60.3, 993.0], [60.4, 995.0], [60.5, 997.0], [60.6, 999.0], [60.7, 1000.0], [60.8, 1002.0], [60.9, 1003.0], [61.0, 1005.0], [61.1, 1007.0], [61.2, 1008.0], [61.3, 1010.0], [61.4, 1011.0], [61.5, 1013.0], [61.6, 1015.0], [61.7, 1016.0], [61.8, 1017.0], [61.9, 1019.0], [62.0, 1020.0], [62.1, 1022.0], [62.2, 1023.0], [62.3, 1025.0], [62.4, 1028.0], [62.5, 1030.0], [62.6, 1031.0], [62.7, 1033.0], [62.8, 1035.0], [62.9, 1036.0], [63.0, 1038.0], [63.1, 1040.0], [63.2, 1042.0], [63.3, 1044.0], [63.4, 1047.0], [63.5, 1048.0], [63.6, 1050.0], [63.7, 1052.0], [63.8, 1054.0], [63.9, 1056.0], [64.0, 1057.0], [64.1, 1059.0], [64.2, 1060.0], [64.3, 1061.0], [64.4, 1062.0], [64.5, 1063.0], [64.6, 1065.0], [64.7, 1066.0], [64.8, 1067.0], [64.9, 1069.0], [65.0, 1071.0], [65.1, 1072.0], [65.2, 1073.0], [65.3, 1074.0], [65.4, 1074.0], [65.5, 1075.0], [65.6, 1076.0], [65.7, 1077.0], [65.8, 1078.0], [65.9, 1079.0], [66.0, 1080.0], [66.1, 1081.0], [66.2, 1082.0], [66.3, 1083.0], [66.4, 1084.0], [66.5, 1085.0], [66.6, 1085.0], [66.7, 1086.0], [66.8, 1087.0], [66.9, 1087.0], [67.0, 1088.0], [67.1, 1089.0], [67.2, 1090.0], [67.3, 1090.0], [67.4, 1091.0], [67.5, 1093.0], [67.6, 1093.0], [67.7, 1094.0], [67.8, 1095.0], [67.9, 1095.0], [68.0, 1096.0], [68.1, 1097.0], [68.2, 1098.0], [68.3, 1098.0], [68.4, 1099.0], [68.5, 1100.0], [68.6, 1100.0], [68.7, 1101.0], [68.8, 1101.0], [68.9, 1102.0], [69.0, 1103.0], [69.1, 1103.0], [69.2, 1104.0], [69.3, 1104.0], [69.4, 1105.0], [69.5, 1105.0], [69.6, 1105.0], [69.7, 1106.0], [69.8, 1106.0], [69.9, 1107.0], [70.0, 1108.0], [70.1, 1109.0], [70.2, 1109.0], [70.3, 1110.0], [70.4, 1111.0], [70.5, 1111.0], [70.6, 1112.0], [70.7, 1112.0], [70.8, 1113.0], [70.9, 1113.0], [71.0, 1114.0], [71.1, 1114.0], [71.2, 1115.0], [71.3, 1115.0], [71.4, 1116.0], [71.5, 1116.0], [71.6, 1117.0], [71.7, 1117.0], [71.8, 1117.0], [71.9, 1118.0], [72.0, 1119.0], [72.1, 1119.0], [72.2, 1119.0], [72.3, 1120.0], [72.4, 1120.0], [72.5, 1121.0], [72.6, 1121.0], [72.7, 1122.0], [72.8, 1122.0], [72.9, 1123.0], [73.0, 1123.0], [73.1, 1124.0], [73.2, 1124.0], [73.3, 1125.0], [73.4, 1126.0], [73.5, 1126.0], [73.6, 1126.0], [73.7, 1127.0], [73.8, 1128.0], [73.9, 1128.0], [74.0, 1129.0], [74.1, 1129.0], [74.2, 1129.0], [74.3, 1130.0], [74.4, 1130.0], [74.5, 1131.0], [74.6, 1131.0], [74.7, 1132.0], [74.8, 1133.0], [74.9, 1133.0], [75.0, 1134.0], [75.1, 1134.0], [75.2, 1135.0], [75.3, 1135.0], [75.4, 1135.0], [75.5, 1136.0], [75.6, 1136.0], [75.7, 1137.0], [75.8, 1137.0], [75.9, 1138.0], [76.0, 1138.0], [76.1, 1138.0], [76.2, 1139.0], [76.3, 1139.0], [76.4, 1140.0], [76.5, 1140.0], [76.6, 1141.0], [76.7, 1141.0], [76.8, 1142.0], [76.9, 1143.0], [77.0, 1143.0], [77.1, 1144.0], [77.2, 1144.0], [77.3, 1145.0], [77.4, 1145.0], [77.5, 1146.0], [77.6, 1146.0], [77.7, 1147.0], [77.8, 1147.0], [77.9, 1148.0], [78.0, 1149.0], [78.1, 1149.0], [78.2, 1150.0], [78.3, 1150.0], [78.4, 1151.0], [78.5, 1151.0], [78.6, 1152.0], [78.7, 1152.0], [78.8, 1153.0], [78.9, 1153.0], [79.0, 1154.0], [79.1, 1154.0], [79.2, 1155.0], [79.3, 1155.0], [79.4, 1156.0], [79.5, 1157.0], [79.6, 1157.0], [79.7, 1158.0], [79.8, 1158.0], [79.9, 1158.0], [80.0, 1159.0], [80.1, 1160.0], [80.2, 1160.0], [80.3, 1161.0], [80.4, 1162.0], [80.5, 1163.0], [80.6, 1163.0], [80.7, 1163.0], [80.8, 1164.0], [80.9, 1165.0], [81.0, 1165.0], [81.1, 1166.0], [81.2, 1167.0], [81.3, 1167.0], [81.4, 1168.0], [81.5, 1168.0], [81.6, 1169.0], [81.7, 1170.0], [81.8, 1170.0], [81.9, 1171.0], [82.0, 1171.0], [82.1, 1172.0], [82.2, 1173.0], [82.3, 1174.0], [82.4, 1174.0], [82.5, 1175.0], [82.6, 1175.0], [82.7, 1176.0], [82.8, 1177.0], [82.9, 1178.0], [83.0, 1179.0], [83.1, 1180.0], [83.2, 1181.0], [83.3, 1182.0], [83.4, 1183.0], [83.5, 1184.0], [83.6, 1185.0], [83.7, 1185.0], [83.8, 1186.0], [83.9, 1188.0], [84.0, 1189.0], [84.1, 1190.0], [84.2, 1192.0], [84.3, 1193.0], [84.4, 1194.0], [84.5, 1195.0], [84.6, 1196.0], [84.7, 1198.0], [84.8, 1199.0], [84.9, 1201.0], [85.0, 1203.0], [85.1, 1205.0], [85.2, 1206.0], [85.3, 1208.0], [85.4, 1209.0], [85.5, 1210.0], [85.6, 1211.0], [85.7, 1213.0], [85.8, 1215.0], [85.9, 1215.0], [86.0, 1217.0], [86.1, 1219.0], [86.2, 1221.0], [86.3, 1223.0], [86.4, 1224.0], [86.5, 1226.0], [86.6, 1228.0], [86.7, 1228.0], [86.8, 1231.0], [86.9, 1233.0], [87.0, 1236.0], [87.1, 1237.0], [87.2, 1239.0], [87.3, 1241.0], [87.4, 1242.0], [87.5, 1243.0], [87.6, 1246.0], [87.7, 1248.0], [87.8, 1250.0], [87.9, 1252.0], [88.0, 1254.0], [88.1, 1255.0], [88.2, 1256.0], [88.3, 1259.0], [88.4, 1261.0], [88.5, 1264.0], [88.6, 1266.0], [88.7, 1267.0], [88.8, 1269.0], [88.9, 1272.0], [89.0, 1274.0], [89.1, 1276.0], [89.2, 1279.0], [89.3, 1280.0], [89.4, 1282.0], [89.5, 1284.0], [89.6, 1285.0], [89.7, 1287.0], [89.8, 1289.0], [89.9, 1291.0], [90.0, 1293.0], [90.1, 1295.0], [90.2, 1297.0], [90.3, 1299.0], [90.4, 1302.0], [90.5, 1303.0], [90.6, 1304.0], [90.7, 1308.0], [90.8, 1310.0], [90.9, 1313.0], [91.0, 1316.0], [91.1, 1319.0], [91.2, 1320.0], [91.3, 1323.0], [91.4, 1325.0], [91.5, 1328.0], [91.6, 1332.0], [91.7, 1336.0], [91.8, 1338.0], [91.9, 1342.0], [92.0, 1344.0], [92.1, 1347.0], [92.2, 1351.0], [92.3, 1354.0], [92.4, 1355.0], [92.5, 1359.0], [92.6, 1360.0], [92.7, 1363.0], [92.8, 1367.0], [92.9, 1370.0], [93.0, 1373.0], [93.1, 1376.0], [93.2, 1378.0], [93.3, 1381.0], [93.4, 1384.0], [93.5, 1386.0], [93.6, 1391.0], [93.7, 1392.0], [93.8, 1396.0], [93.9, 1398.0], [94.0, 1401.0], [94.1, 1403.0], [94.2, 1406.0], [94.3, 1408.0], [94.4, 1413.0], [94.5, 1418.0], [94.6, 1420.0], [94.7, 1423.0], [94.8, 1426.0], [94.9, 1430.0], [95.0, 1432.0], [95.1, 1436.0], [95.2, 1439.0], [95.3, 1441.0], [95.4, 1444.0], [95.5, 1448.0], [95.6, 1453.0], [95.7, 1457.0], [95.8, 1462.0], [95.9, 1466.0], [96.0, 1469.0], [96.1, 1471.0], [96.2, 1473.0], [96.3, 1477.0], [96.4, 1479.0], [96.5, 1481.0], [96.6, 1484.0], [96.7, 1489.0], [96.8, 1493.0], [96.9, 1499.0], [97.0, 1504.0], [97.1, 1507.0], [97.2, 1514.0], [97.3, 1518.0], [97.4, 1522.0], [97.5, 1528.0], [97.6, 1533.0], [97.7, 1539.0], [97.8, 1544.0], [97.9, 1549.0], [98.0, 1554.0], [98.1, 1560.0], [98.2, 1568.0], [98.3, 1577.0], [98.4, 1589.0], [98.5, 1602.0], [98.6, 1623.0], [98.7, 1637.0], [98.8, 1658.0], [98.9, 1674.0], [99.0, 1688.0], [99.1, 1710.0], [99.2, 1734.0], [99.3, 1758.0], [99.4, 1782.0], [99.5, 1804.0], [99.6, 1847.0], [99.7, 1861.0], [99.8, 1879.0], [99.9, 2006.0]], "isOverall": false, "label": "(ScalabilityTesting)Create payment token for a given payment source", "isController": false}, {"data": [[0.0, 306.0], [0.1, 306.0], [0.2, 306.0], [0.3, 306.0], [0.4, 306.0], [0.5, 310.0], [0.6, 310.0], [0.7, 310.0], [0.8, 310.0], [0.9, 310.0], [1.0, 311.0], [1.1, 311.0], [1.2, 311.0], [1.3, 311.0], [1.4, 311.0], [1.5, 311.0], [1.6, 311.0], [1.7, 311.0], [1.8, 311.0], [1.9, 311.0], [2.0, 313.0], [2.1, 313.0], [2.2, 313.0], [2.3, 313.0], [2.4, 313.0], [2.5, 313.0], [2.6, 313.0], [2.7, 313.0], [2.8, 313.0], [2.9, 313.0], [3.0, 314.0], [3.1, 314.0], [3.2, 314.0], [3.3, 314.0], [3.4, 314.0], [3.5, 314.0], [3.6, 314.0], [3.7, 314.0], [3.8, 314.0], [3.9, 314.0], [4.0, 315.0], [4.1, 315.0], [4.2, 315.0], [4.3, 315.0], [4.4, 315.0], [4.5, 318.0], [4.6, 318.0], [4.7, 318.0], [4.8, 318.0], [4.9, 318.0], [5.0, 319.0], [5.1, 319.0], [5.2, 319.0], [5.3, 319.0], [5.4, 319.0], [5.5, 319.0], [5.6, 319.0], [5.7, 319.0], [5.8, 319.0], [5.9, 319.0], [6.0, 319.0], [6.1, 319.0], [6.2, 319.0], [6.3, 319.0], [6.4, 319.0], [6.5, 320.0], [6.6, 320.0], [6.7, 320.0], [6.8, 320.0], [6.9, 320.0], [7.0, 320.0], [7.1, 320.0], [7.2, 320.0], [7.3, 320.0], [7.4, 320.0], [7.5, 320.0], [7.6, 320.0], [7.7, 320.0], [7.8, 320.0], [7.9, 320.0], [8.0, 320.0], [8.1, 320.0], [8.2, 320.0], [8.3, 320.0], [8.4, 320.0], [8.5, 320.0], [8.6, 320.0], [8.7, 320.0], [8.8, 320.0], [8.9, 320.0], [9.0, 320.0], [9.1, 320.0], [9.2, 320.0], [9.3, 320.0], [9.4, 320.0], [9.5, 321.0], [9.6, 321.0], [9.7, 321.0], [9.8, 321.0], [9.9, 321.0], [10.0, 321.0], [10.1, 321.0], [10.2, 321.0], [10.3, 321.0], [10.4, 321.0], [10.5, 321.0], [10.6, 321.0], [10.7, 321.0], [10.8, 321.0], [10.9, 321.0], [11.0, 321.0], [11.1, 321.0], [11.2, 321.0], [11.3, 321.0], [11.4, 321.0], [11.5, 321.0], [11.6, 321.0], [11.7, 321.0], [11.8, 321.0], [11.9, 321.0], [12.0, 321.0], [12.1, 321.0], [12.2, 321.0], [12.3, 321.0], [12.4, 321.0], [12.5, 321.0], [12.6, 321.0], [12.7, 321.0], [12.8, 321.0], [12.9, 321.0], [13.0, 321.0], [13.1, 321.0], [13.2, 321.0], [13.3, 321.0], [13.4, 321.0], [13.5, 322.0], [13.6, 322.0], [13.7, 322.0], [13.8, 322.0], [13.9, 322.0], [14.0, 323.0], [14.1, 323.0], [14.2, 323.0], [14.3, 323.0], [14.4, 323.0], [14.5, 323.0], [14.6, 323.0], [14.7, 323.0], [14.8, 323.0], [14.9, 323.0], [15.0, 324.0], [15.1, 324.0], [15.2, 324.0], [15.3, 324.0], [15.4, 324.0], [15.5, 324.0], [15.6, 324.0], [15.7, 324.0], [15.8, 324.0], [15.9, 324.0], [16.0, 324.0], [16.1, 324.0], [16.2, 324.0], [16.3, 324.0], [16.4, 324.0], [16.5, 324.0], [16.6, 324.0], [16.7, 324.0], [16.8, 324.0], [16.9, 324.0], [17.0, 325.0], [17.1, 325.0], [17.2, 325.0], [17.3, 325.0], [17.4, 325.0], [17.5, 325.0], [17.6, 325.0], [17.7, 325.0], [17.8, 325.0], [17.9, 325.0], [18.0, 325.0], [18.1, 325.0], [18.2, 325.0], [18.3, 325.0], [18.4, 325.0], [18.5, 326.0], [18.6, 326.0], [18.7, 326.0], [18.8, 326.0], [18.9, 326.0], [19.0, 326.0], [19.1, 326.0], [19.2, 326.0], [19.3, 326.0], [19.4, 326.0], [19.5, 327.0], [19.6, 327.0], [19.7, 327.0], [19.8, 327.0], [19.9, 327.0], [20.0, 327.0], [20.1, 327.0], [20.2, 327.0], [20.3, 327.0], [20.4, 327.0], [20.5, 327.0], [20.6, 327.0], [20.7, 327.0], [20.8, 327.0], [20.9, 327.0], [21.0, 328.0], [21.1, 328.0], [21.2, 328.0], [21.3, 328.0], [21.4, 328.0], [21.5, 328.0], [21.6, 328.0], [21.7, 328.0], [21.8, 328.0], [21.9, 328.0], [22.0, 328.0], [22.1, 328.0], [22.2, 328.0], [22.3, 328.0], [22.4, 328.0], [22.5, 330.0], [22.6, 330.0], [22.7, 330.0], [22.8, 330.0], [22.9, 330.0], [23.0, 330.0], [23.1, 330.0], [23.2, 330.0], [23.3, 330.0], [23.4, 330.0], [23.5, 330.0], [23.6, 330.0], [23.7, 330.0], [23.8, 330.0], [23.9, 330.0], [24.0, 331.0], [24.1, 331.0], [24.2, 331.0], [24.3, 331.0], [24.4, 331.0], [24.5, 332.0], [24.6, 332.0], [24.7, 332.0], [24.8, 332.0], [24.9, 332.0], [25.0, 333.0], [25.1, 333.0], [25.2, 333.0], [25.3, 333.0], [25.4, 333.0], [25.5, 333.0], [25.6, 333.0], [25.7, 333.0], [25.8, 333.0], [25.9, 333.0], [26.0, 334.0], [26.1, 334.0], [26.2, 334.0], [26.3, 334.0], [26.4, 334.0], [26.5, 335.0], [26.6, 335.0], [26.7, 335.0], [26.8, 335.0], [26.9, 335.0], [27.0, 335.0], [27.1, 335.0], [27.2, 335.0], [27.3, 335.0], [27.4, 335.0], [27.5, 335.0], [27.6, 335.0], [27.7, 335.0], [27.8, 335.0], [27.9, 335.0], [28.0, 336.0], [28.1, 336.0], [28.2, 336.0], [28.3, 336.0], [28.4, 336.0], [28.5, 336.0], [28.6, 336.0], [28.7, 336.0], [28.8, 336.0], [28.9, 336.0], [29.0, 336.0], [29.1, 336.0], [29.2, 336.0], [29.3, 336.0], [29.4, 336.0], [29.5, 336.0], [29.6, 336.0], [29.7, 336.0], [29.8, 336.0], [29.9, 336.0], [30.0, 336.0], [30.1, 336.0], [30.2, 336.0], [30.3, 336.0], [30.4, 336.0], [30.5, 337.0], [30.6, 337.0], [30.7, 337.0], [30.8, 337.0], [30.9, 337.0], [31.0, 337.0], [31.1, 337.0], [31.2, 337.0], [31.3, 337.0], [31.4, 337.0], [31.5, 337.0], [31.6, 337.0], [31.7, 337.0], [31.8, 337.0], [31.9, 337.0], [32.0, 338.0], [32.1, 338.0], [32.2, 338.0], [32.3, 338.0], [32.4, 338.0], [32.5, 338.0], [32.6, 338.0], [32.7, 338.0], [32.8, 338.0], [32.9, 338.0], [33.0, 338.0], [33.1, 338.0], [33.2, 338.0], [33.3, 338.0], [33.4, 338.0], [33.5, 338.0], [33.6, 338.0], [33.7, 338.0], [33.8, 338.0], [33.9, 338.0], [34.0, 339.0], [34.1, 339.0], [34.2, 339.0], [34.3, 339.0], [34.4, 339.0], [34.5, 339.0], [34.6, 339.0], [34.7, 339.0], [34.8, 339.0], [34.9, 339.0], [35.0, 339.0], [35.1, 339.0], [35.2, 339.0], [35.3, 339.0], [35.4, 339.0], [35.5, 341.0], [35.6, 341.0], [35.7, 341.0], [35.8, 341.0], [35.9, 341.0], [36.0, 342.0], [36.1, 342.0], [36.2, 342.0], [36.3, 342.0], [36.4, 342.0], [36.5, 344.0], [36.6, 344.0], [36.7, 344.0], [36.8, 344.0], [36.9, 344.0], [37.0, 344.0], [37.1, 344.0], [37.2, 344.0], [37.3, 344.0], [37.4, 344.0], [37.5, 344.0], [37.6, 344.0], [37.7, 344.0], [37.8, 344.0], [37.9, 344.0], [38.0, 346.0], [38.1, 346.0], [38.2, 346.0], [38.3, 346.0], [38.4, 346.0], [38.5, 346.0], [38.6, 346.0], [38.7, 346.0], [38.8, 346.0], [38.9, 346.0], [39.0, 346.0], [39.1, 346.0], [39.2, 346.0], [39.3, 346.0], [39.4, 346.0], [39.5, 346.0], [39.6, 346.0], [39.7, 346.0], [39.8, 346.0], [39.9, 346.0], [40.0, 347.0], [40.1, 347.0], [40.2, 347.0], [40.3, 347.0], [40.4, 347.0], [40.5, 347.0], [40.6, 347.0], [40.7, 347.0], [40.8, 347.0], [40.9, 347.0], [41.0, 347.0], [41.1, 347.0], [41.2, 347.0], [41.3, 347.0], [41.4, 347.0], [41.5, 348.0], [41.6, 348.0], [41.7, 348.0], [41.8, 348.0], [41.9, 348.0], [42.0, 348.0], [42.1, 348.0], [42.2, 348.0], [42.3, 348.0], [42.4, 348.0], [42.5, 348.0], [42.6, 348.0], [42.7, 348.0], [42.8, 348.0], [42.9, 348.0], [43.0, 349.0], [43.1, 349.0], [43.2, 349.0], [43.3, 349.0], [43.4, 349.0], [43.5, 349.0], [43.6, 349.0], [43.7, 349.0], [43.8, 349.0], [43.9, 349.0], [44.0, 349.0], [44.1, 349.0], [44.2, 349.0], [44.3, 349.0], [44.4, 349.0], [44.5, 349.0], [44.6, 349.0], [44.7, 349.0], [44.8, 349.0], [44.9, 349.0], [45.0, 349.0], [45.1, 349.0], [45.2, 349.0], [45.3, 349.0], [45.4, 349.0], [45.5, 350.0], [45.6, 350.0], [45.7, 350.0], [45.8, 350.0], [45.9, 350.0], [46.0, 351.0], [46.1, 351.0], [46.2, 351.0], [46.3, 351.0], [46.4, 351.0], [46.5, 351.0], [46.6, 351.0], [46.7, 351.0], [46.8, 351.0], [46.9, 351.0], [47.0, 354.0], [47.1, 354.0], [47.2, 354.0], [47.3, 354.0], [47.4, 354.0], [47.5, 354.0], [47.6, 354.0], [47.7, 354.0], [47.8, 354.0], [47.9, 354.0], [48.0, 356.0], [48.1, 356.0], [48.2, 356.0], [48.3, 356.0], [48.4, 356.0], [48.5, 356.0], [48.6, 356.0], [48.7, 356.0], [48.8, 356.0], [48.9, 356.0], [49.0, 357.0], [49.1, 357.0], [49.2, 357.0], [49.3, 357.0], [49.4, 357.0], [49.5, 359.0], [49.6, 359.0], [49.7, 359.0], [49.8, 359.0], [49.9, 359.0], [50.0, 359.0], [50.1, 359.0], [50.2, 359.0], [50.3, 359.0], [50.4, 359.0], [50.5, 360.0], [50.6, 360.0], [50.7, 360.0], [50.8, 360.0], [50.9, 360.0], [51.0, 363.0], [51.1, 363.0], [51.2, 363.0], [51.3, 363.0], [51.4, 363.0], [51.5, 363.0], [51.6, 363.0], [51.7, 363.0], [51.8, 363.0], [51.9, 363.0], [52.0, 363.0], [52.1, 363.0], [52.2, 363.0], [52.3, 363.0], [52.4, 363.0], [52.5, 366.0], [52.6, 366.0], [52.7, 366.0], [52.8, 366.0], [52.9, 366.0], [53.0, 367.0], [53.1, 367.0], [53.2, 367.0], [53.3, 367.0], [53.4, 367.0], [53.5, 367.0], [53.6, 367.0], [53.7, 367.0], [53.8, 367.0], [53.9, 367.0], [54.0, 368.0], [54.1, 368.0], [54.2, 368.0], [54.3, 368.0], [54.4, 368.0], [54.5, 369.0], [54.6, 369.0], [54.7, 369.0], [54.8, 369.0], [54.9, 369.0], [55.0, 373.0], [55.1, 373.0], [55.2, 373.0], [55.3, 373.0], [55.4, 373.0], [55.5, 375.0], [55.6, 375.0], [55.7, 375.0], [55.8, 375.0], [55.9, 375.0], [56.0, 375.0], [56.1, 375.0], [56.2, 375.0], [56.3, 375.0], [56.4, 375.0], [56.5, 376.0], [56.6, 376.0], [56.7, 376.0], [56.8, 376.0], [56.9, 376.0], [57.0, 378.0], [57.1, 378.0], [57.2, 378.0], [57.3, 378.0], [57.4, 378.0], [57.5, 378.0], [57.6, 378.0], [57.7, 378.0], [57.8, 378.0], [57.9, 378.0], [58.0, 381.0], [58.1, 381.0], [58.2, 381.0], [58.3, 381.0], [58.4, 381.0], [58.5, 386.0], [58.6, 386.0], [58.7, 386.0], [58.8, 386.0], [58.9, 386.0], [59.0, 387.0], [59.1, 387.0], [59.2, 387.0], [59.3, 387.0], [59.4, 387.0], [59.5, 387.0], [59.6, 387.0], [59.7, 387.0], [59.8, 387.0], [59.9, 387.0], [60.0, 391.0], [60.1, 391.0], [60.2, 391.0], [60.3, 391.0], [60.4, 391.0], [60.5, 392.0], [60.6, 392.0], [60.7, 392.0], [60.8, 392.0], [60.9, 392.0], [61.0, 394.0], [61.1, 394.0], [61.2, 394.0], [61.3, 394.0], [61.4, 394.0], [61.5, 400.0], [61.6, 400.0], [61.7, 400.0], [61.8, 400.0], [61.9, 400.0], [62.0, 401.0], [62.1, 401.0], [62.2, 401.0], [62.3, 401.0], [62.4, 401.0], [62.5, 407.0], [62.6, 407.0], [62.7, 407.0], [62.8, 407.0], [62.9, 407.0], [63.0, 413.0], [63.1, 413.0], [63.2, 413.0], [63.3, 413.0], [63.4, 413.0], [63.5, 414.0], [63.6, 414.0], [63.7, 414.0], [63.8, 414.0], [63.9, 414.0], [64.0, 415.0], [64.1, 415.0], [64.2, 415.0], [64.3, 415.0], [64.4, 415.0], [64.5, 416.0], [64.6, 416.0], [64.7, 416.0], [64.8, 416.0], [64.9, 416.0], [65.0, 419.0], [65.1, 419.0], [65.2, 419.0], [65.3, 419.0], [65.4, 419.0], [65.5, 438.0], [65.6, 438.0], [65.7, 438.0], [65.8, 438.0], [65.9, 438.0], [66.0, 449.0], [66.1, 449.0], [66.2, 449.0], [66.3, 449.0], [66.4, 449.0], [66.5, 456.0], [66.6, 456.0], [66.7, 456.0], [66.8, 456.0], [66.9, 456.0], [67.0, 459.0], [67.1, 459.0], [67.2, 459.0], [67.3, 459.0], [67.4, 459.0], [67.5, 460.0], [67.6, 460.0], [67.7, 460.0], [67.8, 460.0], [67.9, 460.0], [68.0, 460.0], [68.1, 460.0], [68.2, 460.0], [68.3, 460.0], [68.4, 460.0], [68.5, 464.0], [68.6, 464.0], [68.7, 464.0], [68.8, 464.0], [68.9, 464.0], [69.0, 506.0], [69.1, 506.0], [69.2, 506.0], [69.3, 506.0], [69.4, 506.0], [69.5, 510.0], [69.6, 510.0], [69.7, 510.0], [69.8, 510.0], [69.9, 510.0], [70.0, 514.0], [70.1, 514.0], [70.2, 514.0], [70.3, 514.0], [70.4, 514.0], [70.5, 519.0], [70.6, 519.0], [70.7, 519.0], [70.8, 519.0], [70.9, 519.0], [71.0, 522.0], [71.1, 522.0], [71.2, 522.0], [71.3, 522.0], [71.4, 522.0], [71.5, 523.0], [71.6, 523.0], [71.7, 523.0], [71.8, 523.0], [71.9, 523.0], [72.0, 530.0], [72.1, 530.0], [72.2, 530.0], [72.3, 530.0], [72.4, 530.0], [72.5, 547.0], [72.6, 547.0], [72.7, 547.0], [72.8, 547.0], [72.9, 547.0], [73.0, 550.0], [73.1, 550.0], [73.2, 550.0], [73.3, 550.0], [73.4, 550.0], [73.5, 558.0], [73.6, 558.0], [73.7, 558.0], [73.8, 558.0], [73.9, 558.0], [74.0, 562.0], [74.1, 562.0], [74.2, 562.0], [74.3, 562.0], [74.4, 562.0], [74.5, 562.0], [74.6, 562.0], [74.7, 562.0], [74.8, 562.0], [74.9, 562.0], [75.0, 564.0], [75.1, 564.0], [75.2, 564.0], [75.3, 564.0], [75.4, 564.0], [75.5, 581.0], [75.6, 581.0], [75.7, 581.0], [75.8, 581.0], [75.9, 581.0], [76.0, 595.0], [76.1, 595.0], [76.2, 595.0], [76.3, 595.0], [76.4, 595.0], [76.5, 601.0], [76.6, 601.0], [76.7, 601.0], [76.8, 601.0], [76.9, 601.0], [77.0, 610.0], [77.1, 610.0], [77.2, 610.0], [77.3, 610.0], [77.4, 610.0], [77.5, 611.0], [77.6, 611.0], [77.7, 611.0], [77.8, 611.0], [77.9, 611.0], [78.0, 625.0], [78.1, 625.0], [78.2, 625.0], [78.3, 625.0], [78.4, 625.0], [78.5, 626.0], [78.6, 626.0], [78.7, 626.0], [78.8, 626.0], [78.9, 626.0], [79.0, 684.0], [79.1, 684.0], [79.2, 684.0], [79.3, 684.0], [79.4, 684.0], [79.5, 843.0], [79.6, 843.0], [79.7, 843.0], [79.8, 843.0], [79.9, 843.0], [80.0, 847.0], [80.1, 847.0], [80.2, 847.0], [80.3, 847.0], [80.4, 847.0], [80.5, 848.0], [80.6, 848.0], [80.7, 848.0], [80.8, 848.0], [80.9, 848.0], [81.0, 849.0], [81.1, 849.0], [81.2, 849.0], [81.3, 849.0], [81.4, 849.0], [81.5, 849.0], [81.6, 849.0], [81.7, 849.0], [81.8, 849.0], [81.9, 849.0], [82.0, 852.0], [82.1, 852.0], [82.2, 852.0], [82.3, 852.0], [82.4, 852.0], [82.5, 855.0], [82.6, 855.0], [82.7, 855.0], [82.8, 855.0], [82.9, 855.0], [83.0, 855.0], [83.1, 855.0], [83.2, 855.0], [83.3, 855.0], [83.4, 855.0], [83.5, 855.0], [83.6, 855.0], [83.7, 855.0], [83.8, 855.0], [83.9, 855.0], [84.0, 855.0], [84.1, 855.0], [84.2, 855.0], [84.3, 855.0], [84.4, 855.0], [84.5, 856.0], [84.6, 856.0], [84.7, 856.0], [84.8, 856.0], [84.9, 856.0], [85.0, 858.0], [85.1, 858.0], [85.2, 858.0], [85.3, 858.0], [85.4, 858.0], [85.5, 862.0], [85.6, 862.0], [85.7, 862.0], [85.8, 862.0], [85.9, 862.0], [86.0, 862.0], [86.1, 862.0], [86.2, 862.0], [86.3, 862.0], [86.4, 862.0], [86.5, 863.0], [86.6, 863.0], [86.7, 863.0], [86.8, 863.0], [86.9, 863.0], [87.0, 864.0], [87.1, 864.0], [87.2, 864.0], [87.3, 864.0], [87.4, 864.0], [87.5, 864.0], [87.6, 864.0], [87.7, 864.0], [87.8, 864.0], [87.9, 864.0], [88.0, 864.0], [88.1, 864.0], [88.2, 864.0], [88.3, 864.0], [88.4, 864.0], [88.5, 865.0], [88.6, 865.0], [88.7, 865.0], [88.8, 865.0], [88.9, 865.0], [89.0, 865.0], [89.1, 865.0], [89.2, 865.0], [89.3, 865.0], [89.4, 865.0], [89.5, 866.0], [89.6, 866.0], [89.7, 866.0], [89.8, 866.0], [89.9, 866.0], [90.0, 866.0], [90.1, 866.0], [90.2, 866.0], [90.3, 866.0], [90.4, 866.0], [90.5, 867.0], [90.6, 867.0], [90.7, 867.0], [90.8, 867.0], [90.9, 867.0], [91.0, 868.0], [91.1, 868.0], [91.2, 868.0], [91.3, 868.0], [91.4, 868.0], [91.5, 872.0], [91.6, 872.0], [91.7, 872.0], [91.8, 872.0], [91.9, 872.0], [92.0, 874.0], [92.1, 874.0], [92.2, 874.0], [92.3, 874.0], [92.4, 874.0], [92.5, 876.0], [92.6, 876.0], [92.7, 876.0], [92.8, 876.0], [92.9, 876.0], [93.0, 876.0], [93.1, 876.0], [93.2, 876.0], [93.3, 876.0], [93.4, 876.0], [93.5, 882.0], [93.6, 882.0], [93.7, 882.0], [93.8, 882.0], [93.9, 882.0], [94.0, 884.0], [94.1, 884.0], [94.2, 884.0], [94.3, 884.0], [94.4, 884.0], [94.5, 884.0], [94.6, 884.0], [94.7, 884.0], [94.8, 884.0], [94.9, 884.0], [95.0, 885.0], [95.1, 885.0], [95.2, 885.0], [95.3, 885.0], [95.4, 885.0], [95.5, 904.0], [95.6, 904.0], [95.7, 904.0], [95.8, 904.0], [95.9, 904.0], [96.0, 918.0], [96.1, 918.0], [96.2, 918.0], [96.3, 918.0], [96.4, 918.0], [96.5, 925.0], [96.6, 925.0], [96.7, 925.0], [96.8, 925.0], [96.9, 925.0], [97.0, 925.0], [97.1, 925.0], [97.2, 925.0], [97.3, 925.0], [97.4, 925.0], [97.5, 934.0], [97.6, 934.0], [97.7, 934.0], [97.8, 934.0], [97.9, 934.0], [98.0, 939.0], [98.1, 939.0], [98.2, 939.0], [98.3, 939.0], [98.4, 939.0], [98.5, 955.0], [98.6, 955.0], [98.7, 955.0], [98.8, 955.0], [98.9, 955.0], [99.0, 965.0], [99.1, 965.0], [99.2, 965.0], [99.3, 965.0], [99.4, 965.0], [99.5, 992.0], [99.6, 992.0], [99.7, 992.0], [99.8, 992.0], [99.9, 992.0]], "isOverall": false, "label": "Get Auth Token", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 2372.0, "series": [{"data": [[2100.0, 1.0], [0.0, 121.0], [2200.0, 2.0], [2300.0, 1.0], [600.0, 1320.0], [700.0, 862.0], [200.0, 83.0], [800.0, 894.0], [900.0, 705.0], [1000.0, 1152.0], [1100.0, 2372.0], [300.0, 2086.0], [1200.0, 807.0], [1300.0, 535.0], [1400.0, 431.0], [1500.0, 228.0], [400.0, 1648.0], [1600.0, 81.0], [100.0, 7.0], [1700.0, 62.0], [1800.0, 55.0], [1900.0, 7.0], [500.0, 1108.0], [2000.0, 11.0]], "isOverall": false, "label": "(ScalabilityTesting)CreatePaymentToken_tr_ForGivenPaymentSource", "isController": true}, {"data": [[2100.0, 1.0], [0.0, 22.0], [2200.0, 2.0], [2300.0, 1.0], [600.0, 1338.0], [700.0, 873.0], [200.0, 83.0], [800.0, 895.0], [900.0, 683.0], [1000.0, 1133.0], [1100.0, 2363.0], [300.0, 2102.0], [1200.0, 795.0], [1300.0, 527.0], [1400.0, 431.0], [1500.0, 227.0], [400.0, 1668.0], [1600.0, 81.0], [100.0, 7.0], [1700.0, 62.0], [1800.0, 54.0], [1900.0, 7.0], [500.0, 1114.0], [2000.0, 11.0]], "isOverall": false, "label": "(ScalabilityTesting)Create payment token for a given payment source", "isController": false}, {"data": [[300.0, 123.0], [600.0, 6.0], [800.0, 32.0], [400.0, 15.0], [900.0, 9.0], [500.0, 15.0]], "isOverall": false, "label": "Get Auth Token", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 2300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 128.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 10304.0, "series": [{"data": [[0.0, 4004.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 10304.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 444.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 128.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 84.5862611431569, "minX": 1.71751704E12, "maxY": 196.41182810815857, "series": [{"data": [[1.7175171E12, 196.41182810815857], [1.71751716E12, 84.5862611431569], [1.71751704E12, 149.57874605022448]], "isOverall": false, "label": "CreatePaymentToken_ScalabilityTesting", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71751716E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 2.0, "maxY": 1800.0, "series": [{"data": [[2.0, 903.0], [3.0, 990.0], [4.0, 162.0], [5.0, 161.5], [8.0, 156.83333333333331], [9.0, 161.5], [10.0, 178.5], [12.0, 409.4], [14.0, 999.0], [15.0, 993.0], [16.0, 319.66666666666663], [17.0, 158.0], [20.0, 167.5], [23.0, 160.5], [24.0, 161.0], [25.0, 164.5], [26.0, 215.33333333333331], [27.0, 0.0], [28.0, 317.0], [30.0, 312.0], [31.0, 597.5], [35.0, 350.3333333333333], [34.0, 642.5], [36.0, 233.33333333333331], [39.0, 218.33333333333331], [43.0, 0.0], [44.0, 317.2], [47.0, 323.5], [48.0, 321.5], [50.0, 332.0], [52.0, 271.6666666666667], [53.0, 157.5], [55.0, 273.8], [57.0, 329.0], [56.0, 370.0], [59.0, 972.0], [58.0, 364.0], [60.0, 979.0], [63.0, 453.0], [62.0, 1207.0], [67.0, 480.0], [71.0, 226.33333333333331], [70.0, 221.0], [69.0, 449.3333333333333], [68.0, 1019.0], [75.0, 330.0], [74.0, 400.0], [72.0, 185.0], [79.0, 392.0], [78.0, 180.5], [77.0, 322.6666666666667], [81.0, 355.84615384615387], [82.0, 329.625], [83.0, 492.75], [80.0, 282.25], [84.0, 472.9090909090909], [85.0, 460.49999999999994], [86.0, 461.9], [87.0, 414.875], [88.0, 644.0], [89.0, 430.33333333333337], [90.0, 612.5555555555555], [91.0, 417.62500000000006], [92.0, 489.6], [93.0, 385.25], [94.0, 612.2], [95.0, 428.8], [96.0, 275.33333333333337], [97.0, 651.5], [98.0, 610.8571428571428], [100.0, 578.2], [101.0, 448.3636363636363], [102.0, 563.6666666666666], [103.0, 628.0], [104.0, 355.8571428571429], [105.0, 332.75], [106.0, 566.4], [107.0, 487.85714285714283], [108.0, 466.875], [109.0, 570.5], [110.0, 565.75], [111.0, 528.1818181818182], [112.0, 476.61538461538464], [113.0, 521.5333333333332], [114.0, 403.7692307692307], [115.0, 427.1818181818182], [116.0, 481.72727272727275], [117.0, 473.16666666666663], [118.0, 559.1428571428571], [119.0, 771.5], [122.0, 632.5], [123.0, 516.8333333333334], [121.0, 781.0], [120.0, 771.5], [125.0, 448.85714285714283], [126.0, 411.75], [127.0, 365.4], [124.0, 304.0], [128.0, 432.3636363636364], [133.0, 352.0], [134.0, 519.6666666666666], [135.0, 473.0], [132.0, 933.0], [131.0, 513.0], [136.0, 412.25], [137.0, 654.0], [138.0, 406.75], [141.0, 559.0909090909091], [143.0, 473.6363636363636], [142.0, 646.3333333333334], [140.0, 647.0], [139.0, 1234.0], [144.0, 477.5], [147.0, 345.0], [148.0, 318.0], [151.0, 645.75], [150.0, 219.0], [149.0, 547.25], [146.0, 188.5], [145.0, 376.8], [153.0, 506.0], [154.0, 578.0], [155.0, 340.0], [157.0, 431.6666666666667], [156.0, 591.0], [158.0, 465.0], [159.0, 470.6], [152.0, 663.5], [161.0, 613.25], [163.0, 727.0], [164.0, 458.6363636363637], [165.0, 523.0], [166.0, 592.0], [167.0, 687.8], [162.0, 876.0], [160.0, 688.0], [168.0, 301.0], [169.0, 466.2], [171.0, 506.5833333333333], [172.0, 308.25], [173.0, 349.85], [174.0, 396.6666666666667], [175.0, 432.75], [170.0, 580.8571428571429], [176.0, 395.6842105263158], [177.0, 364.5], [178.0, 374.4444444444445], [179.0, 353.7083333333333], [180.0, 394.8947368421052], [181.0, 381.9230769230769], [182.0, 375.76], [183.0, 387.40000000000003], [184.0, 374.8947368421052], [185.0, 380.3684210526315], [186.0, 329.55], [187.0, 337.7777777777777], [188.0, 480.21428571428567], [189.0, 473.46666666666664], [190.0, 445.22222222222223], [191.0, 442.3939393939393], [192.0, 426.19999999999993], [193.0, 398.2758620689656], [194.0, 365.45454545454544], [195.0, 395.61290322580635], [196.0, 360.48], [197.0, 365.54999999999995], [198.0, 341.0], [199.0, 376.090909090909], [200.0, 366.92], [202.0, 487.0], [204.0, 342.5], [205.0, 363.6666666666667], [206.0, 416.0666666666666], [207.0, 542.6666666666666], [203.0, 669.5], [201.0, 480.27272727272725], [208.0, 347.77777777777777], [211.0, 462.3333333333333], [214.0, 597.4444444444445], [212.0, 450.6666666666667], [213.0, 330.3333333333333], [215.0, 353.0], [210.0, 616.4285714285714], [216.0, 447.16666666666663], [217.0, 317.25], [218.0, 462.5], [219.0, 373.25], [221.0, 401.0], [223.0, 408.75], [220.0, 420.2857142857143], [224.0, 470.344827586207], [226.0, 280.0], [227.0, 420.0], [228.0, 274.8888888888889], [229.0, 349.0], [231.0, 439.0], [230.0, 340.0], [225.0, 561.6666666666666], [232.0, 330.6666666666667], [233.0, 391.0], [234.0, 439.75], [235.0, 519.4285714285714], [237.0, 460.4], [238.0, 603.5294117647059], [239.0, 669.1250000000001], [236.0, 531.0], [241.0, 557.5454545454545], [244.0, 450.57142857142856], [243.0, 529.5454545454545], [242.0, 120.33333333333334], [245.0, 495.28571428571433], [247.0, 353.0], [246.0, 436.75], [248.0, 382.7], [249.0, 502.99999999999994], [251.0, 387.8], [252.0, 520.9285714285713], [253.0, 458.66666666666663], [254.0, 502.00000000000006], [255.0, 418.0], [257.0, 330.51612903225805], [256.0, 354.88888888888886], [258.0, 361.61538461538464], [259.0, 361.5185185185184], [260.0, 427.0869565217391], [261.0, 450.14705882352945], [262.0, 473.7727272727273], [263.0, 371.70270270270265], [264.0, 476.0476190476191], [270.0, 494.24000000000007], [271.0, 375.325], [268.0, 423.03636363636366], [269.0, 375.89473684210526], [265.0, 373.1764705882353], [266.0, 370.26666666666665], [267.0, 339.46428571428567], [273.0, 444.4035087719298], [272.0, 394.0], [274.0, 411.9428571428571], [275.0, 415.1176470588234], [276.0, 419.6875], [277.0, 429.77551020408174], [278.0, 352.25], [279.0, 416.2131147540984], [280.0, 424.8653846153846], [286.0, 577.0], [287.0, 471.71999999999997], [284.0, 518.0555555555555], [285.0, 589.4999999999999], [281.0, 407.1714285714286], [282.0, 470.89473684210526], [283.0, 471.93939393939394], [289.0, 416.5], [288.0, 370.5], [291.0, 466.44117647058823], [290.0, 434.0], [292.0, 465.8], [293.0, 619.4], [294.0, 523.1481481481482], [295.0, 549.5], [297.0, 410.75], [303.0, 559.2], [296.0, 495.4827586206897], [298.0, 293.8], [302.0, 484.1666666666667], [301.0, 494.63157894736827], [300.0, 470.1034482758621], [305.0, 534.8405797101449], [304.0, 656.75], [306.0, 465.9], [307.0, 492.90000000000003], [308.0, 541.0714285714286], [309.0, 476.2727272727272], [310.0, 378.0], [311.0, 618.5714285714287], [313.0, 563.3888888888889], [312.0, 1072.0], [318.0, 677.8888888888889], [319.0, 707.7777777777777], [316.0, 541.6666666666666], [317.0, 575.8], [314.0, 706.86301369863], [315.0, 587.3333333333334], [322.0, 640.102564102564], [321.0, 371.4], [320.0, 799.2105263157896], [323.0, 834.8181818181819], [332.0, 710.6875000000001], [333.0, 481.6], [335.0, 728.7941176470588], [334.0, 849.8372093023257], [324.0, 745.5833333333334], [328.0, 734.3333333333334], [327.0, 713.2352941176472], [326.0, 604.1999999999999], [325.0, 798.3333333333334], [331.0, 724.4000000000001], [330.0, 736.6875], [329.0, 787.9838709677421], [338.0, 520.75], [337.0, 703.5588235294118], [336.0, 986.0], [339.0, 605.8571428571428], [348.0, 491.18749999999994], [349.0, 478.8474576271186], [350.0, 514.0357142857143], [351.0, 660.9935897435896], [340.0, 395.6000000000001], [341.0, 437.85], [342.0, 562.6666666666666], [343.0, 515.5641025641027], [345.0, 580.6727272727273], [346.0, 505.71794871794873], [347.0, 579.7701149425284], [344.0, 570.536231884058], [353.0, 576.8799999999999], [352.0, 755.8823529411762], [354.0, 694.5384615384614], [355.0, 607.6274509803923], [356.0, 768.2206896551726], [357.0, 613.622641509434], [358.0, 624.6458333333333], [359.0, 543.0208333333334], [360.0, 535.6], [366.0, 762.4166666666665], [367.0, 644.6086956521738], [364.0, 793.3023255813954], [365.0, 598.8214285714286], [361.0, 942.2817848410759], [362.0, 504.5882352941176], [363.0, 590.6279069767443], [369.0, 837.170731707317], [368.0, 794.5714285714286], [370.0, 1410.6470588235295], [371.0, 1301.8124999999998], [372.0, 1348.6874999999998], [373.0, 1275.7333333333336], [374.0, 1407.5555555555554], [375.0, 1495.1875000000002], [376.0, 1376.379310344828], [382.0, 1111.7777777777778], [383.0, 1086.4516129032259], [380.0, 921.8800000000001], [381.0, 921.9333333333335], [377.0, 1243.1428571428573], [378.0, 1167.8709677419354], [379.0, 1024.0625000000002], [387.0, 1225.3333333333333], [385.0, 1028.269624573379], [384.0, 1210.3666666666666], [386.0, 1109.5714285714287], [388.0, 1070.0], [390.0, 1378.0], [391.0, 1041.8], [392.0, 1246.0000000000002], [399.0, 1299.8], [396.0, 1046.5], [397.0, 1172.0], [393.0, 1070.0], [395.0, 994.0], [394.0, 1649.0], [403.0, 965.0], [401.0, 1284.5], [400.0, 1261.0], [407.0, 1467.6666666666667], [402.0, 1342.5454545454543], [404.0, 972.0], [405.0, 981.0], [413.0, 1238.1891891891894], [412.0, 1181.0], [415.0, 1120.9999999999998], [408.0, 1424.5], [414.0, 1509.3200000000002], [409.0, 1028.6666666666667], [410.0, 1015.0], [411.0, 1175.476357267951], [417.0, 1333.3333333333333], [416.0, 1243.1999999999998], [418.0, 1238.1333333333332], [419.0, 1302.6666666666667], [420.0, 1403.0], [421.0, 1302.0666666666668], [422.0, 1184.4545454545455], [423.0, 1119.857142857143], [424.0, 1126.888888888889], [431.0, 1277.0], [428.0, 1070.0], [429.0, 1079.0], [430.0, 1111.4], [425.0, 1197.7272727272727], [426.0, 1163.142857142857], [427.0, 1297.7777777777778], [444.0, 1240.4545454545455], [433.0, 1308.9230769230767], [432.0, 1178.0], [438.0, 1520.4], [439.0, 1062.0], [435.0, 1309.5454545454545], [434.0, 1352.8260869565217], [437.0, 1200.5555555555557], [436.0, 1438.0], [440.0, 1161.1000000000001], [443.0, 1130.6], [446.0, 1280.3333333333333], [447.0, 1076.0], [442.0, 1404.0], [441.0, 1324.4444444444443], [449.0, 1090.0], [451.0, 1044.3333333333333], [450.0, 1275.0], [460.0, 1250.75], [462.0, 1091.3333333333333], [461.0, 1356.8], [463.0, 1095.7142857142858], [452.0, 1154.3333333333333], [448.0, 1258.0], [453.0, 1107.75], [455.0, 1267.9999999999998], [456.0, 1024.6666666666667], [457.0, 1094.0], [458.0, 1319.3333333333333], [459.0, 1182.857142857143], [472.0, 1178.75], [465.0, 1253.4782608695655], [464.0, 998.8], [471.0, 1257.0], [470.0, 1266.111111111111], [466.0, 1274.7894736842102], [476.0, 1256.7142857142858], [477.0, 1082.25], [478.0, 1136.2], [479.0, 1549.625], [468.0, 1154.625], [469.0, 1313.4], [475.0, 1025.25], [474.0, 1267.4545454545455], [473.0, 1123.2], [481.0, 1113.8333333333333], [480.0, 1171.25], [482.0, 1219.6764705882354], [483.0, 1363.3333333333335], [484.0, 1171.0], [485.0, 1182.866666666667], [486.0, 1230.8], [487.0, 1200.2499999999995], [488.0, 1258.8181818181815], [494.0, 1211.0666666666666], [495.0, 1180.0714285714282], [493.0, 1301.0], [492.0, 1386.3333333333333], [489.0, 1234.0], [490.0, 1542.8], [491.0, 1360.0], [503.0, 1489.5], [496.0, 1221.5789473684208], [498.0, 1800.0], [500.0, 1224.0], [501.0, 1393.25], [502.0, 1505.0], [504.0, 1588.6666666666667], [511.0, 1481.25], [508.0, 1308.3333333333333], [509.0, 1288.0], [510.0, 1495.0], [519.0, 1187.0], [513.0, 1572.1666666666667], [527.0, 1586.0], [514.0, 1326.3333333333333], [516.0, 1163.0], [517.0, 1792.0], [534.0, 1112.0], [533.0, 1705.5], [535.0, 1582.0], [532.0, 1412.5], [531.0, 1353.3333333333333], [530.0, 1421.4], [538.0, 1545.153846153846], [537.0, 1753.5], [539.0, 1175.5], [541.0, 1181.0], [540.0, 1647.5], [542.0, 1422.0], [543.0, 1384.5], [529.0, 1510.25], [528.0, 1431.0], [526.0, 1478.0], [525.0, 1524.6363636363635], [524.0, 1288.0], [522.0, 1224.1666666666665], [550.0, 1166.1666666666667], [545.0, 1165.0], [544.0, 1173.3333333333333], [546.0, 1284.8333333333333], [547.0, 1090.5], [549.0, 1382.3333333333333], [548.0, 1398.0], [560.0, 1324.7857142857144], [571.0, 1302.2727272727273], [570.0, 1257.0555555555554], [568.0, 1234.6666666666667], [569.0, 1275.8095238095236], [561.0, 1289.5], [562.0, 1345.7142857142858], [563.0, 1303.6], [564.0, 1097.3333333333333], [565.0, 1571.0], [566.0, 1252.3333333333333], [567.0, 1260.4374999999998], [552.0, 1557.0], [553.0, 1356.857142857143], [555.0, 1394.4999999999995], [556.0, 1307.0], [559.0, 1305.0]], "isOverall": false, "label": "(ScalabilityTesting)CreatePaymentToken_tr_ForGivenPaymentSource", "isController": true}, {"data": [[347.13464572330105, 826.8941628369557]], "isOverall": false, "label": "(ScalabilityTesting)CreatePaymentToken_tr_ForGivenPaymentSource-Aggregated", "isController": true}, {"data": [[2.0, 323.0], [3.0, 317.0], [4.0, 324.0], [5.0, 323.0], [8.0, 313.6666666666667], [9.0, 323.0], [10.0, 357.0], [12.0, 341.5], [14.0, 331.0], [15.0, 337.0], [16.0, 319.66666666666663], [17.0, 316.0], [20.0, 335.0], [23.0, 321.0], [24.0, 322.0], [25.0, 329.0], [26.0, 323.0], [28.0, 317.0], [30.0, 312.0], [31.0, 324.5], [35.0, 350.3333333333333], [34.0, 321.5], [36.0, 350.0], [39.0, 327.5], [44.0, 317.2], [47.0, 323.5], [48.0, 321.5], [50.0, 332.0], [52.0, 326.0], [53.0, 315.0], [55.0, 342.25], [57.0, 329.0], [56.0, 370.0], [59.0, 397.0], [58.0, 364.0], [60.0, 413.0], [63.0, 453.0], [62.0, 586.0], [67.0, 480.0], [71.0, 339.5], [70.0, 331.5], [69.0, 387.44444444444446], [68.0, 466.0], [75.0, 330.0], [74.0, 400.0], [72.0, 370.0], [79.0, 392.0], [78.0, 361.0], [77.0, 322.6666666666667], [81.0, 355.84615384615387], [82.0, 329.625], [83.0, 412.875], [80.0, 376.3333333333333], [84.0, 472.9090909090909], [85.0, 404.16666666666663], [86.0, 426.09999999999997], [87.0, 414.875], [88.0, 644.0], [89.0, 430.33333333333337], [90.0, 612.5555555555555], [91.0, 417.62500000000006], [92.0, 489.6], [93.0, 440.2857142857143], [94.0, 612.2], [95.0, 428.8], [96.0, 413.0], [97.0, 651.5], [98.0, 712.6666666666666], [100.0, 578.2], [101.0, 493.19999999999993], [102.0, 563.6666666666666], [103.0, 628.0], [104.0, 415.1666666666667], [105.0, 443.6666666666667], [106.0, 566.4], [107.0, 569.1666666666667], [108.0, 427.24999999999994], [109.0, 570.5], [110.0, 565.75], [111.0, 492.1818181818182], [112.0, 445.61538461538464], [113.0, 521.5333333333332], [114.0, 403.7692307692307], [115.0, 427.1818181818182], [116.0, 481.72727272727275], [117.0, 473.16666666666663], [118.0, 507.2857142857143], [119.0, 595.0], [122.0, 632.5], [123.0, 516.8333333333334], [121.0, 595.0], [120.0, 586.5], [125.0, 448.85714285714283], [126.0, 411.75], [127.0, 456.75], [124.0, 608.0], [128.0, 432.3636363636364], [133.0, 352.0], [134.0, 519.6666666666666], [135.0, 473.0], [132.0, 600.5], [131.0, 547.2], [136.0, 412.25], [137.0, 497.75], [138.0, 406.75], [141.0, 559.0909090909091], [142.0, 549.1428571428571], [143.0, 542.0], [140.0, 647.0], [139.0, 654.0], [144.0, 477.5], [147.0, 345.0], [148.0, 445.2], [151.0, 645.75], [150.0, 328.5], [149.0, 547.25], [146.0, 377.0], [145.0, 471.0], [153.0, 402.0], [154.0, 457.6666666666667], [155.0, 340.0], [157.0, 431.6666666666667], [156.0, 591.0], [158.0, 465.0], [159.0, 470.6], [152.0, 663.5], [161.0, 613.25], [163.0, 607.6666666666666], [164.0, 424.3636363636364], [165.0, 523.0], [166.0, 592.0], [167.0, 555.8], [162.0, 692.5], [160.0, 688.0], [168.0, 301.0], [169.0, 466.2], [171.0, 506.5833333333333], [172.0, 411.0], [173.0, 349.85], [174.0, 416.5], [175.0, 432.75], [170.0, 533.1428571428572], [176.0, 395.6842105263158], [177.0, 364.49999999999994], [178.0, 355.3333333333334], [179.0, 353.7083333333333], [180.0, 394.8947368421052], [181.0, 397.2], [182.0, 375.76], [183.0, 387.40000000000003], [184.0, 374.8947368421052], [185.0, 380.3684210526315], [186.0, 329.55], [187.0, 337.7777777777777], [188.0, 480.21428571428567], [189.0, 461.43333333333334], [190.0, 445.22222222222223], [191.0, 422.78787878787875], [192.0, 408.59999999999997], [193.0, 412.50000000000006], [194.0, 365.45454545454544], [195.0, 395.61290322580635], [196.0, 375.5], [197.0, 365.54999999999995], [198.0, 341.0], [199.0, 376.090909090909], [200.0, 382.20833333333337], [202.0, 487.0], [204.0, 342.5], [205.0, 363.6666666666667], [206.0, 445.7857142857143], [207.0, 542.6666666666666], [203.0, 669.5], [201.0, 528.3], [208.0, 391.25], [211.0, 462.3333333333333], [214.0, 525.6666666666666], [212.0, 450.6666666666667], [213.0, 330.3333333333333], [215.0, 353.0], [210.0, 517.5714285714286], [216.0, 447.16666666666663], [217.0, 317.25], [218.0, 462.5], [219.0, 426.57142857142856], [221.0, 451.125], [223.0, 467.1428571428571], [220.0, 420.2857142857143], [224.0, 470.344827586207], [226.0, 336.0], [227.0, 472.5], [228.0, 309.25], [229.0, 349.0], [231.0, 439.0], [230.0, 340.0], [225.0, 469.0], [232.0, 330.6666666666667], [233.0, 391.0], [234.0, 439.75], [235.0, 481.0], [237.0, 405.4], [238.0, 603.4705882352941], [239.0, 596.7500000000001], [236.0, 531.0], [241.0, 557.5454545454545], [244.0, 401.42857142857144], [243.0, 504.6363636363636], [242.0, 180.5], [245.0, 577.8333333333334], [247.0, 353.0], [246.0, 436.75], [248.0, 425.22222222222223], [249.0, 544.9166666666666], [251.0, 387.8], [252.0, 520.9285714285713], [253.0, 458.66666666666663], [254.0, 502.00000000000006], [255.0, 418.0], [257.0, 330.51612903225805], [256.0, 354.88888888888886], [258.0, 350.2307692307692], [259.0, 361.5185185185184], [260.0, 420.69565217391306], [261.0, 433.82352941176475], [262.0, 466.90909090909093], [263.0, 371.7027027027027], [264.0, 476.0476190476191], [270.0, 482.76000000000005], [271.0, 384.94871794871796], [268.0, 430.87037037037027], [269.0, 386.05405405405406], [265.0, 384.4848484848485], [266.0, 370.26666666666665], [267.0, 352.037037037037], [273.0, 434.0175438596491], [272.0, 404.9444444444445], [274.0, 394.77142857142854], [275.0, 398.7058823529411], [276.0, 400.625], [277.0, 418.93877551020415], [278.0, 367.5652173913044], [279.0, 423.15000000000003], [280.0, 433.19607843137254], [286.0, 460.6], [287.0, 447.55999999999995], [284.0, 500.77777777777777], [285.0, 535.1666666666666], [281.0, 419.1470588235294], [282.0, 438.7368421052632], [283.0, 462.6818181818182], [289.0, 416.5], [288.0, 411.6666666666667], [291.0, 480.57575757575756], [290.0, 477.40000000000003], [292.0, 448.3666666666667], [293.0, 519.2], [294.0, 504.25925925925924], [295.0, 517.625], [297.0, 410.75], [303.0, 476.6], [296.0, 487.5172413793104], [298.0, 367.25], [302.0, 453.0], [301.0, 522.111111111111], [300.0, 495.7454545454545], [305.0, 532.1449275362318], [304.0, 574.5], [306.0, 517.6666666666666], [307.0, 518.8421052631579], [308.0, 561.1111111111111], [309.0, 498.95238095238085], [310.0, 378.0], [311.0, 632.9629629629628], [313.0, 535.3333333333334], [312.0, 925.0], [318.0, 653.1111111111111], [319.0, 707.7777777777777], [316.0, 398.3333333333333], [317.0, 569.3], [314.0, 716.6805555555554], [315.0, 568.0], [322.0, 656.9473684210525], [321.0, 464.25], [320.0, 783.3684210526317], [323.0, 813.5454545454545], [332.0, 699.4375000000001], [333.0, 457.4], [335.0, 715.2352941176471], [334.0, 841.4651162790699], [324.0, 745.5833333333334], [328.0, 734.3333333333334], [327.0, 696.0000000000001], [326.0, 567.4], [325.0, 733.1666666666667], [331.0, 745.7058823529412], [330.0, 728.6875], [329.0, 781.0483870967744], [338.0, 484.2], [337.0, 699.7941176470588], [336.0, 579.0], [339.0, 621.4857142857143], [348.0, 501.63829787234033], [349.0, 487.1034482758621], [350.0, 523.3818181818181], [351.0, 661.2585170340677], [340.0, 407.2352941176472], [341.0, 460.89473684210526], [342.0, 570.2702702702702], [343.0, 504.2820512820514], [345.0, 576.8181818181819], [346.0, 494.28205128205127], [347.0, 578.3333333333329], [344.0, 562.5217391304348], [353.0, 576.8799999999999], [352.0, 755.8823529411762], [354.0, 694.5384615384614], [355.0, 607.6274509803923], [356.0, 768.2206896551726], [357.0, 613.622641509434], [358.0, 624.6458333333333], [359.0, 543.0208333333334], [360.0, 535.6], [366.0, 762.4166666666665], [367.0, 644.6086956521738], [364.0, 793.3023255813954], [365.0, 598.8214285714286], [361.0, 942.2817848410759], [362.0, 504.5882352941176], [363.0, 590.6279069767443], [369.0, 837.170731707317], [368.0, 794.5714285714286], [370.0, 1410.6470588235295], [371.0, 1301.8124999999998], [372.0, 1348.6874999999998], [373.0, 1275.7333333333336], [374.0, 1407.5555555555554], [375.0, 1495.1875000000002], [376.0, 1376.379310344828], [382.0, 1111.7777777777778], [383.0, 1086.4516129032259], [380.0, 921.8800000000001], [381.0, 921.9333333333335], [377.0, 1243.1428571428573], [378.0, 1167.8709677419354], [379.0, 1024.0625000000002], [387.0, 1225.3333333333333], [385.0, 1028.2696245733791], [384.0, 1210.3666666666666], [386.0, 1109.5714285714287], [388.0, 1070.0], [390.0, 1378.0], [391.0, 1041.8], [392.0, 1246.0000000000002], [399.0, 1299.8], [396.0, 1046.5], [397.0, 1172.0], [393.0, 1070.0], [395.0, 994.0], [394.0, 1649.0], [403.0, 965.0], [401.0, 1284.5], [400.0, 1261.0], [407.0, 1467.6666666666667], [402.0, 1342.5454545454543], [404.0, 972.0], [405.0, 981.0], [413.0, 1238.1891891891894], [412.0, 1181.0], [415.0, 1120.9999999999998], [408.0, 1424.5], [414.0, 1509.3200000000002], [409.0, 1028.6666666666667], [410.0, 1015.0], [411.0, 1175.4763572679515], [417.0, 1333.3333333333333], [416.0, 1243.1999999999998], [418.0, 1238.1333333333332], [419.0, 1302.6666666666667], [420.0, 1403.0], [421.0, 1302.0666666666668], [422.0, 1184.4545454545455], [423.0, 1119.857142857143], [424.0, 1126.888888888889], [431.0, 1277.0], [428.0, 1072.25], [430.0, 1111.4], [425.0, 1197.7272727272727], [426.0, 1163.142857142857], [427.0, 1297.7777777777778], [444.0, 1240.4545454545455], [433.0, 1308.9230769230767], [432.0, 1178.0], [438.0, 1520.4], [439.0, 1062.0], [435.0, 1309.5454545454545], [434.0, 1352.8260869565217], [437.0, 1200.5555555555557], [436.0, 1438.0], [440.0, 1161.1000000000001], [443.0, 1130.6], [446.0, 1280.3333333333333], [447.0, 1076.0], [442.0, 1404.0], [441.0, 1324.4444444444443], [449.0, 1090.0], [451.0, 1044.3333333333333], [450.0, 1275.0], [460.0, 1250.75], [462.0, 1091.3333333333333], [461.0, 1356.8], [463.0, 1095.7142857142858], [452.0, 1154.3333333333333], [448.0, 1258.0], [453.0, 1107.75], [455.0, 1267.9999999999998], [456.0, 1024.6666666666667], [457.0, 1094.0], [458.0, 1319.3333333333333], [459.0, 1182.857142857143], [472.0, 1178.75], [465.0, 1253.4782608695655], [464.0, 998.8], [471.0, 1257.0], [470.0, 1266.111111111111], [466.0, 1274.7894736842102], [476.0, 1256.7142857142858], [477.0, 1082.25], [478.0, 1136.2], [479.0, 1549.625], [468.0, 1154.625], [469.0, 1313.4], [475.0, 1025.25], [474.0, 1267.4545454545455], [473.0, 1123.2], [481.0, 1122.2857142857142], [480.0, 1171.25], [482.0, 1221.090909090909], [483.0, 1363.3333333333335], [484.0, 1171.0], [485.0, 1182.866666666667], [486.0, 1230.8], [487.0, 1200.2499999999995], [488.0, 1258.8181818181815], [494.0, 1211.0666666666666], [495.0, 1180.0714285714282], [492.0, 1386.3333333333333], [493.0, 1301.0], [489.0, 1234.0], [490.0, 1542.8], [491.0, 1360.0], [503.0, 1489.5], [496.0, 1221.5789473684208], [498.0, 1800.0], [500.0, 1224.0], [501.0, 1393.25], [502.0, 1505.0], [504.0, 1588.6666666666667], [511.0, 1481.25], [508.0, 1308.3333333333333], [509.0, 1288.0], [510.0, 1495.0], [519.0, 1187.0], [513.0, 1572.1666666666667], [527.0, 1586.0], [514.0, 1326.3333333333333], [516.0, 1163.0], [517.0, 1792.0], [534.0, 1112.0], [533.0, 1705.5], [535.0, 1582.0], [532.0, 1412.5], [531.0, 1353.3333333333333], [530.0, 1449.818181818182], [538.0, 1545.153846153846], [537.0, 1753.5], [539.0, 1175.5], [541.0, 1181.0], [540.0, 1647.5], [542.0, 1422.0], [543.0, 1384.5], [529.0, 1435.6666666666667], [528.0, 1431.0], [526.0, 1478.0], [525.0, 1524.6363636363635], [524.0, 1288.0], [522.0, 1224.1666666666665], [550.0, 1166.1666666666667], [545.0, 1165.0], [544.0, 1173.3333333333333], [546.0, 1284.8333333333333], [547.0, 1090.5], [549.0, 1382.3333333333333], [548.0, 1398.0], [560.0, 1324.7857142857144], [571.0, 1302.2727272727273], [570.0, 1257.0555555555554], [568.0, 1234.6666666666667], [569.0, 1275.8095238095236], [561.0, 1289.5], [562.0, 1345.7142857142858], [563.0, 1303.6], [564.0, 1097.3333333333333], [565.0, 1571.0], [566.0, 1252.3333333333333], [567.0, 1260.4374999999998], [552.0, 1557.0], [553.0, 1356.857142857143], [555.0, 1394.4999999999995], [556.0, 1307.0], [559.0, 1305.0]], "isOverall": false, "label": "(ScalabilityTesting)Create payment token for a given payment source", "isController": false}, {"data": [[348.2674033149166, 829.6334254143626]], "isOverall": false, "label": "(ScalabilityTesting)Create payment token for a given payment source-Aggregated", "isController": false}, {"data": [[29.0, 348.0], [44.0, 321.0], [52.0, 306.0], [55.0, 320.0], [57.0, 333.0], [68.0, 342.6666666666667], [71.0, 349.0], [72.0, 921.0], [74.0, 884.0], [75.0, 910.0], [76.0, 857.6666666666666], [77.0, 855.5], [78.0, 855.0], [79.0, 867.0], [81.0, 807.5714285714286], [82.0, 834.8333333333333], [83.0, 885.1111111111111], [84.0, 859.2], [136.0, 324.0], [141.0, 327.0], [142.0, 336.0], [143.0, 320.0], [146.0, 344.0], [147.0, 347.0], [149.0, 383.3333333333333], [151.0, 337.5], [152.0, 331.0], [153.0, 581.0], [154.0, 420.0], [157.0, 321.0], [156.0, 337.5], [158.0, 336.0], [159.0, 324.5], [164.0, 343.5], [165.0, 325.0], [166.0, 323.0], [168.0, 611.0], [172.0, 321.0], [173.0, 364.4], [174.0, 406.14285714285717], [175.0, 735.5], [176.0, 992.0], [219.0, 337.0], [223.0, 351.6666666666667], [224.0, 321.0], [225.0, 320.0], [226.0, 336.0], [227.0, 316.0], [231.0, 347.0], [234.0, 324.0], [235.0, 332.6666666666667], [237.0, 367.6666666666667], [239.0, 330.0], [244.0, 401.0], [243.0, 327.0], [241.0, 336.0], [245.0, 314.0], [247.0, 338.0], [248.0, 320.0], [249.0, 403.0], [250.0, 320.0], [253.0, 349.0], [255.0, 341.5], [256.0, 357.5], [257.0, 352.0], [258.0, 379.2], [306.0, 363.0], [305.0, 367.0], [307.0, 375.5], [308.0, 375.0], [310.0, 348.0], [311.0, 344.0], [313.0, 382.5], [314.0, 324.0], [316.0, 387.0], [319.0, 394.0], [321.0, 386.0], [323.0, 396.5], [325.0, 394.0], [327.0, 363.0], [326.0, 387.0], [331.0, 378.0], [332.0, 426.0], [333.0, 340.0], [337.0, 384.5], [338.0, 354.6666666666667], [339.0, 328.0], [340.0, 364.2], [341.0, 464.0], [342.0, 519.6]], "isOverall": false, "label": "Get Auth Token", "isController": false}, {"data": [[203.0649999999999, 481.68999999999994]], "isOverall": false, "label": "Get Auth Token-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 571.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 7374.033333333334, "minX": 1.71751704E12, "maxY": 279108.3333333333, "series": [{"data": [[1.7175171E12, 279108.3333333333], [1.71751716E12, 26237.1], [1.71751704E12, 90598.71666666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.7175171E12, 78646.53333333334], [1.71751716E12, 7374.033333333334], [1.71751704E12, 22775.833333333332]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71751716E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 437.53495652173996, "minX": 1.71751704E12, "maxY": 963.9104981705605, "series": [{"data": [[1.7175171E12, 957.8303370786472], [1.71751716E12, 497.5338189386051], [1.71751704E12, 458.6562287270261]], "isOverall": false, "label": "(ScalabilityTesting)CreatePaymentToken_tr_ForGivenPaymentSource", "isController": true}, {"data": [[1.7175171E12, 963.9104981705605], [1.71751716E12, 508.30549682875244], [1.71751704E12, 437.53495652173996]], "isOverall": false, "label": "(ScalabilityTesting)Create payment token for a given payment source", "isController": false}, {"data": [[1.71751704E12, 481.68999999999994]], "isOverall": false, "label": "Get Auth Token", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71751716E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.71751704E12, "maxY": 963.6928417299948, "series": [{"data": [[1.7175171E12, 0.0], [1.71751716E12, 0.0], [1.71751704E12, 0.0]], "isOverall": false, "label": "(ScalabilityTesting)CreatePaymentToken_tr_ForGivenPaymentSource", "isController": true}, {"data": [[1.7175171E12, 963.6928417299948], [1.71751716E12, 508.08773784355265], [1.71751704E12, 437.5262608695655]], "isOverall": false, "label": "(ScalabilityTesting)Create payment token for a given payment source", "isController": false}, {"data": [[1.71751704E12, 481.2149999999999]], "isOverall": false, "label": "Get Auth Token", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71751716E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 54.06035379812699, "minX": 1.71751704E12, "maxY": 119.82259123745203, "series": [{"data": [[1.7175171E12, 114.23239700374549], [1.71751716E12, 54.06035379812699], [1.71751704E12, 84.74846834581372]], "isOverall": false, "label": "(ScalabilityTesting)CreatePaymentToken_tr_ForGivenPaymentSource", "isController": true}, {"data": [[1.7175171E12, 119.82259123745203], [1.71751716E12, 61.676532769556076], [1.71751704E12, 68.14886956521755]], "isOverall": false, "label": "(ScalabilityTesting)Create payment token for a given payment source", "isController": false}, {"data": [[1.71751704E12, 59.68000000000002]], "isOverall": false, "label": "Get Auth Token", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71751716E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 267.0, "minX": 1.71751704E12, "maxY": 2385.0, "series": [{"data": [[1.7175171E12, 2385.0], [1.71751716E12, 1713.0], [1.71751704E12, 1507.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.7175171E12, 319.0], [1.71751716E12, 307.0], [1.71751704E12, 267.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.7175171E12, 1360.0], [1.71751716E12, 721.0], [1.71751704E12, 605.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.7175171E12, 1752.6899999999987], [1.71751716E12, 1274.9], [1.71751704E12, 1247.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.7175171E12, 1036.0], [1.71751716E12, 503.0], [1.71751704E12, 382.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.7175171E12, 1477.0], [1.71751716E12, 949.8], [1.71751704E12, 848.1999999999998]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71751716E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 2.0, "maxY": 1359.0, "series": [{"data": [[2.0, 613.0], [21.0, 324.0], [25.0, 855.0], [33.0, 322.0], [44.0, 346.5], [45.0, 333.0], [47.0, 354.0], [52.0, 394.0], [55.0, 335.0], [54.0, 401.0], [66.0, 491.0], [74.0, 453.5], [76.0, 606.0], [83.0, 630.0], [86.0, 346.5], [85.0, 620.0], [99.0, 336.0], [98.0, 340.5], [102.0, 1033.5], [103.0, 638.0], [114.0, 1040.5], [116.0, 395.0], [118.0, 386.0], [120.0, 620.0], [133.0, 475.0], [142.0, 558.5], [139.0, 460.0], [145.0, 366.5], [150.0, 1292.0], [156.0, 349.5], [153.0, 343.0], [152.0, 1293.0], [157.0, 1169.0], [155.0, 1140.0], [159.0, 434.0], [160.0, 1126.0], [161.0, 1173.0], [164.0, 1238.0], [166.0, 1134.0], [165.0, 1359.0], [167.0, 435.0], [173.0, 865.0], [169.0, 1040.0], [174.0, 1113.0], [170.0, 1136.5], [172.0, 1187.5], [175.0, 735.0], [183.0, 989.5], [178.0, 823.0], [179.0, 774.0], [191.0, 470.0], [185.0, 1090.0], [187.0, 1010.0], [184.0, 1091.5], [189.0, 666.0], [190.0, 716.5], [198.0, 436.0], [199.0, 547.5], [196.0, 1258.0], [204.0, 434.5], [200.0, 1037.5], [205.0, 726.0], [203.0, 660.0], [201.0, 529.0], [207.0, 490.0], [202.0, 648.0], [211.0, 691.0], [213.0, 518.0], [224.0, 651.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[33.0, 0.0], [45.0, 0.0], [54.0, 0.0], [66.0, 0.0], [76.0, 0.0], [83.0, 0.0], [85.0, 0.0], [103.0, 0.0], [118.0, 0.0], [120.0, 0.0], [133.0, 0.0], [139.0, 0.0], [159.0, 0.0], [167.0, 0.0], [174.0, 185.0], [175.0, 0.0], [183.0, 150.0], [178.0, 65.0], [189.0, 0.0], [190.0, 0.0], [198.0, 170.0], [205.0, 40.0], [203.0, 47.0], [202.0, 0.0], [211.0, 171.0], [224.0, 125.5], [21.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 224.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 2.0, "maxY": 1359.0, "series": [{"data": [[2.0, 161.5], [21.0, 323.0], [25.0, 855.0], [33.0, 320.5], [44.0, 346.5], [45.0, 329.0], [47.0, 353.0], [52.0, 394.0], [55.0, 335.0], [54.0, 383.0], [66.0, 480.0], [74.0, 453.5], [76.0, 590.0], [83.0, 626.0], [86.0, 346.5], [85.0, 616.5], [99.0, 336.0], [98.0, 340.5], [102.0, 1033.5], [103.0, 451.0], [114.0, 1040.5], [116.0, 395.0], [118.0, 367.0], [120.0, 403.0], [133.0, 422.0], [142.0, 558.5], [139.0, 447.0], [145.0, 366.5], [150.0, 1292.0], [156.0, 349.5], [153.0, 343.0], [152.0, 1293.0], [157.0, 1169.0], [155.0, 1140.0], [159.0, 408.0], [160.0, 1126.0], [161.0, 1173.0], [164.0, 1238.0], [166.0, 1134.0], [165.0, 1359.0], [167.0, 428.5], [173.0, 865.0], [169.0, 1040.0], [174.0, 1113.0], [170.0, 1136.5], [172.0, 1187.5], [175.0, 709.0], [183.0, 989.5], [178.0, 823.0], [179.0, 774.0], [191.0, 470.0], [185.0, 1090.0], [187.0, 1010.0], [184.0, 1091.5], [189.0, 663.0], [190.0, 699.0], [198.0, 436.0], [199.0, 547.5], [196.0, 1258.0], [204.0, 434.5], [200.0, 1037.5], [205.0, 726.0], [203.0, 660.0], [201.0, 529.0], [207.0, 490.0], [202.0, 621.0], [211.0, 691.0], [213.0, 518.0], [224.0, 651.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[33.0, 0.0], [45.0, 0.0], [54.0, 0.0], [66.0, 0.0], [76.0, 0.0], [83.0, 0.0], [85.0, 0.0], [103.0, 0.0], [118.0, 0.0], [120.0, 0.0], [133.0, 0.0], [139.0, 0.0], [159.0, 0.0], [167.0, 0.0], [174.0, 0.0], [175.0, 0.0], [183.0, 0.0], [178.0, 0.0], [189.0, 0.0], [190.0, 0.0], [198.0, 0.0], [205.0, 0.0], [203.0, 0.0], [202.0, 0.0], [211.0, 0.0], [224.0, 0.0], [21.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 224.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 16.9, "minX": 1.71751704E12, "maxY": 176.51666666666668, "series": [{"data": [[1.7175171E12, 176.51666666666668], [1.71751716E12, 16.9], [1.71751704E12, 54.583333333333336]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71751716E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.71751704E12, "maxY": 177.93333333333334, "series": [{"data": [[1.7175171E12, 177.93333333333334], [1.71751716E12, 16.683333333333334], [1.71751704E12, 51.25]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.7175171E12, 0.43333333333333335], [1.71751716E12, 1.2166666666666666]], "isOverall": false, "label": "EMPTY_RES_CODE", "isController": false}, {"data": [[1.7175171E12, 0.4166666666666667], [1.71751716E12, 0.06666666666666667]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71751716E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.71751704E12, "maxY": 177.23333333333332, "series": [{"data": [[1.7175171E12, 0.85], [1.71751716E12, 1.2833333333333334]], "isOverall": false, "label": "(ScalabilityTesting)CreatePaymentToken_tr_ForGivenPaymentSource-failure", "isController": true}, {"data": [[1.7175171E12, 177.15], [1.71751716E12, 14.733333333333333], [1.71751704E12, 48.96666666666667]], "isOverall": false, "label": "(ScalabilityTesting)CreatePaymentToken_tr_ForGivenPaymentSource-success", "isController": true}, {"data": [[1.7175171E12, 177.23333333333332], [1.71751716E12, 15.7], [1.71751704E12, 47.916666666666664]], "isOverall": false, "label": "(ScalabilityTesting)Create payment token for a given payment source-success", "isController": false}, {"data": [[1.7175171E12, 0.4166666666666667], [1.71751716E12, 0.06666666666666667]], "isOverall": false, "label": "(ScalabilityTesting)Create payment token for a given payment source-failure", "isController": false}, {"data": [[1.71751704E12, 3.3333333333333335]], "isOverall": false, "label": "Get Auth Token-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71751716E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.2666666666666666, "minX": 1.71751704E12, "maxY": 354.3833333333333, "series": [{"data": [[1.7175171E12, 354.3833333333333], [1.71751716E12, 30.433333333333334], [1.71751704E12, 100.21666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.7175171E12, 1.2666666666666666], [1.71751716E12, 1.35]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71751716E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}


/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 2419.0, "series": [{"data": [[0.0, 38.0], [0.1, 79.0], [0.2, 268.0], [0.3, 275.0], [0.4, 278.0], [0.5, 283.0], [0.6, 286.0], [0.7, 292.0], [0.8, 300.0], [0.9, 311.0], [1.0, 313.0], [1.1, 315.0], [1.2, 317.0], [1.3, 318.0], [1.4, 318.0], [1.5, 319.0], [1.6, 320.0], [1.7, 321.0], [1.8, 321.0], [1.9, 322.0], [2.0, 322.0], [2.1, 323.0], [2.2, 323.0], [2.3, 324.0], [2.4, 324.0], [2.5, 324.0], [2.6, 325.0], [2.7, 325.0], [2.8, 326.0], [2.9, 327.0], [3.0, 327.0], [3.1, 328.0], [3.2, 328.0], [3.3, 329.0], [3.4, 329.0], [3.5, 329.0], [3.6, 330.0], [3.7, 330.0], [3.8, 331.0], [3.9, 331.0], [4.0, 331.0], [4.1, 332.0], [4.2, 332.0], [4.3, 333.0], [4.4, 333.0], [4.5, 334.0], [4.6, 334.0], [4.7, 335.0], [4.8, 335.0], [4.9, 336.0], [5.0, 337.0], [5.1, 337.0], [5.2, 338.0], [5.3, 338.0], [5.4, 339.0], [5.5, 340.0], [5.6, 340.0], [5.7, 341.0], [5.8, 341.0], [5.9, 342.0], [6.0, 343.0], [6.1, 343.0], [6.2, 344.0], [6.3, 344.0], [6.4, 345.0], [6.5, 346.0], [6.6, 346.0], [6.7, 347.0], [6.8, 348.0], [6.9, 348.0], [7.0, 349.0], [7.1, 349.0], [7.2, 350.0], [7.3, 351.0], [7.4, 352.0], [7.5, 352.0], [7.6, 353.0], [7.7, 353.0], [7.8, 354.0], [7.9, 354.0], [8.0, 354.0], [8.1, 355.0], [8.2, 356.0], [8.3, 357.0], [8.4, 358.0], [8.5, 358.0], [8.6, 358.0], [8.7, 359.0], [8.8, 360.0], [8.9, 360.0], [9.0, 361.0], [9.1, 362.0], [9.2, 363.0], [9.3, 363.0], [9.4, 364.0], [9.5, 364.0], [9.6, 365.0], [9.7, 366.0], [9.8, 367.0], [9.9, 368.0], [10.0, 369.0], [10.1, 370.0], [10.2, 371.0], [10.3, 372.0], [10.4, 372.0], [10.5, 373.0], [10.6, 374.0], [10.7, 376.0], [10.8, 377.0], [10.9, 377.0], [11.0, 378.0], [11.1, 379.0], [11.2, 380.0], [11.3, 381.0], [11.4, 382.0], [11.5, 383.0], [11.6, 384.0], [11.7, 385.0], [11.8, 386.0], [11.9, 387.0], [12.0, 388.0], [12.1, 390.0], [12.2, 391.0], [12.3, 392.0], [12.4, 393.0], [12.5, 394.0], [12.6, 395.0], [12.7, 395.0], [12.8, 396.0], [12.9, 397.0], [13.0, 397.0], [13.1, 399.0], [13.2, 399.0], [13.3, 400.0], [13.4, 401.0], [13.5, 402.0], [13.6, 403.0], [13.7, 403.0], [13.8, 404.0], [13.9, 405.0], [14.0, 406.0], [14.1, 407.0], [14.2, 408.0], [14.3, 409.0], [14.4, 410.0], [14.5, 411.0], [14.6, 412.0], [14.7, 412.0], [14.8, 413.0], [14.9, 414.0], [15.0, 415.0], [15.1, 416.0], [15.2, 417.0], [15.3, 418.0], [15.4, 420.0], [15.5, 421.0], [15.6, 422.0], [15.7, 423.0], [15.8, 425.0], [15.9, 426.0], [16.0, 427.0], [16.1, 428.0], [16.2, 429.0], [16.3, 430.0], [16.4, 431.0], [16.5, 432.0], [16.6, 433.0], [16.7, 434.0], [16.8, 435.0], [16.9, 435.0], [17.0, 436.0], [17.1, 437.0], [17.2, 438.0], [17.3, 438.0], [17.4, 439.0], [17.5, 440.0], [17.6, 441.0], [17.7, 442.0], [17.8, 442.0], [17.9, 443.0], [18.0, 444.0], [18.1, 445.0], [18.2, 446.0], [18.3, 446.0], [18.4, 447.0], [18.5, 448.0], [18.6, 448.0], [18.7, 449.0], [18.8, 450.0], [18.9, 451.0], [19.0, 451.0], [19.1, 452.0], [19.2, 453.0], [19.3, 454.0], [19.4, 455.0], [19.5, 456.0], [19.6, 457.0], [19.7, 458.0], [19.8, 458.0], [19.9, 459.0], [20.0, 460.0], [20.1, 461.0], [20.2, 462.0], [20.3, 463.0], [20.4, 464.0], [20.5, 465.0], [20.6, 466.0], [20.7, 466.0], [20.8, 467.0], [20.9, 468.0], [21.0, 469.0], [21.1, 469.0], [21.2, 470.0], [21.3, 471.0], [21.4, 472.0], [21.5, 473.0], [21.6, 474.0], [21.7, 475.0], [21.8, 476.0], [21.9, 477.0], [22.0, 477.0], [22.1, 479.0], [22.2, 479.0], [22.3, 480.0], [22.4, 481.0], [22.5, 482.0], [22.6, 483.0], [22.7, 484.0], [22.8, 486.0], [22.9, 486.0], [23.0, 488.0], [23.1, 488.0], [23.2, 489.0], [23.3, 490.0], [23.4, 492.0], [23.5, 493.0], [23.6, 495.0], [23.7, 496.0], [23.8, 498.0], [23.9, 499.0], [24.0, 500.0], [24.1, 501.0], [24.2, 502.0], [24.3, 503.0], [24.4, 504.0], [24.5, 506.0], [24.6, 507.0], [24.7, 508.0], [24.8, 509.0], [24.9, 510.0], [25.0, 511.0], [25.1, 513.0], [25.2, 514.0], [25.3, 516.0], [25.4, 516.0], [25.5, 518.0], [25.6, 518.0], [25.7, 520.0], [25.8, 521.0], [25.9, 523.0], [26.0, 524.0], [26.1, 525.0], [26.2, 527.0], [26.3, 528.0], [26.4, 529.0], [26.5, 531.0], [26.6, 533.0], [26.7, 534.0], [26.8, 535.0], [26.9, 535.0], [27.0, 536.0], [27.1, 538.0], [27.2, 539.0], [27.3, 541.0], [27.4, 542.0], [27.5, 543.0], [27.6, 544.0], [27.7, 546.0], [27.8, 547.0], [27.9, 549.0], [28.0, 551.0], [28.1, 553.0], [28.2, 554.0], [28.3, 555.0], [28.4, 557.0], [28.5, 558.0], [28.6, 559.0], [28.7, 562.0], [28.8, 563.0], [28.9, 564.0], [29.0, 566.0], [29.1, 567.0], [29.2, 569.0], [29.3, 570.0], [29.4, 571.0], [29.5, 573.0], [29.6, 574.0], [29.7, 575.0], [29.8, 576.0], [29.9, 577.0], [30.0, 578.0], [30.1, 580.0], [30.2, 581.0], [30.3, 582.0], [30.4, 583.0], [30.5, 585.0], [30.6, 586.0], [30.7, 587.0], [30.8, 589.0], [30.9, 590.0], [31.0, 591.0], [31.1, 591.0], [31.2, 592.0], [31.3, 593.0], [31.4, 594.0], [31.5, 595.0], [31.6, 595.0], [31.7, 597.0], [31.8, 598.0], [31.9, 600.0], [32.0, 601.0], [32.1, 602.0], [32.2, 604.0], [32.3, 605.0], [32.4, 606.0], [32.5, 607.0], [32.6, 607.0], [32.7, 608.0], [32.8, 609.0], [32.9, 611.0], [33.0, 612.0], [33.1, 613.0], [33.2, 614.0], [33.3, 615.0], [33.4, 616.0], [33.5, 616.0], [33.6, 617.0], [33.7, 618.0], [33.8, 620.0], [33.9, 621.0], [34.0, 622.0], [34.1, 623.0], [34.2, 624.0], [34.3, 625.0], [34.4, 625.0], [34.5, 626.0], [34.6, 627.0], [34.7, 628.0], [34.8, 629.0], [34.9, 630.0], [35.0, 631.0], [35.1, 631.0], [35.2, 632.0], [35.3, 633.0], [35.4, 635.0], [35.5, 636.0], [35.6, 636.0], [35.7, 637.0], [35.8, 638.0], [35.9, 638.0], [36.0, 639.0], [36.1, 640.0], [36.2, 641.0], [36.3, 641.0], [36.4, 642.0], [36.5, 643.0], [36.6, 644.0], [36.7, 644.0], [36.8, 645.0], [36.9, 645.0], [37.0, 646.0], [37.1, 647.0], [37.2, 648.0], [37.3, 648.0], [37.4, 649.0], [37.5, 650.0], [37.6, 650.0], [37.7, 651.0], [37.8, 652.0], [37.9, 652.0], [38.0, 653.0], [38.1, 654.0], [38.2, 655.0], [38.3, 656.0], [38.4, 657.0], [38.5, 657.0], [38.6, 658.0], [38.7, 659.0], [38.8, 660.0], [38.9, 661.0], [39.0, 662.0], [39.1, 663.0], [39.2, 663.0], [39.3, 665.0], [39.4, 666.0], [39.5, 667.0], [39.6, 668.0], [39.7, 669.0], [39.8, 670.0], [39.9, 672.0], [40.0, 673.0], [40.1, 674.0], [40.2, 675.0], [40.3, 676.0], [40.4, 677.0], [40.5, 677.0], [40.6, 678.0], [40.7, 679.0], [40.8, 680.0], [40.9, 681.0], [41.0, 682.0], [41.1, 683.0], [41.2, 684.0], [41.3, 685.0], [41.4, 686.0], [41.5, 688.0], [41.6, 689.0], [41.7, 690.0], [41.8, 691.0], [41.9, 692.0], [42.0, 693.0], [42.1, 695.0], [42.2, 695.0], [42.3, 696.0], [42.4, 698.0], [42.5, 699.0], [42.6, 700.0], [42.7, 700.0], [42.8, 702.0], [42.9, 703.0], [43.0, 704.0], [43.1, 706.0], [43.2, 706.0], [43.3, 707.0], [43.4, 709.0], [43.5, 710.0], [43.6, 711.0], [43.7, 712.0], [43.8, 714.0], [43.9, 715.0], [44.0, 716.0], [44.1, 717.0], [44.2, 719.0], [44.3, 720.0], [44.4, 721.0], [44.5, 722.0], [44.6, 723.0], [44.7, 725.0], [44.8, 726.0], [44.9, 728.0], [45.0, 729.0], [45.1, 730.0], [45.2, 732.0], [45.3, 734.0], [45.4, 735.0], [45.5, 736.0], [45.6, 738.0], [45.7, 739.0], [45.8, 741.0], [45.9, 743.0], [46.0, 744.0], [46.1, 745.0], [46.2, 747.0], [46.3, 748.0], [46.4, 749.0], [46.5, 751.0], [46.6, 753.0], [46.7, 755.0], [46.8, 757.0], [46.9, 759.0], [47.0, 760.0], [47.1, 761.0], [47.2, 763.0], [47.3, 764.0], [47.4, 765.0], [47.5, 767.0], [47.6, 769.0], [47.7, 770.0], [47.8, 772.0], [47.9, 774.0], [48.0, 776.0], [48.1, 778.0], [48.2, 780.0], [48.3, 781.0], [48.4, 783.0], [48.5, 784.0], [48.6, 785.0], [48.7, 786.0], [48.8, 788.0], [48.9, 789.0], [49.0, 790.0], [49.1, 793.0], [49.2, 794.0], [49.3, 795.0], [49.4, 796.0], [49.5, 798.0], [49.6, 800.0], [49.7, 801.0], [49.8, 802.0], [49.9, 804.0], [50.0, 806.0], [50.1, 807.0], [50.2, 808.0], [50.3, 810.0], [50.4, 812.0], [50.5, 813.0], [50.6, 815.0], [50.7, 817.0], [50.8, 819.0], [50.9, 820.0], [51.0, 821.0], [51.1, 822.0], [51.2, 824.0], [51.3, 825.0], [51.4, 826.0], [51.5, 827.0], [51.6, 829.0], [51.7, 831.0], [51.8, 833.0], [51.9, 835.0], [52.0, 836.0], [52.1, 837.0], [52.2, 839.0], [52.3, 841.0], [52.4, 842.0], [52.5, 844.0], [52.6, 846.0], [52.7, 847.0], [52.8, 849.0], [52.9, 851.0], [53.0, 854.0], [53.1, 855.0], [53.2, 857.0], [53.3, 858.0], [53.4, 861.0], [53.5, 862.0], [53.6, 864.0], [53.7, 864.0], [53.8, 867.0], [53.9, 868.0], [54.0, 869.0], [54.1, 871.0], [54.2, 873.0], [54.3, 875.0], [54.4, 876.0], [54.5, 878.0], [54.6, 880.0], [54.7, 882.0], [54.8, 883.0], [54.9, 884.0], [55.0, 886.0], [55.1, 887.0], [55.2, 889.0], [55.3, 891.0], [55.4, 892.0], [55.5, 894.0], [55.6, 895.0], [55.7, 898.0], [55.8, 899.0], [55.9, 900.0], [56.0, 902.0], [56.1, 904.0], [56.2, 906.0], [56.3, 910.0], [56.4, 912.0], [56.5, 914.0], [56.6, 917.0], [56.7, 919.0], [56.8, 921.0], [56.9, 923.0], [57.0, 925.0], [57.1, 926.0], [57.2, 928.0], [57.3, 929.0], [57.4, 931.0], [57.5, 933.0], [57.6, 934.0], [57.7, 936.0], [57.8, 938.0], [57.9, 941.0], [58.0, 943.0], [58.1, 948.0], [58.2, 951.0], [58.3, 954.0], [58.4, 955.0], [58.5, 959.0], [58.6, 961.0], [58.7, 963.0], [58.8, 965.0], [58.9, 968.0], [59.0, 971.0], [59.1, 974.0], [59.2, 977.0], [59.3, 978.0], [59.4, 980.0], [59.5, 982.0], [59.6, 984.0], [59.7, 985.0], [59.8, 988.0], [59.9, 989.0], [60.0, 992.0], [60.1, 993.0], [60.2, 995.0], [60.3, 997.0], [60.4, 999.0], [60.5, 1000.0], [60.6, 1001.0], [60.7, 1003.0], [60.8, 1006.0], [60.9, 1008.0], [61.0, 1009.0], [61.1, 1011.0], [61.2, 1013.0], [61.3, 1015.0], [61.4, 1017.0], [61.5, 1018.0], [61.6, 1021.0], [61.7, 1023.0], [61.8, 1025.0], [61.9, 1026.0], [62.0, 1028.0], [62.1, 1030.0], [62.2, 1032.0], [62.3, 1034.0], [62.4, 1036.0], [62.5, 1038.0], [62.6, 1040.0], [62.7, 1042.0], [62.8, 1043.0], [62.9, 1046.0], [63.0, 1048.0], [63.1, 1049.0], [63.2, 1051.0], [63.3, 1053.0], [63.4, 1054.0], [63.5, 1055.0], [63.6, 1056.0], [63.7, 1058.0], [63.8, 1060.0], [63.9, 1061.0], [64.0, 1061.0], [64.1, 1063.0], [64.2, 1064.0], [64.3, 1066.0], [64.4, 1067.0], [64.5, 1068.0], [64.6, 1070.0], [64.7, 1072.0], [64.8, 1073.0], [64.9, 1074.0], [65.0, 1075.0], [65.1, 1076.0], [65.2, 1077.0], [65.3, 1078.0], [65.4, 1079.0], [65.5, 1080.0], [65.6, 1080.0], [65.7, 1081.0], [65.8, 1082.0], [65.9, 1084.0], [66.0, 1085.0], [66.1, 1085.0], [66.2, 1086.0], [66.3, 1086.0], [66.4, 1087.0], [66.5, 1088.0], [66.6, 1089.0], [66.7, 1090.0], [66.8, 1090.0], [66.9, 1091.0], [67.0, 1091.0], [67.1, 1093.0], [67.2, 1093.0], [67.3, 1094.0], [67.4, 1095.0], [67.5, 1095.0], [67.6, 1096.0], [67.7, 1096.0], [67.8, 1097.0], [67.9, 1098.0], [68.0, 1098.0], [68.1, 1099.0], [68.2, 1099.0], [68.3, 1100.0], [68.4, 1101.0], [68.5, 1102.0], [68.6, 1102.0], [68.7, 1103.0], [68.8, 1103.0], [68.9, 1104.0], [69.0, 1104.0], [69.1, 1105.0], [69.2, 1106.0], [69.3, 1106.0], [69.4, 1107.0], [69.5, 1108.0], [69.6, 1108.0], [69.7, 1109.0], [69.8, 1109.0], [69.9, 1110.0], [70.0, 1111.0], [70.1, 1111.0], [70.2, 1111.0], [70.3, 1112.0], [70.4, 1112.0], [70.5, 1113.0], [70.6, 1113.0], [70.7, 1114.0], [70.8, 1114.0], [70.9, 1115.0], [71.0, 1116.0], [71.1, 1116.0], [71.2, 1117.0], [71.3, 1117.0], [71.4, 1117.0], [71.5, 1118.0], [71.6, 1118.0], [71.7, 1118.0], [71.8, 1119.0], [71.9, 1119.0], [72.0, 1120.0], [72.1, 1120.0], [72.2, 1121.0], [72.3, 1121.0], [72.4, 1122.0], [72.5, 1122.0], [72.6, 1123.0], [72.7, 1123.0], [72.8, 1124.0], [72.9, 1124.0], [73.0, 1124.0], [73.1, 1125.0], [73.2, 1125.0], [73.3, 1126.0], [73.4, 1126.0], [73.5, 1127.0], [73.6, 1127.0], [73.7, 1128.0], [73.8, 1128.0], [73.9, 1129.0], [74.0, 1129.0], [74.1, 1129.0], [74.2, 1130.0], [74.3, 1131.0], [74.4, 1131.0], [74.5, 1131.0], [74.6, 1132.0], [74.7, 1133.0], [74.8, 1133.0], [74.9, 1133.0], [75.0, 1134.0], [75.1, 1134.0], [75.2, 1135.0], [75.3, 1135.0], [75.4, 1136.0], [75.5, 1136.0], [75.6, 1137.0], [75.7, 1137.0], [75.8, 1138.0], [75.9, 1138.0], [76.0, 1139.0], [76.1, 1139.0], [76.2, 1140.0], [76.3, 1140.0], [76.4, 1141.0], [76.5, 1141.0], [76.6, 1142.0], [76.7, 1142.0], [76.8, 1143.0], [76.9, 1143.0], [77.0, 1144.0], [77.1, 1144.0], [77.2, 1144.0], [77.3, 1145.0], [77.4, 1145.0], [77.5, 1146.0], [77.6, 1146.0], [77.7, 1147.0], [77.8, 1147.0], [77.9, 1148.0], [78.0, 1149.0], [78.1, 1149.0], [78.2, 1149.0], [78.3, 1150.0], [78.4, 1150.0], [78.5, 1151.0], [78.6, 1151.0], [78.7, 1152.0], [78.8, 1152.0], [78.9, 1153.0], [79.0, 1153.0], [79.1, 1154.0], [79.2, 1154.0], [79.3, 1155.0], [79.4, 1156.0], [79.5, 1156.0], [79.6, 1157.0], [79.7, 1157.0], [79.8, 1157.0], [79.9, 1158.0], [80.0, 1158.0], [80.1, 1159.0], [80.2, 1159.0], [80.3, 1159.0], [80.4, 1160.0], [80.5, 1161.0], [80.6, 1161.0], [80.7, 1162.0], [80.8, 1163.0], [80.9, 1163.0], [81.0, 1165.0], [81.1, 1165.0], [81.2, 1166.0], [81.3, 1166.0], [81.4, 1167.0], [81.5, 1167.0], [81.6, 1168.0], [81.7, 1168.0], [81.8, 1169.0], [81.9, 1170.0], [82.0, 1170.0], [82.1, 1171.0], [82.2, 1172.0], [82.3, 1173.0], [82.4, 1174.0], [82.5, 1174.0], [82.6, 1175.0], [82.7, 1176.0], [82.8, 1177.0], [82.9, 1177.0], [83.0, 1178.0], [83.1, 1178.0], [83.2, 1179.0], [83.3, 1180.0], [83.4, 1182.0], [83.5, 1183.0], [83.6, 1183.0], [83.7, 1185.0], [83.8, 1185.0], [83.9, 1187.0], [84.0, 1188.0], [84.1, 1190.0], [84.2, 1191.0], [84.3, 1192.0], [84.4, 1193.0], [84.5, 1195.0], [84.6, 1196.0], [84.7, 1196.0], [84.8, 1197.0], [84.9, 1199.0], [85.0, 1201.0], [85.1, 1202.0], [85.2, 1204.0], [85.3, 1205.0], [85.4, 1207.0], [85.5, 1209.0], [85.6, 1210.0], [85.7, 1212.0], [85.8, 1213.0], [85.9, 1215.0], [86.0, 1216.0], [86.1, 1218.0], [86.2, 1222.0], [86.3, 1223.0], [86.4, 1225.0], [86.5, 1227.0], [86.6, 1230.0], [86.7, 1231.0], [86.8, 1234.0], [86.9, 1235.0], [87.0, 1237.0], [87.1, 1239.0], [87.2, 1241.0], [87.3, 1242.0], [87.4, 1245.0], [87.5, 1247.0], [87.6, 1249.0], [87.7, 1250.0], [87.8, 1252.0], [87.9, 1253.0], [88.0, 1254.0], [88.1, 1257.0], [88.2, 1259.0], [88.3, 1261.0], [88.4, 1263.0], [88.5, 1267.0], [88.6, 1269.0], [88.7, 1271.0], [88.8, 1273.0], [88.9, 1275.0], [89.0, 1279.0], [89.1, 1280.0], [89.2, 1283.0], [89.3, 1285.0], [89.4, 1288.0], [89.5, 1291.0], [89.6, 1293.0], [89.7, 1295.0], [89.8, 1298.0], [89.9, 1301.0], [90.0, 1305.0], [90.1, 1307.0], [90.2, 1309.0], [90.3, 1312.0], [90.4, 1314.0], [90.5, 1317.0], [90.6, 1320.0], [90.7, 1323.0], [90.8, 1325.0], [90.9, 1328.0], [91.0, 1329.0], [91.1, 1332.0], [91.2, 1335.0], [91.3, 1338.0], [91.4, 1339.0], [91.5, 1341.0], [91.6, 1343.0], [91.7, 1345.0], [91.8, 1349.0], [91.9, 1352.0], [92.0, 1354.0], [92.1, 1357.0], [92.2, 1361.0], [92.3, 1365.0], [92.4, 1369.0], [92.5, 1372.0], [92.6, 1374.0], [92.7, 1378.0], [92.8, 1380.0], [92.9, 1384.0], [93.0, 1386.0], [93.1, 1390.0], [93.2, 1394.0], [93.3, 1398.0], [93.4, 1403.0], [93.5, 1407.0], [93.6, 1411.0], [93.7, 1413.0], [93.8, 1416.0], [93.9, 1418.0], [94.0, 1422.0], [94.1, 1424.0], [94.2, 1426.0], [94.3, 1429.0], [94.4, 1431.0], [94.5, 1433.0], [94.6, 1435.0], [94.7, 1437.0], [94.8, 1440.0], [94.9, 1442.0], [95.0, 1445.0], [95.1, 1449.0], [95.2, 1452.0], [95.3, 1455.0], [95.4, 1457.0], [95.5, 1460.0], [95.6, 1462.0], [95.7, 1466.0], [95.8, 1470.0], [95.9, 1474.0], [96.0, 1477.0], [96.1, 1481.0], [96.2, 1484.0], [96.3, 1488.0], [96.4, 1491.0], [96.5, 1492.0], [96.6, 1495.0], [96.7, 1500.0], [96.8, 1506.0], [96.9, 1508.0], [97.0, 1510.0], [97.1, 1513.0], [97.2, 1516.0], [97.3, 1519.0], [97.4, 1522.0], [97.5, 1525.0], [97.6, 1531.0], [97.7, 1538.0], [97.8, 1542.0], [97.9, 1545.0], [98.0, 1555.0], [98.1, 1564.0], [98.2, 1571.0], [98.3, 1580.0], [98.4, 1589.0], [98.5, 1604.0], [98.6, 1612.0], [98.7, 1622.0], [98.8, 1660.0], [98.9, 1679.0], [99.0, 1696.0], [99.1, 1723.0], [99.2, 1749.0], [99.3, 1769.0], [99.4, 1794.0], [99.5, 1803.0], [99.6, 1826.0], [99.7, 1867.0], [99.8, 1894.0], [99.9, 2047.0], [100.0, 2419.0]], "isOverall": false, "label": "Create payment token for a given payment source", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 39.0], [0.9, 164.0], [1.0, 269.0], [1.1, 276.0], [1.2, 279.0], [1.3, 284.0], [1.4, 288.0], [1.5, 293.0], [1.6, 304.0], [1.7, 312.0], [1.8, 314.0], [1.9, 316.0], [2.0, 318.0], [2.1, 318.0], [2.2, 319.0], [2.3, 320.0], [2.4, 320.0], [2.5, 321.0], [2.6, 322.0], [2.7, 322.0], [2.8, 323.0], [2.9, 323.0], [3.0, 324.0], [3.1, 324.0], [3.2, 324.0], [3.3, 325.0], [3.4, 326.0], [3.5, 326.0], [3.6, 327.0], [3.7, 327.0], [3.8, 328.0], [3.9, 328.0], [4.0, 329.0], [4.1, 329.0], [4.2, 330.0], [4.3, 330.0], [4.4, 330.0], [4.5, 331.0], [4.6, 331.0], [4.7, 332.0], [4.8, 332.0], [4.9, 333.0], [5.0, 333.0], [5.1, 334.0], [5.2, 334.0], [5.3, 335.0], [5.4, 335.0], [5.5, 336.0], [5.6, 336.0], [5.7, 337.0], [5.8, 338.0], [5.9, 338.0], [6.0, 339.0], [6.1, 340.0], [6.2, 340.0], [6.3, 341.0], [6.4, 341.0], [6.5, 342.0], [6.6, 343.0], [6.7, 343.0], [6.8, 344.0], [6.9, 344.0], [7.0, 345.0], [7.1, 346.0], [7.2, 346.0], [7.3, 347.0], [7.4, 348.0], [7.5, 348.0], [7.6, 349.0], [7.7, 349.0], [7.8, 350.0], [7.9, 351.0], [8.0, 352.0], [8.1, 352.0], [8.2, 353.0], [8.3, 353.0], [8.4, 354.0], [8.5, 354.0], [8.6, 355.0], [8.7, 356.0], [8.8, 356.0], [8.9, 357.0], [9.0, 358.0], [9.1, 358.0], [9.2, 359.0], [9.3, 360.0], [9.4, 360.0], [9.5, 361.0], [9.6, 362.0], [9.7, 362.0], [9.8, 363.0], [9.9, 363.0], [10.0, 364.0], [10.1, 365.0], [10.2, 366.0], [10.3, 367.0], [10.4, 368.0], [10.5, 369.0], [10.6, 370.0], [10.7, 371.0], [10.8, 372.0], [10.9, 372.0], [11.0, 373.0], [11.1, 375.0], [11.2, 376.0], [11.3, 377.0], [11.4, 377.0], [11.5, 378.0], [11.6, 379.0], [11.7, 380.0], [11.8, 381.0], [11.9, 382.0], [12.0, 383.0], [12.1, 384.0], [12.2, 386.0], [12.3, 386.0], [12.4, 388.0], [12.5, 389.0], [12.6, 390.0], [12.7, 391.0], [12.8, 392.0], [12.9, 393.0], [13.0, 394.0], [13.1, 395.0], [13.2, 395.0], [13.3, 396.0], [13.4, 397.0], [13.5, 398.0], [13.6, 399.0], [13.7, 400.0], [13.8, 401.0], [13.9, 401.0], [14.0, 402.0], [14.1, 403.0], [14.2, 404.0], [14.3, 404.0], [14.4, 405.0], [14.5, 406.0], [14.6, 408.0], [14.7, 408.0], [14.8, 409.0], [14.9, 411.0], [15.0, 411.0], [15.1, 412.0], [15.2, 413.0], [15.3, 414.0], [15.4, 415.0], [15.5, 416.0], [15.6, 417.0], [15.7, 418.0], [15.8, 419.0], [15.9, 420.0], [16.0, 422.0], [16.1, 423.0], [16.2, 424.0], [16.3, 426.0], [16.4, 427.0], [16.5, 428.0], [16.6, 429.0], [16.7, 430.0], [16.8, 431.0], [16.9, 432.0], [17.0, 433.0], [17.1, 434.0], [17.2, 435.0], [17.3, 436.0], [17.4, 436.0], [17.5, 437.0], [17.6, 438.0], [17.7, 439.0], [17.8, 440.0], [17.9, 440.0], [18.0, 441.0], [18.1, 442.0], [18.2, 443.0], [18.3, 443.0], [18.4, 444.0], [18.5, 445.0], [18.6, 446.0], [18.7, 447.0], [18.8, 447.0], [18.9, 448.0], [19.0, 449.0], [19.1, 449.0], [19.2, 450.0], [19.3, 451.0], [19.4, 452.0], [19.5, 452.0], [19.6, 453.0], [19.7, 454.0], [19.8, 455.0], [19.9, 456.0], [20.0, 457.0], [20.1, 458.0], [20.2, 459.0], [20.3, 460.0], [20.4, 461.0], [20.5, 462.0], [20.6, 462.0], [20.7, 464.0], [20.8, 465.0], [20.9, 466.0], [21.0, 466.0], [21.1, 467.0], [21.2, 468.0], [21.3, 468.0], [21.4, 469.0], [21.5, 470.0], [21.6, 471.0], [21.7, 472.0], [21.8, 473.0], [21.9, 474.0], [22.0, 475.0], [22.1, 476.0], [22.2, 477.0], [22.3, 477.0], [22.4, 479.0], [22.5, 479.0], [22.6, 480.0], [22.7, 481.0], [22.8, 482.0], [22.9, 483.0], [23.0, 484.0], [23.1, 486.0], [23.2, 486.0], [23.3, 488.0], [23.4, 488.0], [23.5, 490.0], [23.6, 490.0], [23.7, 492.0], [23.8, 493.0], [23.9, 495.0], [24.0, 496.0], [24.1, 498.0], [24.2, 499.0], [24.3, 500.0], [24.4, 501.0], [24.5, 503.0], [24.6, 503.0], [24.7, 505.0], [24.8, 507.0], [24.9, 507.0], [25.0, 508.0], [25.1, 509.0], [25.2, 511.0], [25.3, 513.0], [25.4, 513.0], [25.5, 515.0], [25.6, 516.0], [25.7, 517.0], [25.8, 518.0], [25.9, 519.0], [26.0, 521.0], [26.1, 523.0], [26.2, 523.0], [26.3, 525.0], [26.4, 525.0], [26.5, 527.0], [26.6, 528.0], [26.7, 530.0], [26.8, 532.0], [26.9, 533.0], [27.0, 534.0], [27.1, 535.0], [27.2, 536.0], [27.3, 537.0], [27.4, 539.0], [27.5, 540.0], [27.6, 541.0], [27.7, 543.0], [27.8, 544.0], [27.9, 545.0], [28.0, 547.0], [28.1, 549.0], [28.2, 551.0], [28.3, 553.0], [28.4, 554.0], [28.5, 555.0], [28.6, 556.0], [28.7, 558.0], [28.8, 559.0], [28.9, 561.0], [29.0, 563.0], [29.1, 564.0], [29.2, 565.0], [29.3, 567.0], [29.4, 569.0], [29.5, 570.0], [29.6, 571.0], [29.7, 573.0], [29.8, 574.0], [29.9, 575.0], [30.0, 576.0], [30.1, 577.0], [30.2, 578.0], [30.3, 580.0], [30.4, 581.0], [30.5, 582.0], [30.6, 583.0], [30.7, 585.0], [30.8, 586.0], [30.9, 587.0], [31.0, 589.0], [31.1, 590.0], [31.2, 591.0], [31.3, 591.0], [31.4, 592.0], [31.5, 593.0], [31.6, 594.0], [31.7, 595.0], [31.8, 596.0], [31.9, 597.0], [32.0, 598.0], [32.1, 600.0], [32.2, 602.0], [32.3, 603.0], [32.4, 604.0], [32.5, 605.0], [32.6, 606.0], [32.7, 607.0], [32.8, 608.0], [32.9, 609.0], [33.0, 610.0], [33.1, 611.0], [33.2, 613.0], [33.3, 614.0], [33.4, 615.0], [33.5, 616.0], [33.6, 616.0], [33.7, 617.0], [33.8, 618.0], [33.9, 620.0], [34.0, 621.0], [34.1, 622.0], [34.2, 623.0], [34.3, 624.0], [34.4, 625.0], [34.5, 625.0], [34.6, 626.0], [34.7, 627.0], [34.8, 628.0], [34.9, 629.0], [35.0, 630.0], [35.1, 631.0], [35.2, 631.0], [35.3, 632.0], [35.4, 633.0], [35.5, 635.0], [35.6, 636.0], [35.7, 637.0], [35.8, 637.0], [35.9, 638.0], [36.0, 639.0], [36.1, 640.0], [36.2, 641.0], [36.3, 641.0], [36.4, 642.0], [36.5, 643.0], [36.6, 644.0], [36.7, 644.0], [36.8, 644.0], [36.9, 645.0], [37.0, 646.0], [37.1, 647.0], [37.2, 648.0], [37.3, 648.0], [37.4, 649.0], [37.5, 650.0], [37.6, 650.0], [37.7, 651.0], [37.8, 652.0], [37.9, 653.0], [38.0, 653.0], [38.1, 654.0], [38.2, 655.0], [38.3, 656.0], [38.4, 657.0], [38.5, 657.0], [38.6, 658.0], [38.7, 659.0], [38.8, 660.0], [38.9, 661.0], [39.0, 662.0], [39.1, 663.0], [39.2, 664.0], [39.3, 665.0], [39.4, 667.0], [39.5, 668.0], [39.6, 668.0], [39.7, 670.0], [39.8, 671.0], [39.9, 672.0], [40.0, 673.0], [40.1, 674.0], [40.2, 675.0], [40.3, 676.0], [40.4, 677.0], [40.5, 678.0], [40.6, 679.0], [40.7, 680.0], [40.8, 681.0], [40.9, 682.0], [41.0, 683.0], [41.1, 684.0], [41.2, 685.0], [41.3, 686.0], [41.4, 687.0], [41.5, 688.0], [41.6, 690.0], [41.7, 691.0], [41.8, 692.0], [41.9, 693.0], [42.0, 694.0], [42.1, 695.0], [42.2, 696.0], [42.3, 697.0], [42.4, 698.0], [42.5, 700.0], [42.6, 700.0], [42.7, 702.0], [42.8, 703.0], [42.9, 704.0], [43.0, 706.0], [43.1, 706.0], [43.2, 707.0], [43.3, 709.0], [43.4, 710.0], [43.5, 711.0], [43.6, 712.0], [43.7, 714.0], [43.8, 715.0], [43.9, 716.0], [44.0, 718.0], [44.1, 719.0], [44.2, 720.0], [44.3, 721.0], [44.4, 723.0], [44.5, 723.0], [44.6, 725.0], [44.7, 727.0], [44.8, 728.0], [44.9, 729.0], [45.0, 731.0], [45.1, 732.0], [45.2, 734.0], [45.3, 735.0], [45.4, 737.0], [45.5, 738.0], [45.6, 740.0], [45.7, 741.0], [45.8, 743.0], [45.9, 745.0], [46.0, 746.0], [46.1, 748.0], [46.2, 749.0], [46.3, 751.0], [46.4, 752.0], [46.5, 754.0], [46.6, 756.0], [46.7, 758.0], [46.8, 760.0], [46.9, 760.0], [47.0, 762.0], [47.1, 764.0], [47.2, 765.0], [47.3, 766.0], [47.4, 768.0], [47.5, 770.0], [47.6, 771.0], [47.7, 773.0], [47.8, 775.0], [47.9, 778.0], [48.0, 779.0], [48.1, 780.0], [48.2, 782.0], [48.3, 783.0], [48.4, 785.0], [48.5, 786.0], [48.6, 787.0], [48.7, 788.0], [48.8, 789.0], [48.9, 792.0], [49.0, 793.0], [49.1, 794.0], [49.2, 796.0], [49.3, 798.0], [49.4, 799.0], [49.5, 801.0], [49.6, 802.0], [49.7, 803.0], [49.8, 805.0], [49.9, 806.0], [50.0, 808.0], [50.1, 809.0], [50.2, 811.0], [50.3, 813.0], [50.4, 814.0], [50.5, 816.0], [50.6, 818.0], [50.7, 820.0], [50.8, 820.0], [50.9, 821.0], [51.0, 823.0], [51.1, 824.0], [51.2, 826.0], [51.3, 827.0], [51.4, 828.0], [51.5, 830.0], [51.6, 832.0], [51.7, 834.0], [51.8, 836.0], [51.9, 837.0], [52.0, 838.0], [52.1, 841.0], [52.2, 841.0], [52.3, 843.0], [52.4, 845.0], [52.5, 846.0], [52.6, 848.0], [52.7, 851.0], [52.8, 852.0], [52.9, 854.0], [53.0, 856.0], [53.1, 857.0], [53.2, 859.0], [53.3, 862.0], [53.4, 863.0], [53.5, 864.0], [53.6, 865.0], [53.7, 867.0], [53.8, 868.0], [53.9, 870.0], [54.0, 872.0], [54.1, 873.0], [54.2, 875.0], [54.3, 877.0], [54.4, 879.0], [54.5, 880.0], [54.6, 882.0], [54.7, 883.0], [54.8, 885.0], [54.9, 886.0], [55.0, 888.0], [55.1, 889.0], [55.2, 891.0], [55.3, 893.0], [55.4, 894.0], [55.5, 896.0], [55.6, 898.0], [55.7, 899.0], [55.8, 901.0], [55.9, 902.0], [56.0, 905.0], [56.1, 907.0], [56.2, 910.0], [56.3, 912.0], [56.4, 914.0], [56.5, 917.0], [56.6, 919.0], [56.7, 921.0], [56.8, 923.0], [56.9, 925.0], [57.0, 926.0], [57.1, 927.0], [57.2, 929.0], [57.3, 931.0], [57.4, 933.0], [57.5, 934.0], [57.6, 936.0], [57.7, 938.0], [57.8, 940.0], [57.9, 943.0], [58.0, 947.0], [58.1, 951.0], [58.2, 953.0], [58.3, 955.0], [58.4, 958.0], [58.5, 960.0], [58.6, 962.0], [58.7, 964.0], [58.8, 967.0], [58.9, 970.0], [59.0, 972.0], [59.1, 975.0], [59.2, 977.0], [59.3, 979.0], [59.4, 980.0], [59.5, 982.0], [59.6, 984.0], [59.7, 985.0], [59.8, 987.0], [59.9, 989.0], [60.0, 991.0], [60.1, 993.0], [60.2, 994.0], [60.3, 995.0], [60.4, 998.0], [60.5, 999.0], [60.6, 1000.0], [60.7, 1001.0], [60.8, 1003.0], [60.9, 1006.0], [61.0, 1008.0], [61.1, 1009.0], [61.2, 1011.0], [61.3, 1013.0], [61.4, 1015.0], [61.5, 1017.0], [61.6, 1018.0], [61.7, 1021.0], [61.8, 1023.0], [61.9, 1025.0], [62.0, 1026.0], [62.1, 1028.0], [62.2, 1030.0], [62.3, 1032.0], [62.4, 1034.0], [62.5, 1035.0], [62.6, 1038.0], [62.7, 1040.0], [62.8, 1041.0], [62.9, 1043.0], [63.0, 1046.0], [63.1, 1047.0], [63.2, 1049.0], [63.3, 1051.0], [63.4, 1052.0], [63.5, 1054.0], [63.6, 1055.0], [63.7, 1056.0], [63.8, 1058.0], [63.9, 1060.0], [64.0, 1060.0], [64.1, 1061.0], [64.2, 1063.0], [64.3, 1064.0], [64.4, 1066.0], [64.5, 1067.0], [64.6, 1068.0], [64.7, 1070.0], [64.8, 1072.0], [64.9, 1073.0], [65.0, 1074.0], [65.1, 1075.0], [65.2, 1076.0], [65.3, 1077.0], [65.4, 1078.0], [65.5, 1078.0], [65.6, 1080.0], [65.7, 1080.0], [65.8, 1081.0], [65.9, 1082.0], [66.0, 1083.0], [66.1, 1085.0], [66.2, 1085.0], [66.3, 1086.0], [66.4, 1086.0], [66.5, 1087.0], [66.6, 1088.0], [66.7, 1089.0], [66.8, 1090.0], [66.9, 1090.0], [67.0, 1091.0], [67.1, 1091.0], [67.2, 1092.0], [67.3, 1093.0], [67.4, 1094.0], [67.5, 1095.0], [67.6, 1095.0], [67.7, 1096.0], [67.8, 1096.0], [67.9, 1097.0], [68.0, 1098.0], [68.1, 1098.0], [68.2, 1099.0], [68.3, 1099.0], [68.4, 1100.0], [68.5, 1101.0], [68.6, 1102.0], [68.7, 1102.0], [68.8, 1103.0], [68.9, 1103.0], [69.0, 1104.0], [69.1, 1105.0], [69.2, 1105.0], [69.3, 1106.0], [69.4, 1106.0], [69.5, 1107.0], [69.6, 1108.0], [69.7, 1108.0], [69.8, 1109.0], [69.9, 1109.0], [70.0, 1110.0], [70.1, 1111.0], [70.2, 1111.0], [70.3, 1111.0], [70.4, 1112.0], [70.5, 1112.0], [70.6, 1113.0], [70.7, 1113.0], [70.8, 1114.0], [70.9, 1114.0], [71.0, 1115.0], [71.1, 1116.0], [71.2, 1116.0], [71.3, 1117.0], [71.4, 1117.0], [71.5, 1117.0], [71.6, 1118.0], [71.7, 1118.0], [71.8, 1118.0], [71.9, 1119.0], [72.0, 1119.0], [72.1, 1120.0], [72.2, 1120.0], [72.3, 1121.0], [72.4, 1121.0], [72.5, 1122.0], [72.6, 1123.0], [72.7, 1123.0], [72.8, 1123.0], [72.9, 1124.0], [73.0, 1124.0], [73.1, 1124.0], [73.2, 1125.0], [73.3, 1125.0], [73.4, 1126.0], [73.5, 1127.0], [73.6, 1127.0], [73.7, 1128.0], [73.8, 1128.0], [73.9, 1128.0], [74.0, 1129.0], [74.1, 1129.0], [74.2, 1129.0], [74.3, 1130.0], [74.4, 1131.0], [74.5, 1131.0], [74.6, 1131.0], [74.7, 1132.0], [74.8, 1133.0], [74.9, 1133.0], [75.0, 1134.0], [75.1, 1134.0], [75.2, 1135.0], [75.3, 1135.0], [75.4, 1136.0], [75.5, 1136.0], [75.6, 1136.0], [75.7, 1137.0], [75.8, 1137.0], [75.9, 1138.0], [76.0, 1138.0], [76.1, 1139.0], [76.2, 1139.0], [76.3, 1140.0], [76.4, 1140.0], [76.5, 1141.0], [76.6, 1141.0], [76.7, 1142.0], [76.8, 1143.0], [76.9, 1143.0], [77.0, 1144.0], [77.1, 1144.0], [77.2, 1144.0], [77.3, 1145.0], [77.4, 1145.0], [77.5, 1146.0], [77.6, 1146.0], [77.7, 1147.0], [77.8, 1147.0], [77.9, 1147.0], [78.0, 1148.0], [78.1, 1149.0], [78.2, 1149.0], [78.3, 1150.0], [78.4, 1150.0], [78.5, 1150.0], [78.6, 1151.0], [78.7, 1151.0], [78.8, 1152.0], [78.9, 1152.0], [79.0, 1153.0], [79.1, 1153.0], [79.2, 1154.0], [79.3, 1154.0], [79.4, 1155.0], [79.5, 1156.0], [79.6, 1156.0], [79.7, 1157.0], [79.8, 1157.0], [79.9, 1158.0], [80.0, 1158.0], [80.1, 1159.0], [80.2, 1159.0], [80.3, 1159.0], [80.4, 1160.0], [80.5, 1160.0], [80.6, 1161.0], [80.7, 1162.0], [80.8, 1163.0], [80.9, 1163.0], [81.0, 1164.0], [81.1, 1165.0], [81.2, 1166.0], [81.3, 1166.0], [81.4, 1167.0], [81.5, 1167.0], [81.6, 1168.0], [81.7, 1168.0], [81.8, 1169.0], [81.9, 1170.0], [82.0, 1170.0], [82.1, 1171.0], [82.2, 1172.0], [82.3, 1173.0], [82.4, 1174.0], [82.5, 1174.0], [82.6, 1175.0], [82.7, 1176.0], [82.8, 1177.0], [82.9, 1177.0], [83.0, 1178.0], [83.1, 1178.0], [83.2, 1179.0], [83.3, 1180.0], [83.4, 1182.0], [83.5, 1183.0], [83.6, 1183.0], [83.7, 1185.0], [83.8, 1185.0], [83.9, 1187.0], [84.0, 1189.0], [84.1, 1190.0], [84.2, 1191.0], [84.3, 1192.0], [84.4, 1194.0], [84.5, 1195.0], [84.6, 1196.0], [84.7, 1197.0], [84.8, 1197.0], [84.9, 1199.0], [85.0, 1201.0], [85.1, 1203.0], [85.2, 1204.0], [85.3, 1205.0], [85.4, 1207.0], [85.5, 1209.0], [85.6, 1211.0], [85.7, 1212.0], [85.8, 1213.0], [85.9, 1215.0], [86.0, 1217.0], [86.1, 1219.0], [86.2, 1222.0], [86.3, 1223.0], [86.4, 1225.0], [86.5, 1228.0], [86.6, 1230.0], [86.7, 1232.0], [86.8, 1234.0], [86.9, 1235.0], [87.0, 1237.0], [87.1, 1240.0], [87.2, 1241.0], [87.3, 1243.0], [87.4, 1245.0], [87.5, 1247.0], [87.6, 1249.0], [87.7, 1250.0], [87.8, 1252.0], [87.9, 1253.0], [88.0, 1255.0], [88.1, 1257.0], [88.2, 1259.0], [88.3, 1261.0], [88.4, 1263.0], [88.5, 1267.0], [88.6, 1269.0], [88.7, 1271.0], [88.8, 1273.0], [88.9, 1275.0], [89.0, 1278.0], [89.1, 1280.0], [89.2, 1283.0], [89.3, 1285.0], [89.4, 1287.0], [89.5, 1290.0], [89.6, 1292.0], [89.7, 1294.0], [89.8, 1297.0], [89.9, 1300.0], [90.0, 1304.0], [90.1, 1306.0], [90.2, 1308.0], [90.3, 1310.0], [90.4, 1313.0], [90.5, 1316.0], [90.6, 1318.0], [90.7, 1321.0], [90.8, 1324.0], [90.9, 1326.0], [91.0, 1329.0], [91.1, 1331.0], [91.2, 1333.0], [91.3, 1336.0], [91.4, 1338.0], [91.5, 1340.0], [91.6, 1342.0], [91.7, 1344.0], [91.8, 1347.0], [91.9, 1351.0], [92.0, 1353.0], [92.1, 1356.0], [92.2, 1359.0], [92.3, 1364.0], [92.4, 1367.0], [92.5, 1371.0], [92.6, 1373.0], [92.7, 1376.0], [92.8, 1380.0], [92.9, 1383.0], [93.0, 1386.0], [93.1, 1389.0], [93.2, 1393.0], [93.3, 1395.0], [93.4, 1401.0], [93.5, 1405.0], [93.6, 1409.0], [93.7, 1412.0], [93.8, 1414.0], [93.9, 1417.0], [94.0, 1421.0], [94.1, 1423.0], [94.2, 1425.0], [94.3, 1428.0], [94.4, 1430.0], [94.5, 1432.0], [94.6, 1434.0], [94.7, 1436.0], [94.8, 1439.0], [94.9, 1442.0], [95.0, 1444.0], [95.1, 1447.0], [95.2, 1451.0], [95.3, 1453.0], [95.4, 1457.0], [95.5, 1459.0], [95.6, 1461.0], [95.7, 1464.0], [95.8, 1469.0], [95.9, 1472.0], [96.0, 1476.0], [96.1, 1480.0], [96.2, 1484.0], [96.3, 1486.0], [96.4, 1490.0], [96.5, 1492.0], [96.6, 1494.0], [96.7, 1498.0], [96.8, 1504.0], [96.9, 1507.0], [97.0, 1510.0], [97.1, 1513.0], [97.2, 1516.0], [97.3, 1519.0], [97.4, 1522.0], [97.5, 1524.0], [97.6, 1530.0], [97.7, 1536.0], [97.8, 1541.0], [97.9, 1545.0], [98.0, 1554.0], [98.1, 1564.0], [98.2, 1570.0], [98.3, 1579.0], [98.4, 1589.0], [98.5, 1602.0], [98.6, 1612.0], [98.7, 1622.0], [98.8, 1652.0], [98.9, 1676.0], [99.0, 1694.0], [99.1, 1719.0], [99.2, 1749.0], [99.3, 1769.0], [99.4, 1793.0], [99.5, 1803.0], [99.6, 1826.0], [99.7, 1867.0], [99.8, 1894.0], [99.9, 2047.0], [100.0, 2419.0]], "isOverall": false, "label": "(LoadTesting)CreatePaymentToken_tr_ForGivenPaymentSource", "isController": true}, {"data": [[0.0, 304.0], [0.1, 304.0], [0.2, 304.0], [0.3, 304.0], [0.4, 304.0], [0.5, 304.0], [0.6, 304.0], [0.7, 308.0], [0.8, 308.0], [0.9, 308.0], [1.0, 308.0], [1.1, 308.0], [1.2, 308.0], [1.3, 308.0], [1.4, 310.0], [1.5, 310.0], [1.6, 310.0], [1.7, 310.0], [1.8, 310.0], [1.9, 310.0], [2.0, 313.0], [2.1, 313.0], [2.2, 313.0], [2.3, 313.0], [2.4, 313.0], [2.5, 313.0], [2.6, 313.0], [2.7, 313.0], [2.8, 313.0], [2.9, 313.0], [3.0, 313.0], [3.1, 313.0], [3.2, 313.0], [3.3, 313.0], [3.4, 314.0], [3.5, 314.0], [3.6, 314.0], [3.7, 314.0], [3.8, 314.0], [3.9, 314.0], [4.0, 315.0], [4.1, 315.0], [4.2, 315.0], [4.3, 315.0], [4.4, 315.0], [4.5, 315.0], [4.6, 315.0], [4.7, 315.0], [4.8, 315.0], [4.9, 315.0], [5.0, 315.0], [5.1, 315.0], [5.2, 315.0], [5.3, 315.0], [5.4, 316.0], [5.5, 316.0], [5.6, 316.0], [5.7, 316.0], [5.8, 316.0], [5.9, 316.0], [6.0, 316.0], [6.1, 316.0], [6.2, 316.0], [6.3, 316.0], [6.4, 316.0], [6.5, 316.0], [6.6, 316.0], [6.7, 317.0], [6.8, 317.0], [6.9, 317.0], [7.0, 317.0], [7.1, 317.0], [7.2, 317.0], [7.3, 317.0], [7.4, 317.0], [7.5, 317.0], [7.6, 317.0], [7.7, 317.0], [7.8, 317.0], [7.9, 317.0], [8.0, 317.0], [8.1, 317.0], [8.2, 317.0], [8.3, 317.0], [8.4, 317.0], [8.5, 317.0], [8.6, 317.0], [8.7, 318.0], [8.8, 318.0], [8.9, 318.0], [9.0, 318.0], [9.1, 318.0], [9.2, 318.0], [9.3, 318.0], [9.4, 319.0], [9.5, 319.0], [9.6, 319.0], [9.7, 319.0], [9.8, 319.0], [9.9, 319.0], [10.0, 320.0], [10.1, 320.0], [10.2, 320.0], [10.3, 320.0], [10.4, 320.0], [10.5, 320.0], [10.6, 320.0], [10.7, 322.0], [10.8, 322.0], [10.9, 322.0], [11.0, 322.0], [11.1, 322.0], [11.2, 322.0], [11.3, 322.0], [11.4, 323.0], [11.5, 323.0], [11.6, 323.0], [11.7, 323.0], [11.8, 323.0], [11.9, 323.0], [12.0, 323.0], [12.1, 323.0], [12.2, 323.0], [12.3, 323.0], [12.4, 323.0], [12.5, 323.0], [12.6, 323.0], [12.7, 323.0], [12.8, 323.0], [12.9, 323.0], [13.0, 323.0], [13.1, 323.0], [13.2, 323.0], [13.3, 323.0], [13.4, 324.0], [13.5, 324.0], [13.6, 324.0], [13.7, 324.0], [13.8, 324.0], [13.9, 324.0], [14.0, 325.0], [14.1, 325.0], [14.2, 325.0], [14.3, 325.0], [14.4, 325.0], [14.5, 325.0], [14.6, 325.0], [14.7, 325.0], [14.8, 325.0], [14.9, 325.0], [15.0, 325.0], [15.1, 325.0], [15.2, 325.0], [15.3, 325.0], [15.4, 326.0], [15.5, 326.0], [15.6, 326.0], [15.7, 326.0], [15.8, 326.0], [15.9, 326.0], [16.0, 326.0], [16.1, 326.0], [16.2, 326.0], [16.3, 326.0], [16.4, 326.0], [16.5, 326.0], [16.6, 326.0], [16.7, 327.0], [16.8, 327.0], [16.9, 327.0], [17.0, 327.0], [17.1, 327.0], [17.2, 327.0], [17.3, 327.0], [17.4, 327.0], [17.5, 327.0], [17.6, 327.0], [17.7, 327.0], [17.8, 327.0], [17.9, 327.0], [18.0, 327.0], [18.1, 327.0], [18.2, 327.0], [18.3, 327.0], [18.4, 327.0], [18.5, 327.0], [18.6, 327.0], [18.7, 328.0], [18.8, 328.0], [18.9, 328.0], [19.0, 328.0], [19.1, 328.0], [19.2, 328.0], [19.3, 328.0], [19.4, 328.0], [19.5, 328.0], [19.6, 328.0], [19.7, 328.0], [19.8, 328.0], [19.9, 328.0], [20.0, 328.0], [20.1, 328.0], [20.2, 328.0], [20.3, 328.0], [20.4, 328.0], [20.5, 328.0], [20.6, 328.0], [20.7, 329.0], [20.8, 329.0], [20.9, 329.0], [21.0, 329.0], [21.1, 329.0], [21.2, 329.0], [21.3, 329.0], [21.4, 329.0], [21.5, 329.0], [21.6, 329.0], [21.7, 329.0], [21.8, 329.0], [21.9, 329.0], [22.0, 330.0], [22.1, 330.0], [22.2, 330.0], [22.3, 330.0], [22.4, 330.0], [22.5, 330.0], [22.6, 330.0], [22.7, 331.0], [22.8, 331.0], [22.9, 331.0], [23.0, 331.0], [23.1, 331.0], [23.2, 331.0], [23.3, 331.0], [23.4, 331.0], [23.5, 331.0], [23.6, 331.0], [23.7, 331.0], [23.8, 331.0], [23.9, 331.0], [24.0, 331.0], [24.1, 331.0], [24.2, 331.0], [24.3, 331.0], [24.4, 331.0], [24.5, 331.0], [24.6, 331.0], [24.7, 332.0], [24.8, 332.0], [24.9, 332.0], [25.0, 332.0], [25.1, 332.0], [25.2, 332.0], [25.3, 332.0], [25.4, 332.0], [25.5, 332.0], [25.6, 332.0], [25.7, 332.0], [25.8, 332.0], [25.9, 332.0], [26.0, 332.0], [26.1, 332.0], [26.2, 332.0], [26.3, 332.0], [26.4, 332.0], [26.5, 332.0], [26.6, 332.0], [26.7, 333.0], [26.8, 333.0], [26.9, 333.0], [27.0, 333.0], [27.1, 333.0], [27.2, 333.0], [27.3, 333.0], [27.4, 333.0], [27.5, 333.0], [27.6, 333.0], [27.7, 333.0], [27.8, 333.0], [27.9, 333.0], [28.0, 334.0], [28.1, 334.0], [28.2, 334.0], [28.3, 334.0], [28.4, 334.0], [28.5, 334.0], [28.6, 334.0], [28.7, 335.0], [28.8, 335.0], [28.9, 335.0], [29.0, 335.0], [29.1, 335.0], [29.2, 335.0], [29.3, 335.0], [29.4, 335.0], [29.5, 335.0], [29.6, 335.0], [29.7, 335.0], [29.8, 335.0], [29.9, 335.0], [30.0, 335.0], [30.1, 335.0], [30.2, 335.0], [30.3, 335.0], [30.4, 335.0], [30.5, 335.0], [30.6, 335.0], [30.7, 335.0], [30.8, 335.0], [30.9, 335.0], [31.0, 335.0], [31.1, 335.0], [31.2, 335.0], [31.3, 335.0], [31.4, 335.0], [31.5, 335.0], [31.6, 335.0], [31.7, 335.0], [31.8, 335.0], [31.9, 335.0], [32.0, 336.0], [32.1, 336.0], [32.2, 336.0], [32.3, 336.0], [32.4, 336.0], [32.5, 336.0], [32.6, 336.0], [32.7, 336.0], [32.8, 336.0], [32.9, 336.0], [33.0, 336.0], [33.1, 336.0], [33.2, 336.0], [33.3, 336.0], [33.4, 336.0], [33.5, 336.0], [33.6, 336.0], [33.7, 336.0], [33.8, 336.0], [33.9, 336.0], [34.0, 337.0], [34.1, 337.0], [34.2, 337.0], [34.3, 337.0], [34.4, 337.0], [34.5, 337.0], [34.6, 337.0], [34.7, 337.0], [34.8, 337.0], [34.9, 337.0], [35.0, 337.0], [35.1, 337.0], [35.2, 337.0], [35.3, 337.0], [35.4, 337.0], [35.5, 337.0], [35.6, 337.0], [35.7, 337.0], [35.8, 337.0], [35.9, 337.0], [36.0, 338.0], [36.1, 338.0], [36.2, 338.0], [36.3, 338.0], [36.4, 338.0], [36.5, 338.0], [36.6, 338.0], [36.7, 338.0], [36.8, 338.0], [36.9, 338.0], [37.0, 338.0], [37.1, 338.0], [37.2, 338.0], [37.3, 338.0], [37.4, 339.0], [37.5, 339.0], [37.6, 339.0], [37.7, 339.0], [37.8, 339.0], [37.9, 339.0], [38.0, 339.0], [38.1, 339.0], [38.2, 339.0], [38.3, 339.0], [38.4, 339.0], [38.5, 339.0], [38.6, 339.0], [38.7, 340.0], [38.8, 340.0], [38.9, 340.0], [39.0, 340.0], [39.1, 340.0], [39.2, 340.0], [39.3, 340.0], [39.4, 341.0], [39.5, 341.0], [39.6, 341.0], [39.7, 341.0], [39.8, 341.0], [39.9, 341.0], [40.0, 341.0], [40.1, 341.0], [40.2, 341.0], [40.3, 341.0], [40.4, 341.0], [40.5, 341.0], [40.6, 341.0], [40.7, 342.0], [40.8, 342.0], [40.9, 342.0], [41.0, 342.0], [41.1, 342.0], [41.2, 342.0], [41.3, 342.0], [41.4, 342.0], [41.5, 342.0], [41.6, 342.0], [41.7, 342.0], [41.8, 342.0], [41.9, 342.0], [42.0, 342.0], [42.1, 342.0], [42.2, 342.0], [42.3, 342.0], [42.4, 342.0], [42.5, 342.0], [42.6, 342.0], [42.7, 342.0], [42.8, 342.0], [42.9, 342.0], [43.0, 342.0], [43.1, 342.0], [43.2, 342.0], [43.3, 342.0], [43.4, 343.0], [43.5, 343.0], [43.6, 343.0], [43.7, 343.0], [43.8, 343.0], [43.9, 343.0], [44.0, 343.0], [44.1, 343.0], [44.2, 343.0], [44.3, 343.0], [44.4, 343.0], [44.5, 343.0], [44.6, 343.0], [44.7, 343.0], [44.8, 343.0], [44.9, 343.0], [45.0, 343.0], [45.1, 343.0], [45.2, 343.0], [45.3, 343.0], [45.4, 344.0], [45.5, 344.0], [45.6, 344.0], [45.7, 344.0], [45.8, 344.0], [45.9, 344.0], [46.0, 345.0], [46.1, 345.0], [46.2, 345.0], [46.3, 345.0], [46.4, 345.0], [46.5, 345.0], [46.6, 345.0], [46.7, 346.0], [46.8, 346.0], [46.9, 346.0], [47.0, 346.0], [47.1, 346.0], [47.2, 346.0], [47.3, 346.0], [47.4, 347.0], [47.5, 347.0], [47.6, 347.0], [47.7, 347.0], [47.8, 347.0], [47.9, 347.0], [48.0, 350.0], [48.1, 350.0], [48.2, 350.0], [48.3, 350.0], [48.4, 350.0], [48.5, 350.0], [48.6, 350.0], [48.7, 350.0], [48.8, 350.0], [48.9, 350.0], [49.0, 350.0], [49.1, 350.0], [49.2, 350.0], [49.3, 350.0], [49.4, 351.0], [49.5, 351.0], [49.6, 351.0], [49.7, 351.0], [49.8, 351.0], [49.9, 351.0], [50.0, 352.0], [50.1, 352.0], [50.2, 352.0], [50.3, 352.0], [50.4, 352.0], [50.5, 352.0], [50.6, 352.0], [50.7, 355.0], [50.8, 355.0], [50.9, 355.0], [51.0, 355.0], [51.1, 355.0], [51.2, 355.0], [51.3, 355.0], [51.4, 356.0], [51.5, 356.0], [51.6, 356.0], [51.7, 356.0], [51.8, 356.0], [51.9, 356.0], [52.0, 359.0], [52.1, 359.0], [52.2, 359.0], [52.3, 359.0], [52.4, 359.0], [52.5, 359.0], [52.6, 359.0], [52.7, 359.0], [52.8, 359.0], [52.9, 359.0], [53.0, 359.0], [53.1, 359.0], [53.2, 359.0], [53.3, 359.0], [53.4, 360.0], [53.5, 360.0], [53.6, 360.0], [53.7, 360.0], [53.8, 360.0], [53.9, 360.0], [54.0, 361.0], [54.1, 361.0], [54.2, 361.0], [54.3, 361.0], [54.4, 361.0], [54.5, 361.0], [54.6, 361.0], [54.7, 361.0], [54.8, 361.0], [54.9, 361.0], [55.0, 361.0], [55.1, 361.0], [55.2, 361.0], [55.3, 361.0], [55.4, 365.0], [55.5, 365.0], [55.6, 365.0], [55.7, 365.0], [55.8, 365.0], [55.9, 365.0], [56.0, 367.0], [56.1, 367.0], [56.2, 367.0], [56.3, 367.0], [56.4, 367.0], [56.5, 367.0], [56.6, 367.0], [56.7, 368.0], [56.8, 368.0], [56.9, 368.0], [57.0, 368.0], [57.1, 368.0], [57.2, 368.0], [57.3, 368.0], [57.4, 369.0], [57.5, 369.0], [57.6, 369.0], [57.7, 369.0], [57.8, 369.0], [57.9, 369.0], [58.0, 369.0], [58.1, 369.0], [58.2, 369.0], [58.3, 369.0], [58.4, 369.0], [58.5, 369.0], [58.6, 369.0], [58.7, 369.0], [58.8, 369.0], [58.9, 369.0], [59.0, 369.0], [59.1, 369.0], [59.2, 369.0], [59.3, 369.0], [59.4, 373.0], [59.5, 373.0], [59.6, 373.0], [59.7, 373.0], [59.8, 373.0], [59.9, 373.0], [60.0, 380.0], [60.1, 380.0], [60.2, 380.0], [60.3, 380.0], [60.4, 380.0], [60.5, 380.0], [60.6, 380.0], [60.7, 381.0], [60.8, 381.0], [60.9, 381.0], [61.0, 381.0], [61.1, 381.0], [61.2, 381.0], [61.3, 381.0], [61.4, 381.0], [61.5, 381.0], [61.6, 381.0], [61.7, 381.0], [61.8, 381.0], [61.9, 381.0], [62.0, 385.0], [62.1, 385.0], [62.2, 385.0], [62.3, 385.0], [62.4, 385.0], [62.5, 385.0], [62.6, 385.0], [62.7, 385.0], [62.8, 385.0], [62.9, 385.0], [63.0, 385.0], [63.1, 385.0], [63.2, 385.0], [63.3, 385.0], [63.4, 386.0], [63.5, 386.0], [63.6, 386.0], [63.7, 386.0], [63.8, 386.0], [63.9, 386.0], [64.0, 388.0], [64.1, 388.0], [64.2, 388.0], [64.3, 388.0], [64.4, 388.0], [64.5, 388.0], [64.6, 388.0], [64.7, 392.0], [64.8, 392.0], [64.9, 392.0], [65.0, 392.0], [65.1, 392.0], [65.2, 392.0], [65.3, 392.0], [65.4, 414.0], [65.5, 414.0], [65.6, 414.0], [65.7, 414.0], [65.8, 414.0], [65.9, 414.0], [66.0, 415.0], [66.1, 415.0], [66.2, 415.0], [66.3, 415.0], [66.4, 415.0], [66.5, 415.0], [66.6, 415.0], [66.7, 415.0], [66.8, 415.0], [66.9, 415.0], [67.0, 415.0], [67.1, 415.0], [67.2, 415.0], [67.3, 415.0], [67.4, 416.0], [67.5, 416.0], [67.6, 416.0], [67.7, 416.0], [67.8, 416.0], [67.9, 416.0], [68.0, 420.0], [68.1, 420.0], [68.2, 420.0], [68.3, 420.0], [68.4, 420.0], [68.5, 420.0], [68.6, 420.0], [68.7, 425.0], [68.8, 425.0], [68.9, 425.0], [69.0, 425.0], [69.1, 425.0], [69.2, 425.0], [69.3, 425.0], [69.4, 429.0], [69.5, 429.0], [69.6, 429.0], [69.7, 429.0], [69.8, 429.0], [69.9, 429.0], [70.0, 434.0], [70.1, 434.0], [70.2, 434.0], [70.3, 434.0], [70.4, 434.0], [70.5, 434.0], [70.6, 434.0], [70.7, 438.0], [70.8, 438.0], [70.9, 438.0], [71.0, 438.0], [71.1, 438.0], [71.2, 438.0], [71.3, 438.0], [71.4, 445.0], [71.5, 445.0], [71.6, 445.0], [71.7, 445.0], [71.8, 445.0], [71.9, 445.0], [72.0, 445.0], [72.1, 447.0], [72.2, 447.0], [72.3, 447.0], [72.4, 447.0], [72.5, 447.0], [72.6, 447.0], [72.7, 452.0], [72.8, 452.0], [72.9, 452.0], [73.0, 452.0], [73.1, 452.0], [73.2, 452.0], [73.3, 452.0], [73.4, 459.0], [73.5, 459.0], [73.6, 459.0], [73.7, 459.0], [73.8, 459.0], [73.9, 459.0], [74.0, 459.0], [74.1, 462.0], [74.2, 462.0], [74.3, 462.0], [74.4, 462.0], [74.5, 462.0], [74.6, 462.0], [74.7, 466.0], [74.8, 466.0], [74.9, 466.0], [75.0, 466.0], [75.1, 466.0], [75.2, 466.0], [75.3, 466.0], [75.4, 496.0], [75.5, 496.0], [75.6, 496.0], [75.7, 496.0], [75.8, 496.0], [75.9, 496.0], [76.0, 496.0], [76.1, 549.0], [76.2, 549.0], [76.3, 549.0], [76.4, 549.0], [76.5, 549.0], [76.6, 549.0], [76.7, 566.0], [76.8, 566.0], [76.9, 566.0], [77.0, 566.0], [77.1, 566.0], [77.2, 566.0], [77.3, 566.0], [77.4, 577.0], [77.5, 577.0], [77.6, 577.0], [77.7, 577.0], [77.8, 577.0], [77.9, 577.0], [78.0, 577.0], [78.1, 598.0], [78.2, 598.0], [78.3, 598.0], [78.4, 598.0], [78.5, 598.0], [78.6, 598.0], [78.7, 623.0], [78.8, 623.0], [78.9, 623.0], [79.0, 623.0], [79.1, 623.0], [79.2, 623.0], [79.3, 623.0], [79.4, 675.0], [79.5, 675.0], [79.6, 675.0], [79.7, 675.0], [79.8, 675.0], [79.9, 675.0], [80.0, 675.0], [80.1, 689.0], [80.2, 689.0], [80.3, 689.0], [80.4, 689.0], [80.5, 689.0], [80.6, 689.0], [80.7, 712.0], [80.8, 712.0], [80.9, 712.0], [81.0, 712.0], [81.1, 712.0], [81.2, 712.0], [81.3, 712.0], [81.4, 731.0], [81.5, 731.0], [81.6, 731.0], [81.7, 731.0], [81.8, 731.0], [81.9, 731.0], [82.0, 731.0], [82.1, 765.0], [82.2, 765.0], [82.3, 765.0], [82.4, 765.0], [82.5, 765.0], [82.6, 765.0], [82.7, 769.0], [82.8, 769.0], [82.9, 769.0], [83.0, 769.0], [83.1, 769.0], [83.2, 769.0], [83.3, 769.0], [83.4, 780.0], [83.5, 780.0], [83.6, 780.0], [83.7, 780.0], [83.8, 780.0], [83.9, 780.0], [84.0, 780.0], [84.1, 820.0], [84.2, 820.0], [84.3, 820.0], [84.4, 820.0], [84.5, 820.0], [84.6, 820.0], [84.7, 833.0], [84.8, 833.0], [84.9, 833.0], [85.0, 833.0], [85.1, 833.0], [85.2, 833.0], [85.3, 833.0], [85.4, 841.0], [85.5, 841.0], [85.6, 841.0], [85.7, 841.0], [85.8, 841.0], [85.9, 841.0], [86.0, 841.0], [86.1, 842.0], [86.2, 842.0], [86.3, 842.0], [86.4, 842.0], [86.5, 842.0], [86.6, 842.0], [86.7, 847.0], [86.8, 847.0], [86.9, 847.0], [87.0, 847.0], [87.1, 847.0], [87.2, 847.0], [87.3, 847.0], [87.4, 849.0], [87.5, 849.0], [87.6, 849.0], [87.7, 849.0], [87.8, 849.0], [87.9, 849.0], [88.0, 849.0], [88.1, 850.0], [88.2, 850.0], [88.3, 850.0], [88.4, 850.0], [88.5, 850.0], [88.6, 850.0], [88.7, 856.0], [88.8, 856.0], [88.9, 856.0], [89.0, 856.0], [89.1, 856.0], [89.2, 856.0], [89.3, 856.0], [89.4, 858.0], [89.5, 858.0], [89.6, 858.0], [89.7, 858.0], [89.8, 858.0], [89.9, 858.0], [90.0, 858.0], [90.1, 861.0], [90.2, 861.0], [90.3, 861.0], [90.4, 861.0], [90.5, 861.0], [90.6, 861.0], [90.7, 867.0], [90.8, 867.0], [90.9, 867.0], [91.0, 867.0], [91.1, 867.0], [91.2, 867.0], [91.3, 867.0], [91.4, 876.0], [91.5, 876.0], [91.6, 876.0], [91.7, 876.0], [91.8, 876.0], [91.9, 876.0], [92.0, 876.0], [92.1, 877.0], [92.2, 877.0], [92.3, 877.0], [92.4, 877.0], [92.5, 877.0], [92.6, 877.0], [92.7, 923.0], [92.8, 923.0], [92.9, 923.0], [93.0, 923.0], [93.1, 923.0], [93.2, 923.0], [93.3, 923.0], [93.4, 927.0], [93.5, 927.0], [93.6, 927.0], [93.7, 927.0], [93.8, 927.0], [93.9, 927.0], [94.0, 927.0], [94.1, 950.0], [94.2, 950.0], [94.3, 950.0], [94.4, 950.0], [94.5, 950.0], [94.6, 950.0], [94.7, 1035.0], [94.8, 1035.0], [94.9, 1035.0], [95.0, 1035.0], [95.1, 1035.0], [95.2, 1035.0], [95.3, 1035.0], [95.4, 1135.0], [95.5, 1135.0], [95.6, 1135.0], [95.7, 1135.0], [95.8, 1135.0], [95.9, 1135.0], [96.0, 1135.0], [96.1, 1154.0], [96.2, 1154.0], [96.3, 1154.0], [96.4, 1154.0], [96.5, 1154.0], [96.6, 1154.0], [96.7, 1237.0], [96.8, 1237.0], [96.9, 1237.0], [97.0, 1237.0], [97.1, 1237.0], [97.2, 1237.0], [97.3, 1237.0], [97.4, 1315.0], [97.5, 1315.0], [97.6, 1315.0], [97.7, 1315.0], [97.8, 1315.0], [97.9, 1315.0], [98.0, 1315.0], [98.1, 1438.0], [98.2, 1438.0], [98.3, 1438.0], [98.4, 1438.0], [98.5, 1438.0], [98.6, 1438.0], [98.7, 1516.0], [98.8, 1516.0], [98.9, 1516.0], [99.0, 1516.0], [99.1, 1516.0], [99.2, 1516.0], [99.3, 1516.0], [99.4, 1526.0], [99.5, 1526.0], [99.6, 1526.0], [99.7, 1526.0], [99.8, 1526.0], [99.9, 1526.0], [100.0, 1526.0]], "isOverall": false, "label": "Get Auth Token", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1807.0, "series": [{"data": [[0.0, 11.0], [600.0, 1151.0], [700.0, 753.0], [800.0, 676.0], [900.0, 496.0], [1000.0, 836.0], [1100.0, 1805.0], [1200.0, 526.0], [1300.0, 376.0], [1400.0, 362.0], [1500.0, 193.0], [1600.0, 59.0], [100.0, 7.0], [1700.0, 46.0], [1800.0, 38.0], [1900.0, 8.0], [2000.0, 6.0], [2100.0, 3.0], [2300.0, 1.0], [2200.0, 1.0], [2400.0, 1.0], [200.0, 68.0], [300.0, 1337.0], [400.0, 1159.0], [500.0, 853.0]], "isOverall": false, "label": "Create payment token for a given payment source", "isController": false}, {"data": [[0.0, 95.0], [600.0, 1132.0], [700.0, 750.0], [800.0, 686.0], [900.0, 522.0], [1000.0, 844.0], [1100.0, 1807.0], [1200.0, 535.0], [1300.0, 381.0], [1400.0, 362.0], [1500.0, 193.0], [1600.0, 59.0], [100.0, 7.0], [1700.0, 46.0], [1800.0, 38.0], [1900.0, 8.0], [2000.0, 6.0], [2100.0, 3.0], [2300.0, 1.0], [2200.0, 1.0], [2400.0, 1.0], [200.0, 68.0], [300.0, 1314.0], [400.0, 1149.0], [500.0, 848.0]], "isOverall": false, "label": "(LoadTesting)CreatePaymentToken_tr_ForGivenPaymentSource", "isController": true}, {"data": [[600.0, 3.0], [700.0, 5.0], [800.0, 13.0], [900.0, 3.0], [1000.0, 1.0], [1100.0, 2.0], [300.0, 98.0], [1200.0, 1.0], [1300.0, 1.0], [1400.0, 1.0], [1500.0, 2.0], [400.0, 16.0], [500.0, 4.0]], "isOverall": false, "label": "Get Auth Token", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 2400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 104.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 7923.0, "series": [{"data": [[0.0, 2688.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 7923.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 357.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 104.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 89.80643203883497, "minX": 1.71751704E12, "maxY": 149.84383662908806, "series": [{"data": [[1.7175171E12, 149.84383662908806], [1.71751716E12, 108.41307247665615], [1.71751704E12, 89.80643203883497]], "isOverall": false, "label": "CreatePaymentToken_LoadTesting", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71751716E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 13.0, "maxY": 1760.0, "series": [{"data": [[15.0, 354.0], [16.0, 341.0], [18.0, 333.0], [19.0, 332.0], [21.0, 318.0], [25.0, 322.0], [28.0, 320.0], [29.0, 327.0], [30.0, 321.0], [33.0, 324.0], [32.0, 330.0], [35.0, 338.6666666666667], [37.0, 339.0], [38.0, 339.0], [40.0, 323.0], [45.0, 330.0], [44.0, 329.0], [47.0, 308.0], [46.0, 318.0], [49.0, 335.0], [48.0, 310.0], [51.0, 331.0], [50.0, 331.0], [52.0, 331.0], [55.0, 350.3333333333333], [54.0, 321.0], [57.0, 334.0], [56.0, 348.0], [58.0, 351.3333333333333], [61.0, 398.0], [63.0, 412.0], [62.0, 419.0], [67.0, 465.5], [66.0, 431.0], [65.0, 457.0], [64.0, 459.0], [70.0, 389.0], [69.0, 376.2], [68.0, 473.5], [75.0, 389.0], [74.0, 374.0], [73.0, 369.0], [77.0, 301.5], [79.0, 342.5], [78.0, 323.0], [76.0, 334.0], [82.0, 352.0], [81.0, 397.0], [80.0, 388.0], [84.0, 419.0], [86.0, 413.16666666666663], [87.0, 450.6], [88.0, 370.5714285714286], [90.0, 427.75], [91.0, 375.0], [89.0, 446.2], [92.0, 357.4], [94.0, 363.6666666666667], [95.0, 464.33333333333337], [97.0, 452.6666666666667], [98.0, 388.5], [99.0, 461.0], [96.0, 452.0], [101.0, 439.5], [103.0, 353.0], [102.0, 500.0], [100.0, 418.0], [104.0, 789.0], [105.0, 616.0], [106.0, 497.0], [107.0, 448.8333333333333], [108.0, 413.16666666666663], [109.0, 413.5714285714286], [111.0, 464.8], [110.0, 519.0], [112.0, 411.6666666666667], [113.0, 496.2727272727273], [114.0, 470.84615384615387], [115.0, 513.3], [116.0, 443.14285714285717], [117.0, 504.2], [118.0, 631.0], [122.0, 538.375], [123.0, 545.7142857142857], [121.0, 584.5], [124.0, 596.6666666666666], [126.0, 519.75], [125.0, 494.0], [128.0, 397.125], [133.0, 485.25], [135.0, 629.0], [134.0, 688.0], [132.0, 615.0], [131.0, 521.6363636363636], [130.0, 526.0], [129.0, 540.0], [137.0, 455.125], [139.0, 327.5], [142.0, 518.5], [143.0, 494.6875], [141.0, 548.1999999999999], [140.0, 645.5], [138.0, 655.3333333333334], [136.0, 628.5], [144.0, 448.5], [145.0, 345.0], [146.0, 480.0], [148.0, 519.3333333333334], [149.0, 474.0], [151.0, 567.8], [150.0, 619.5], [154.0, 432.3333333333333], [158.0, 579.3333333333334], [159.0, 623.9166666666667], [157.0, 526.0], [156.0, 584.0], [153.0, 471.5], [152.0, 650.7142857142857], [162.0, 343.0], [163.0, 506.5], [164.0, 512.4444444444443], [166.0, 327.0], [167.0, 349.0], [165.0, 341.0], [161.0, 699.25], [160.0, 687.3333333333334], [168.0, 586.0], [172.0, 429.8], [173.0, 404.75], [174.0, 462.3], [175.0, 493.8], [171.0, 533.6666666666666], [170.0, 561.5555555555555], [169.0, 518.4545454545455], [176.0, 516.5], [177.0, 479.6], [178.0, 408.1818181818182], [179.0, 337.57142857142856], [180.0, 466.125], [181.0, 382.94736842105266], [182.0, 334.50000000000006], [183.0, 437.1538461538462], [184.0, 461.6470588235294], [185.0, 421.38461538461536], [186.0, 408.58333333333337], [187.0, 412.1875], [188.0, 473.8888888888889], [189.0, 410.83333333333337], [190.0, 455.0], [191.0, 440.40000000000003], [192.0, 432.1176470588235], [193.0, 433.94444444444446], [194.0, 439.66666666666663], [195.0, 433.9230769230769], [196.0, 372.27777777777777], [197.0, 351.92307692307696], [198.0, 335.99999999999994], [199.0, 473.80000000000007], [200.0, 401.84], [201.0, 544.3571428571429], [203.0, 412.25], [204.0, 416.25], [206.0, 451.25], [207.0, 516.4], [205.0, 647.5], [202.0, 543.3333333333334], [208.0, 521.25], [209.0, 362.0], [211.0, 578.4444444444445], [212.0, 576.25], [213.0, 515.8571428571428], [214.0, 443.44444444444446], [215.0, 319.3333333333333], [210.0, 567.8749999999999], [216.0, 343.5], [217.0, 340.0], [218.0, 514.3333333333333], [221.0, 452.6666666666667], [223.0, 464.8], [220.0, 624.6666666666666], [219.0, 415.2], [224.0, 462.96153846153845], [225.0, 547.0], [226.0, 320.3333333333333], [227.0, 424.8333333333333], [228.0, 427.6], [231.0, 537.4285714285714], [230.0, 686.0], [229.0, 329.0], [232.0, 465.8], [233.0, 415.2], [237.0, 499.0], [236.0, 422.25], [235.0, 486.1666666666667], [239.0, 455.75], [238.0, 511.50000000000006], [234.0, 491.4], [242.0, 429.0], [243.0, 473.3], [244.0, 419.1666666666667], [245.0, 392.625], [246.0, 428.12499999999994], [247.0, 437.0], [241.0, 536.9090909090909], [248.0, 473.0909090909091], [252.0, 666.8181818181819], [253.0, 409.29999999999995], [254.0, 565.4285714285714], [255.0, 496.3333333333333], [251.0, 498.2], [250.0, 328.0], [249.0, 631.4000000000001], [257.0, 348.57142857142856], [256.0, 486.5333333333333], [258.0, 444.9642857142858], [259.0, 390.85714285714283], [260.0, 452.0000000000001], [261.0, 430.57894736842104], [262.0, 426.62162162162167], [263.0, 381.7], [264.0, 475.95], [270.0, 500.62500000000006], [271.0, 402.16666666666674], [268.0, 495.0555555555556], [269.0, 447.51999999999987], [265.0, 380.76190476190476], [266.0, 372.99999999999994], [267.0, 351.9411764705882], [273.0, 510.3214285714286], [272.0, 436.69696969696975], [274.0, 348.77272727272737], [275.0, 408.42105263157896], [276.0, 440.83333333333326], [277.0, 427.80000000000007], [278.0, 355.1052631578947], [279.0, 430.3076923076923], [280.0, 485.61016949152537], [286.0, 397.6], [287.0, 531.9999999999999], [284.0, 485.7647058823529], [285.0, 440.84000000000003], [281.0, 466.71428571428567], [282.0, 419.25], [283.0, 511.65384615384625], [288.0, 419.57142857142856], [293.0, 511.2857142857142], [292.0, 511.99999999999983], [289.0, 419.0], [290.0, 532.0000000000001], [300.0, 512.04], [291.0, 515.7878787878789], [301.0, 586.15], [303.0, 425.75], [302.0, 673.4285714285714], [294.0, 545.1999999999999], [295.0, 439.93750000000006], [296.0, 490.6969696969697], [297.0, 352.0], [298.0, 369.0], [299.0, 352.0], [305.0, 519.0285714285716], [304.0, 589.0], [306.0, 507.5], [307.0, 555.375], [308.0, 611.55], [309.0, 560.4736842105264], [310.0, 359.8], [311.0, 585.0625], [312.0, 538.6666666666666], [316.0, 319.0], [318.0, 503.33333333333337], [317.0, 660.4285714285714], [319.0, 590.2727272727271], [313.0, 615.6249999999999], [314.0, 650.730158730159], [315.0, 575.5], [332.0, 779.7222222222223], [321.0, 902.0], [323.0, 901.875], [322.0, 713.0689655172415], [324.0, 658.4545454545455], [325.0, 771.1666666666666], [326.0, 553.1428571428572], [327.0, 700.4], [320.0, 793.5454545454546], [331.0, 742.9999999999999], [330.0, 694.5526315789473], [329.0, 715.4166666666666], [328.0, 716.1111111111111], [333.0, 474.5], [334.0, 808.860465116279], [335.0, 707.9565217391305], [338.0, 500.1666666666667], [337.0, 663.3599999999999], [339.0, 641.2812500000001], [348.0, 537.3529411764705], [349.0, 515.5833333333333], [350.0, 556.9333333333334], [351.0, 678.7918015102478], [340.0, 405.8666666666667], [341.0, 555.4166666666666], [342.0, 650.5833333333333], [343.0, 469.3214285714286], [344.0, 624.9756097560974], [345.0, 559.6875], [346.0, 494.18518518518516], [347.0, 577.767441860465], [353.0, 578.76], [352.0, 749.0], [354.0, 735.5131578947368], [355.0, 735.0999999999998], [356.0, 803.2526315789474], [357.0, 636.0666666666667], [358.0, 644.2894736842106], [359.0, 554.0], [360.0, 490.06250000000006], [366.0, 864.9333333333334], [367.0, 652.9285714285713], [364.0, 962.9189189189186], [365.0, 729.3333333333333], [361.0, 957.3820132013199], [362.0, 513.8], [363.0, 753.32], [369.0, 861.7142857142858], [368.0, 729.6], [371.0, 1116.25], [370.0, 1456.0], [372.0, 1383.5], [373.0, 1267.7647058823532], [374.0, 1332.2857142857144], [375.0, 1424.0000000000002], [376.0, 1382.595744680851], [382.0, 1078.0526315789473], [383.0, 1055.25], [380.0, 811.1764705882352], [381.0, 990.8928571428572], [377.0, 1177.4166666666667], [378.0, 1231.96875], [379.0, 992.8857142857148], [387.0, 1034.0], [384.0, 1173.4516129032256], [385.0, 1027.388127853881], [386.0, 1144.6666666666667], [391.0, 1267.5], [392.0, 1301.0], [393.0, 1046.0], [395.0, 1118.0], [399.0, 1235.0], [398.0, 992.0], [397.0, 982.0], [396.0, 1052.5], [413.0, 1214.5], [401.0, 1049.0], [400.0, 1061.0], [407.0, 1654.5], [403.0, 1403.5], [402.0, 1341.0], [412.0, 1466.0], [404.0, 1021.5], [405.0, 1161.0], [410.0, 1199.6], [411.0, 1176.9131665880127], [414.0, 1382.4285714285713], [415.0, 1162.0], [418.0, 1273.75], [416.0, 1266.7857142857142], [417.0, 1355.6666666666667], [419.0, 1164.5], [428.0, 1193.0], [429.0, 1377.2], [430.0, 1391.7142857142858], [431.0, 1392.3846153846155], [420.0, 1213.25], [421.0, 1216.2], [422.0, 1136.857142857143], [423.0, 1227.4], [424.0, 1205.25], [425.0, 1284.125], [426.0, 1152.6666666666667], [427.0, 1128.3333333333333], [434.0, 1347.9166666666665], [435.0, 1146.0], [433.0, 1278.909090909091], [432.0, 1252.0], [437.0, 1148.25], [438.0, 1148.25], [439.0, 1165.0], [440.0, 1200.3333333333335], [443.0, 1281.0], [442.0, 1200.6], [441.0, 1342.6000000000001], [444.0, 1340.625], [447.0, 1367.3333333333333], [445.0, 1451.0], [446.0, 1293.5], [449.0, 1079.0], [448.0, 1200.0], [450.0, 1301.0], [451.0, 1039.5], [452.0, 1415.2857142857142], [453.0, 1036.0], [454.0, 1104.0], [455.0, 1247.0], [456.0, 1186.0], [460.0, 1058.5], [462.0, 1338.3333333333333], [461.0, 1313.25], [463.0, 1208.8333333333333], [457.0, 1228.6666666666667], [458.0, 1129.7142857142856], [459.0, 1015.0], [467.0, 1420.8333333333333], [465.0, 1159.0], [464.0, 1496.0], [470.0, 1151.0], [471.0, 1376.5], [466.0, 1336.076923076923], [468.0, 1450.6], [469.0, 1125.5], [472.0, 1170.6], [478.0, 1146.2222222222222], [479.0, 1520.8], [476.0, 1402.857142857143], [477.0, 1102.5], [473.0, 1120.0555555555554], [474.0, 1149.111111111111], [475.0, 1159.0], [481.0, 1133.0000000000002], [480.0, 1261.0], [482.0, 1205.5], [483.0, 1244.058823529412], [484.0, 1233.8666666666666], [485.0, 1270.6999999999998], [486.0, 1322.2], [487.0, 1216.1111111111109], [488.0, 1272.076923076923], [494.0, 1383.6666666666667], [495.0, 1193.769230769231], [492.0, 1266.6], [493.0, 1301.111111111111], [489.0, 1144.6666666666667], [490.0, 1445.5], [491.0, 1526.625], [509.0, 1169.0], [496.0, 1348.857142857143], [504.0, 1453.0], [502.0, 1440.5], [503.0, 1539.0], [501.0, 1515.0], [500.0, 1541.0], [507.0, 1185.0], [508.0, 1212.0], [498.0, 1548.0], [510.0, 1246.6666666666667], [511.0, 1760.0], [524.0, 1212.75], [514.0, 1220.3333333333333], [513.0, 1758.5], [515.0, 1547.0], [516.0, 1331.5], [518.0, 1731.0], [519.0, 1519.0], [529.0, 1275.0], [541.0, 1181.0], [540.0, 1505.0], [538.0, 1472.3333333333333], [542.0, 1273.5], [543.0, 1386.5], [528.0, 1435.0], [530.0, 1519.6666666666667], [532.0, 1418.5], [535.0, 1434.0], [533.0, 1463.5], [520.0, 1294.0], [522.0, 1173.0], [523.0, 1120.0], [525.0, 1496.9473684210527], [526.0, 1459.0], [547.0, 1060.0], [544.0, 1066.0], [546.0, 1661.0], [556.0, 1330.5714285714287], [549.0, 1039.0], [569.0, 1302.0], [570.0, 1240.294117647059], [571.0, 1438.25], [552.0, 1134.5], [553.0, 1400.5714285714287], [554.0, 1312.0], [555.0, 1455.318181818182], [560.0, 1344.857142857143], [562.0, 1570.0], [561.0, 1382.6842105263158], [563.0, 1449.0], [567.0, 1275.4062499999998], [564.0, 1162.0]], "isOverall": false, "label": "Create payment token for a given payment source", "isController": false}, {"data": [[348.25881916078885, 840.6016524322291]], "isOverall": false, "label": "Create payment token for a given payment source-Aggregated", "isController": false}, {"data": [[13.0, 0.0], [15.0, 354.0], [16.0, 997.0], [18.0, 166.5], [19.0, 166.0], [21.0, 159.0], [22.0, 0.0], [25.0, 322.0], [28.0, 987.0], [29.0, 163.5], [30.0, 160.5], [33.0, 961.0], [32.0, 165.0], [35.0, 254.0], [37.0, 169.5], [38.0, 855.0], [40.0, 161.5], [45.0, 165.0], [44.0, 164.5], [47.0, 154.0], [46.0, 998.0], [49.0, 167.5], [48.0, 462.25], [51.0, 165.5], [50.0, 910.0], [52.0, 331.0], [55.0, 350.3333333333333], [54.0, 160.5], [57.0, 167.0], [56.0, 174.0], [58.0, 562.0], [61.0, 199.0], [63.0, 971.0], [62.0, 419.0], [67.0, 740.5], [66.0, 287.33333333333337], [65.0, 1011.0], [64.0, 229.5], [70.0, 389.0], [69.0, 376.2], [68.0, 473.5], [75.0, 324.1666666666667], [74.0, 508.0], [73.0, 184.5], [77.0, 201.0], [79.0, 590.0], [78.0, 323.0], [76.0, 167.0], [82.0, 301.7142857142857], [81.0, 898.0], [80.0, 388.0], [84.0, 529.25], [86.0, 413.16666666666663], [87.0, 529.4], [88.0, 324.25000000000006], [90.0, 597.75], [91.0, 544.5], [89.0, 371.8333333333333], [92.0, 297.8333333333333], [94.0, 272.75], [95.0, 398.0], [97.0, 339.5], [98.0, 388.5], [99.0, 648.5], [96.0, 452.0], [101.0, 439.5], [103.0, 513.6666666666666], [102.0, 250.0], [100.0, 639.6666666666666], [104.0, 789.0], [105.0, 616.0], [106.0, 497.0], [107.0, 384.7142857142857], [108.0, 413.16666666666663], [109.0, 465.00000000000006], [111.0, 464.8], [110.0, 586.4], [112.0, 411.6666666666667], [113.0, 454.9166666666667], [114.0, 437.2142857142857], [115.0, 545.5], [116.0, 538.1428571428571], [117.0, 420.16666666666663], [118.0, 631.0], [122.0, 478.55555555555554], [123.0, 632.7142857142857], [121.0, 584.5], [124.0, 596.6666666666666], [126.0, 618.25], [125.0, 563.6], [128.0, 442.125], [133.0, 650.5], [135.0, 629.0], [134.0, 815.3333333333334], [132.0, 615.0], [131.0, 521.6363636363636], [130.0, 394.5], [129.0, 1213.0], [137.0, 530.5], [139.0, 327.5], [142.0, 518.5], [143.0, 494.6875], [141.0, 498.3636363636364], [140.0, 791.0], [138.0, 766.0], [136.0, 419.0], [144.0, 358.8], [145.0, 345.0], [146.0, 480.0], [148.0, 519.3333333333334], [149.0, 316.0], [151.0, 704.2], [150.0, 619.5], [154.0, 432.3333333333333], [158.0, 496.5714285714286], [159.0, 575.923076923077], [157.0, 394.5], [156.0, 594.8571428571429], [153.0, 471.5], [152.0, 699.5714285714286], [162.0, 343.0], [163.0, 506.5], [164.0, 512.4444444444443], [166.0, 633.5], [167.0, 349.0], [165.0, 170.5], [161.0, 792.25], [160.0, 809.6666666666666], [168.0, 586.0], [172.0, 429.8], [173.0, 323.8], [174.0, 462.3], [175.0, 448.90909090909093], [171.0, 492.6153846153846], [170.0, 561.5555555555555], [169.0, 531.5], [176.0, 516.5], [177.0, 423.17647058823536], [178.0, 408.1818181818182], [179.0, 337.57142857142856], [180.0, 550.875], [181.0, 382.94736842105266], [182.0, 297.33333333333337], [183.0, 488.76923076923083], [184.0, 436.0], [185.0, 448.15384615384613], [186.0, 438.5], [187.0, 387.94117647058823], [188.0, 426.5], [189.0, 410.83333333333337], [190.0, 455.0], [191.0, 440.40000000000003], [192.0, 470.76470588235287], [193.0, 446.578947368421], [194.0, 418.3636363636363], [195.0, 376.0666666666666], [196.0, 372.27777777777777], [197.0, 380.2307692307692], [198.0, 335.99999999999994], [199.0, 418.05882352941177], [200.0, 401.84], [201.0, 544.3571428571429], [203.0, 573.75], [204.0, 579.25], [206.0, 532.4999999999999], [207.0, 430.3333333333333], [205.0, 647.5], [202.0, 407.5], [208.0, 521.25], [209.0, 362.0], [211.0, 520.6], [212.0, 744.25], [213.0, 606.8571428571428], [214.0, 443.44444444444446], [215.0, 239.5], [210.0, 567.8749999999999], [216.0, 397.8333333333333], [217.0, 340.0], [218.0, 514.3333333333333], [221.0, 452.6666666666667], [223.0, 387.33333333333337], [220.0, 468.5], [219.0, 494.26666666666665], [224.0, 485.8076923076923], [225.0, 547.0], [226.0, 320.3333333333333], [227.0, 424.8333333333333], [228.0, 427.6], [231.0, 470.25], [230.0, 903.0], [229.0, 329.0], [232.0, 388.1666666666667], [233.0, 346.0], [237.0, 499.0], [236.0, 375.3333333333333], [235.0, 535.75], [239.0, 455.75], [238.0, 511.50000000000006], [234.0, 491.4], [242.0, 429.0], [243.0, 473.3], [244.0, 419.1666666666667], [245.0, 392.625], [246.0, 505.625], [247.0, 327.75], [241.0, 542.0833333333334], [248.0, 473.0909090909091], [252.0, 696.8181818181819], [253.0, 372.09090909090907], [254.0, 527.7333333333333], [255.0, 550.8333333333333], [251.0, 415.16666666666663], [250.0, 164.0], [249.0, 631.4000000000001], [257.0, 348.57142857142856], [256.0, 529.8], [258.0, 429.6206896551725], [259.0, 364.79999999999995], [260.0, 452.00000000000006], [261.0, 430.57894736842104], [262.0, 426.6216216216216], [263.0, 363.5238095238095], [264.0, 453.2857142857143], [270.0, 500.62500000000006], [271.0, 402.16666666666674], [268.0, 495.0555555555556], [269.0, 447.5199999999999], [265.0, 380.76190476190476], [266.0, 348.13333333333327], [267.0, 351.9411764705882], [273.0, 510.3214285714286], [272.0, 436.69696969696975], [274.0, 348.77272727272737], [275.0, 408.42105263157896], [276.0, 440.83333333333326], [277.0, 427.8], [278.0, 355.1052631578947], [279.0, 430.3076923076923], [280.0, 485.61016949152537], [286.0, 397.6], [287.0, 531.9999999999999], [284.0, 485.7647058823529], [285.0, 440.84000000000003], [281.0, 466.71428571428567], [282.0, 419.25], [283.0, 511.65384615384625], [288.0, 419.57142857142856], [293.0, 511.2857142857142], [292.0, 511.99999999999983], [289.0, 419.0], [290.0, 532.0000000000001], [300.0, 512.0399999999998], [291.0, 515.7878787878789], [301.0, 586.15], [303.0, 425.75], [302.0, 673.4285714285714], [294.0, 545.1999999999999], [295.0, 439.93750000000006], [296.0, 490.6969696969697], [297.0, 352.0], [298.0, 369.0], [299.0, 352.0], [305.0, 519.0285714285716], [304.0, 589.0], [306.0, 507.5], [307.0, 555.375], [308.0, 611.55], [309.0, 560.4736842105264], [310.0, 359.8], [311.0, 585.0625], [312.0, 538.6666666666666], [316.0, 319.0], [318.0, 503.33333333333337], [317.0, 660.4285714285714], [319.0, 590.2727272727271], [313.0, 615.6249999999999], [314.0, 650.7301587301589], [315.0, 575.5], [332.0, 779.7222222222223], [321.0, 902.0], [323.0, 901.875], [322.0, 713.0689655172414], [324.0, 658.4545454545455], [325.0, 771.1666666666666], [326.0, 553.1428571428572], [327.0, 700.4], [320.0, 793.5454545454546], [331.0, 742.9999999999999], [330.0, 694.5526315789473], [329.0, 715.4166666666666], [328.0, 716.1111111111111], [333.0, 474.5], [334.0, 808.860465116279], [335.0, 707.9565217391305], [338.0, 500.1666666666667], [337.0, 663.3599999999999], [339.0, 641.2812500000001], [348.0, 537.3529411764705], [349.0, 515.5833333333333], [350.0, 556.9333333333334], [351.0, 678.7918015102473], [340.0, 405.8666666666667], [341.0, 555.4166666666666], [342.0, 650.5833333333333], [343.0, 469.3214285714286], [344.0, 624.9756097560974], [345.0, 559.6875], [346.0, 494.18518518518516], [347.0, 577.767441860465], [353.0, 585.6538461538462], [352.0, 749.0], [354.0, 735.2133333333333], [355.0, 735.0999999999998], [356.0, 803.2526315789474], [357.0, 636.0666666666667], [358.0, 644.2894736842106], [359.0, 554.0], [360.0, 490.06250000000006], [366.0, 864.9333333333334], [367.0, 652.9285714285713], [364.0, 962.9189189189186], [365.0, 729.3333333333333], [361.0, 957.3820132013198], [362.0, 513.8], [363.0, 753.32], [369.0, 861.7142857142858], [368.0, 729.6], [371.0, 1116.25], [370.0, 1456.0], [372.0, 1383.5], [373.0, 1267.5000000000002], [374.0, 1324.75], [375.0, 1424.0000000000002], [376.0, 1382.595744680851], [382.0, 1078.0526315789473], [383.0, 1055.25], [380.0, 811.1764705882352], [381.0, 990.8928571428572], [377.0, 1177.4166666666667], [378.0, 1231.96875], [379.0, 992.8857142857148], [387.0, 1034.0], [384.0, 1173.4516129032256], [385.0, 1027.3881278538813], [386.0, 1144.6666666666667], [391.0, 1267.5], [392.0, 1301.0], [393.0, 1046.0], [395.0, 1118.0], [399.0, 1235.0], [398.0, 992.0], [397.0, 982.0], [396.0, 1052.5], [413.0, 1214.5], [401.0, 1049.0], [400.0, 1061.0], [407.0, 1654.5], [403.0, 1403.5], [402.0, 1341.0], [412.0, 1466.0], [404.0, 1021.5], [405.0, 1161.0], [410.0, 1199.6], [411.0, 1176.913166588013], [414.0, 1382.4285714285713], [415.0, 1162.0], [418.0, 1273.75], [416.0, 1266.7857142857142], [417.0, 1355.6666666666667], [419.0, 1164.5], [428.0, 1193.0], [429.0, 1377.2], [430.0, 1391.7142857142858], [431.0, 1392.3846153846155], [420.0, 1213.25], [421.0, 1216.2], [422.0, 1136.857142857143], [423.0, 1227.4], [424.0, 1205.25], [425.0, 1284.125], [426.0, 1152.6666666666667], [427.0, 1128.3333333333333], [434.0, 1347.9166666666665], [435.0, 1146.0], [433.0, 1253.3333333333335], [432.0, 1283.111111111111], [437.0, 1148.25], [438.0, 1148.25], [439.0, 1165.0], [440.0, 1200.3333333333335], [443.0, 1281.0], [442.0, 1200.6], [441.0, 1342.6000000000001], [444.0, 1340.625], [447.0, 1367.3333333333333], [445.0, 1451.0], [446.0, 1293.5], [449.0, 1079.0], [448.0, 1200.0], [450.0, 1301.0], [451.0, 1039.5], [452.0, 1415.2857142857142], [453.0, 1036.0], [454.0, 1104.0], [455.0, 1247.0], [456.0, 1186.0], [460.0, 1058.5], [462.0, 1338.3333333333333], [461.0, 1313.25], [463.0, 1208.8333333333333], [457.0, 1228.6666666666667], [458.0, 1129.7142857142856], [459.0, 1015.0], [467.0, 1420.8333333333333], [465.0, 1159.0], [464.0, 1496.0], [470.0, 1151.0], [471.0, 1376.5], [466.0, 1336.076923076923], [468.0, 1450.6], [469.0, 1125.5], [472.0, 1170.6], [478.0, 1146.2222222222222], [479.0, 1520.8], [476.0, 1402.857142857143], [477.0, 1102.5], [473.0, 1120.0555555555554], [474.0, 1149.111111111111], [475.0, 1159.0], [481.0, 1133.0000000000002], [480.0, 1261.0], [482.0, 1205.5], [483.0, 1244.058823529412], [484.0, 1233.8666666666666], [485.0, 1270.6999999999998], [486.0, 1400.3333333333333], [487.0, 1193.9999999999998], [488.0, 1272.076923076923], [494.0, 1383.6666666666667], [495.0, 1193.769230769231], [492.0, 1266.6], [493.0, 1301.111111111111], [489.0, 1144.6666666666667], [490.0, 1445.5], [491.0, 1526.625], [509.0, 1169.0], [496.0, 1348.857142857143], [504.0, 1453.0], [502.0, 1440.5], [503.0, 1539.0], [501.0, 1515.0], [500.0, 1541.0], [507.0, 1185.0], [508.0, 1212.0], [498.0, 1548.0], [510.0, 1246.6666666666667], [511.0, 1760.0], [524.0, 1212.75], [514.0, 1220.3333333333333], [513.0, 1758.5], [515.0, 1547.0], [516.0, 1331.5], [518.0, 1731.0], [519.0, 1519.0], [529.0, 1275.0], [541.0, 1181.0], [540.0, 1505.0], [538.0, 1472.3333333333333], [542.0, 1273.5], [543.0, 1386.5], [528.0, 1435.0], [530.0, 1519.6666666666667], [532.0, 1418.5], [535.0, 1434.0], [533.0, 1463.5], [520.0, 1294.0], [522.0, 1173.0], [523.0, 1120.0], [525.0, 1496.9473684210527], [526.0, 1459.0], [547.0, 1060.0], [544.0, 1066.0], [546.0, 1661.0], [556.0, 1330.5714285714287], [549.0, 1039.0], [569.0, 1302.0], [570.0, 1240.294117647059], [571.0, 1438.25], [552.0, 1134.5], [553.0, 1400.5714285714287], [554.0, 1312.0], [555.0, 1455.318181818182], [560.0, 1344.857142857143], [562.0, 1570.0], [561.0, 1382.6842105263158], [563.0, 1449.0], [567.0, 1275.4062499999998], [564.0, 1162.0]], "isOverall": false, "label": "(LoadTesting)CreatePaymentToken_tr_ForGivenPaymentSource", "isController": true}, {"data": [[346.63117170228475, 837.1717943994119]], "isOverall": false, "label": "(LoadTesting)CreatePaymentToken_tr_ForGivenPaymentSource-Aggregated", "isController": true}, {"data": [[58.0, 333.0], [79.0, 601.0], [82.0, 858.0], [84.0, 596.0], [85.0, 594.5], [86.0, 586.0], [90.0, 580.0], [91.0, 849.0], [93.0, 604.5], [98.0, 676.0], [100.0, 445.0], [101.0, 331.0], [105.0, 360.0], [109.0, 377.5], [110.0, 342.0], [111.0, 923.0], [112.0, 336.0], [113.0, 340.0], [114.0, 587.0], [115.0, 320.0], [116.0, 326.0], [128.0, 338.0], [146.0, 459.0], [151.0, 334.0], [152.0, 927.0], [159.0, 345.0], [173.0, 343.0], [174.0, 623.0], [176.0, 381.0], [177.0, 523.3333333333334], [179.0, 462.0], [180.0, 373.0], [181.0, 317.0], [182.0, 319.0], [183.0, 328.0], [184.0, 310.0], [186.0, 339.0], [187.0, 304.0], [189.0, 389.0], [191.0, 371.0], [193.0, 357.0], [195.0, 386.0], [196.0, 342.0], [197.0, 316.0], [198.0, 359.0], [199.0, 335.0], [200.0, 342.0], [211.0, 367.0], [217.0, 308.0], [228.0, 325.0], [237.0, 313.0], [248.0, 327.0], [257.0, 323.0], [256.0, 351.0], [258.0, 327.0], [259.0, 355.0], [261.0, 318.0], [262.0, 442.0], [263.0, 350.0], [265.0, 344.5], [271.0, 337.0], [269.0, 335.0], [270.0, 534.0], [266.0, 332.0], [267.0, 317.0], [274.0, 328.5], [273.0, 385.0], [275.0, 336.0], [276.0, 343.0], [277.0, 328.0], [279.0, 352.5], [280.0, 324.0], [282.0, 381.0], [283.0, 345.5], [292.0, 380.0], [301.0, 368.0], [309.0, 359.0], [323.0, 414.0], [331.0, 369.0], [348.0, 352.0], [343.0, 350.0], [339.0, 341.0], [342.0, 459.3333333333333], [344.0, 335.0], [345.0, 329.0], [347.0, 328.0], [346.0, 346.0], [350.0, 447.0], [351.0, 429.0], [353.0, 323.0], [352.0, 393.0], [354.0, 327.0], [355.0, 342.0], [356.0, 337.0], [357.0, 338.0], [358.0, 337.0], [359.0, 332.0], [360.0, 343.0], [365.0, 415.0], [366.0, 438.0], [362.0, 342.0], [363.0, 342.0], [369.0, 820.0], [372.0, 1135.0], [375.0, 1482.0], [376.0, 1315.0], [377.0, 1142.0], [378.0, 822.0], [379.0, 566.0], [382.0, 546.5], [385.0, 896.2]], "isOverall": false, "label": "Get Auth Token", "isController": false}, {"data": [[245.10000000000002, 484.08]], "isOverall": false, "label": "Get Auth Token-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 571.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 8700.033333333333, "minX": 1.71751704E12, "maxY": 212513.86666666667, "series": [{"data": [[1.7175171E12, 212513.86666666667], [1.71751716E12, 30813.1], [1.71751704E12, 51044.3]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.7175171E12, 59622.78333333333], [1.71751716E12, 8700.033333333333], [1.71751704E12, 12567.283333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71751716E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 421.4351145038169, "minX": 1.71751704E12, "maxY": 962.3894450624119, "series": [{"data": [[1.7175171E12, 962.3894450624119], [1.71751716E12, 520.3088630259613], [1.71751704E12, 439.3113810741688]], "isOverall": false, "label": "Create payment token for a given payment source", "isController": false}, {"data": [[1.7175171E12, 956.7191924165917], [1.71751716E12, 508.37544169611317], [1.71751704E12, 463.1018113678948]], "isOverall": false, "label": "(LoadTesting)CreatePaymentToken_tr_ForGivenPaymentSource", "isController": true}, {"data": [[1.7175171E12, 916.0], [1.71751704E12, 421.4351145038169]], "isOverall": false, "label": "Get Auth Token", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71751716E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.71751704E12, "maxY": 962.1218637992856, "series": [{"data": [[1.7175171E12, 962.1218637992856], [1.71751716E12, 520.1897940913154], [1.71751704E12, 439.3011508951408]], "isOverall": false, "label": "Create payment token for a given payment source", "isController": false}, {"data": [[1.7175171E12, 0.0], [1.71751716E12, 0.0], [1.71751704E12, 0.0]], "isOverall": false, "label": "(LoadTesting)CreatePaymentToken_tr_ForGivenPaymentSource", "isController": true}, {"data": [[1.7175171E12, 915.5263157894736], [1.71751704E12, 421.16793893129756]], "isOverall": false, "label": "Get Auth Token", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71751716E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 53.31183745583038, "minX": 1.71751704E12, "maxY": 496.99999999999994, "series": [{"data": [[1.7175171E12, 117.37844518600929], [1.71751716E12, 60.53894359892564], [1.71751704E12, 69.8056265984655]], "isOverall": false, "label": "Create payment token for a given payment source", "isController": false}, {"data": [[1.7175171E12, 113.74861504370305], [1.71751716E12, 53.31183745583038], [1.71751704E12, 86.56589631480325]], "isOverall": false, "label": "(LoadTesting)CreatePaymentToken_tr_ForGivenPaymentSource", "isController": true}, {"data": [[1.7175171E12, 496.99999999999994], [1.71751704E12, 62.900763358778626]], "isOverall": false, "label": "Get Auth Token", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71751716E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 265.0, "minX": 1.71751704E12, "maxY": 2419.0, "series": [{"data": [[1.7175171E12, 2419.0], [1.71751716E12, 1669.0], [1.71751704E12, 1540.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.7175171E12, 313.0], [1.71751716E12, 304.0], [1.71751704E12, 265.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.7175171E12, 1371.6999999999998], [1.71751716E12, 725.5999999999999], [1.71751704E12, 586.4000000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.7175171E12, 1759.0699999999997], [1.71751716E12, 1271.2400000000011], [1.71751704E12, 1267.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.7175171E12, 1030.0], [1.71751716E12, 577.0], [1.71751704E12, 388.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.7175171E12, 1486.0], [1.71751716E12, 874.5999999999981], [1.71751704E12, 824.1999999999998]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71751716E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 4.0, "maxY": 1458.0, "series": [{"data": [[4.0, 334.0], [9.0, 315.0], [15.0, 404.0], [22.0, 331.0], [24.0, 380.5], [30.0, 342.5], [31.0, 340.0], [42.0, 343.0], [45.0, 335.0], [49.0, 364.0], [50.0, 331.5], [52.0, 345.5], [57.0, 405.0], [65.0, 337.0], [71.0, 623.0], [74.0, 332.0], [80.0, 352.0], [83.0, 556.0], [82.0, 1458.0], [84.0, 349.5], [85.0, 602.5], [93.0, 1341.0], [94.0, 498.5], [97.0, 343.0], [96.0, 372.0], [99.0, 385.0], [104.0, 638.0], [112.0, 614.5], [113.0, 1137.0], [114.0, 1238.0], [117.0, 443.0], [118.0, 1214.0], [116.0, 1133.5], [119.0, 629.5], [122.0, 1161.5], [121.0, 1142.0], [120.0, 1175.5], [125.0, 958.0], [124.0, 1147.0], [126.0, 1134.5], [127.0, 1364.0], [133.0, 927.5], [135.0, 993.0], [132.0, 1110.5], [129.0, 1136.0], [131.0, 1089.0], [134.0, 819.5], [137.0, 1093.0], [142.0, 1123.5], [143.0, 707.0], [136.0, 828.5], [145.0, 821.0], [151.0, 795.0], [146.0, 775.0], [148.0, 753.5], [150.0, 541.5], [144.0, 580.0], [147.0, 444.0], [156.0, 811.0], [152.0, 536.0], [155.0, 490.0], [154.0, 560.5], [153.0, 656.5], [158.0, 655.0], [157.0, 468.5], [162.0, 1026.5], [164.0, 648.0], [163.0, 555.0], [165.0, 411.0], [172.0, 525.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[135.0, 182.0], [131.0, 0.0], [143.0, 39.0], [150.0, 114.0], [145.0, 0.0], [152.0, 69.0], [157.0, 0.0], [164.0, 163.0], [165.0, 0.0], [45.0, 0.0], [57.0, 0.0], [85.0, 0.0], [22.0, 0.0], [94.0, 0.0], [104.0, 0.0], [119.0, 0.0], [125.0, 183.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 172.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 4.0, "maxY": 1458.0, "series": [{"data": [[4.0, 334.0], [9.0, 314.0], [15.0, 403.0], [22.0, 323.0], [24.0, 380.5], [30.0, 342.5], [31.0, 340.0], [42.0, 342.5], [45.0, 331.0], [49.0, 364.0], [50.0, 331.5], [52.0, 345.5], [57.0, 390.5], [65.0, 337.0], [71.0, 623.0], [74.0, 332.0], [80.0, 352.0], [83.0, 556.0], [82.0, 1458.0], [84.0, 349.5], [85.0, 584.5], [93.0, 1341.0], [94.0, 461.5], [97.0, 342.0], [96.0, 372.0], [99.0, 385.0], [104.0, 633.0], [112.0, 614.5], [113.0, 1137.0], [114.0, 1238.0], [117.0, 443.0], [118.0, 1214.0], [116.0, 1133.5], [119.0, 608.0], [122.0, 1161.5], [121.0, 1142.0], [120.0, 1175.5], [125.0, 958.0], [124.0, 1147.0], [126.0, 1134.5], [127.0, 1364.0], [133.0, 927.5], [135.0, 993.0], [132.0, 1110.5], [129.0, 1136.0], [131.0, 1081.0], [134.0, 819.5], [137.0, 1093.0], [142.0, 1123.5], [143.0, 707.0], [136.0, 828.5], [145.0, 812.0], [151.0, 795.0], [146.0, 775.0], [148.0, 753.5], [150.0, 541.5], [144.0, 580.0], [147.0, 444.0], [156.0, 811.0], [152.0, 536.0], [155.0, 489.0], [154.0, 560.5], [153.0, 656.5], [158.0, 655.0], [157.0, 468.5], [162.0, 1026.5], [164.0, 648.0], [163.0, 555.0], [165.0, 407.0], [172.0, 525.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[135.0, 0.0], [131.0, 0.0], [143.0, 0.0], [150.0, 0.0], [145.0, 0.0], [152.0, 0.0], [157.0, 0.0], [164.0, 0.0], [165.0, 0.0], [45.0, 0.0], [57.0, 0.0], [85.0, 0.0], [22.0, 0.0], [94.0, 0.0], [104.0, 0.0], [119.0, 0.0], [125.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 172.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 19.883333333333333, "minX": 1.71751704E12, "maxY": 134.16666666666666, "series": [{"data": [[1.7175171E12, 134.16666666666666], [1.71751716E12, 19.883333333333333], [1.71751704E12, 30.483333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71751716E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.71751704E12, "maxY": 134.86666666666667, "series": [{"data": [[1.7175171E12, 134.86666666666667], [1.71751716E12, 19.683333333333334], [1.71751704E12, 28.25]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.71751716E12, 1.4]], "isOverall": false, "label": "EMPTY_RES_CODE", "isController": false}, {"data": [[1.7175171E12, 0.3], [1.71751716E12, 0.03333333333333333]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71751716E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.71751704E12, "maxY": 135.08333333333334, "series": [{"data": [[1.7175171E12, 0.3], [1.71751716E12, 0.03333333333333333]], "isOverall": false, "label": "Create payment token for a given payment source-failure", "isController": false}, {"data": [[1.7175171E12, 134.55], [1.71751716E12, 18.583333333333332], [1.71751704E12, 26.066666666666666]], "isOverall": false, "label": "Create payment token for a given payment source-success", "isController": false}, {"data": [[1.7175171E12, 0.31666666666666665], [1.71751704E12, 2.183333333333333]], "isOverall": false, "label": "Get Auth Token-success", "isController": false}, {"data": [[1.7175171E12, 135.08333333333334], [1.71751716E12, 17.433333333333334], [1.71751704E12, 26.683333333333334]], "isOverall": false, "label": "(LoadTesting)CreatePaymentToken_tr_ForGivenPaymentSource-success", "isController": true}, {"data": [[1.7175171E12, 0.3], [1.71751716E12, 1.4333333333333333]], "isOverall": false, "label": "(LoadTesting)CreatePaymentToken_tr_ForGivenPaymentSource-failure", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71751716E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.6, "minX": 1.71751704E12, "maxY": 269.95, "series": [{"data": [[1.7175171E12, 269.95], [1.71751716E12, 36.016666666666666], [1.71751704E12, 54.93333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.7175171E12, 0.6], [1.71751716E12, 1.4666666666666666]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71751716E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}


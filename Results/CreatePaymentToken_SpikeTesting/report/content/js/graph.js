/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 2197.0, "series": [{"data": [[0.0, 268.0], [0.1, 273.0], [0.2, 276.0], [0.3, 278.0], [0.4, 283.0], [0.5, 286.0], [0.6, 288.0], [0.7, 291.0], [0.8, 296.0], [0.9, 305.0], [1.0, 310.0], [1.1, 311.0], [1.2, 312.0], [1.3, 313.0], [1.4, 315.0], [1.5, 315.0], [1.6, 316.0], [1.7, 317.0], [1.8, 317.0], [1.9, 318.0], [2.0, 319.0], [2.1, 320.0], [2.2, 320.0], [2.3, 320.0], [2.4, 320.0], [2.5, 320.0], [2.6, 321.0], [2.7, 322.0], [2.8, 322.0], [2.9, 322.0], [3.0, 323.0], [3.1, 323.0], [3.2, 323.0], [3.3, 323.0], [3.4, 324.0], [3.5, 324.0], [3.6, 325.0], [3.7, 325.0], [3.8, 326.0], [3.9, 326.0], [4.0, 326.0], [4.1, 327.0], [4.2, 327.0], [4.3, 328.0], [4.4, 328.0], [4.5, 328.0], [4.6, 328.0], [4.7, 329.0], [4.8, 329.0], [4.9, 329.0], [5.0, 330.0], [5.1, 330.0], [5.2, 330.0], [5.3, 330.0], [5.4, 331.0], [5.5, 332.0], [5.6, 332.0], [5.7, 332.0], [5.8, 332.0], [5.9, 333.0], [6.0, 333.0], [6.1, 334.0], [6.2, 334.0], [6.3, 335.0], [6.4, 335.0], [6.5, 335.0], [6.6, 335.0], [6.7, 335.0], [6.8, 336.0], [6.9, 336.0], [7.0, 337.0], [7.1, 337.0], [7.2, 337.0], [7.3, 337.0], [7.4, 337.0], [7.5, 338.0], [7.6, 338.0], [7.7, 338.0], [7.8, 339.0], [7.9, 339.0], [8.0, 339.0], [8.1, 340.0], [8.2, 340.0], [8.3, 340.0], [8.4, 341.0], [8.5, 341.0], [8.6, 341.0], [8.7, 342.0], [8.8, 342.0], [8.9, 343.0], [9.0, 343.0], [9.1, 343.0], [9.2, 343.0], [9.3, 343.0], [9.4, 344.0], [9.5, 345.0], [9.6, 345.0], [9.7, 346.0], [9.8, 347.0], [9.9, 347.0], [10.0, 347.0], [10.1, 348.0], [10.2, 348.0], [10.3, 348.0], [10.4, 349.0], [10.5, 349.0], [10.6, 350.0], [10.7, 350.0], [10.8, 351.0], [10.9, 351.0], [11.0, 352.0], [11.1, 352.0], [11.2, 353.0], [11.3, 353.0], [11.4, 354.0], [11.5, 354.0], [11.6, 355.0], [11.7, 355.0], [11.8, 356.0], [11.9, 356.0], [12.0, 357.0], [12.1, 357.0], [12.2, 357.0], [12.3, 358.0], [12.4, 358.0], [12.5, 359.0], [12.6, 359.0], [12.7, 360.0], [12.8, 360.0], [12.9, 360.0], [13.0, 360.0], [13.1, 361.0], [13.2, 361.0], [13.3, 362.0], [13.4, 362.0], [13.5, 363.0], [13.6, 363.0], [13.7, 364.0], [13.8, 364.0], [13.9, 364.0], [14.0, 365.0], [14.1, 366.0], [14.2, 367.0], [14.3, 367.0], [14.4, 368.0], [14.5, 370.0], [14.6, 371.0], [14.7, 372.0], [14.8, 372.0], [14.9, 374.0], [15.0, 375.0], [15.1, 377.0], [15.2, 377.0], [15.3, 378.0], [15.4, 379.0], [15.5, 379.0], [15.6, 381.0], [15.7, 381.0], [15.8, 382.0], [15.9, 383.0], [16.0, 384.0], [16.1, 385.0], [16.2, 386.0], [16.3, 386.0], [16.4, 387.0], [16.5, 387.0], [16.6, 389.0], [16.7, 389.0], [16.8, 390.0], [16.9, 393.0], [17.0, 394.0], [17.1, 396.0], [17.2, 396.0], [17.3, 397.0], [17.4, 398.0], [17.5, 400.0], [17.6, 401.0], [17.7, 402.0], [17.8, 403.0], [17.9, 404.0], [18.0, 406.0], [18.1, 407.0], [18.2, 407.0], [18.3, 408.0], [18.4, 408.0], [18.5, 409.0], [18.6, 411.0], [18.7, 411.0], [18.8, 413.0], [18.9, 413.0], [19.0, 415.0], [19.1, 415.0], [19.2, 417.0], [19.3, 419.0], [19.4, 420.0], [19.5, 420.0], [19.6, 420.0], [19.7, 422.0], [19.8, 425.0], [19.9, 425.0], [20.0, 426.0], [20.1, 429.0], [20.2, 431.0], [20.3, 432.0], [20.4, 433.0], [20.5, 434.0], [20.6, 436.0], [20.7, 437.0], [20.8, 438.0], [20.9, 440.0], [21.0, 442.0], [21.1, 442.0], [21.2, 443.0], [21.3, 443.0], [21.4, 444.0], [21.5, 445.0], [21.6, 446.0], [21.7, 449.0], [21.8, 450.0], [21.9, 454.0], [22.0, 454.0], [22.1, 456.0], [22.2, 458.0], [22.3, 458.0], [22.4, 461.0], [22.5, 461.0], [22.6, 463.0], [22.7, 465.0], [22.8, 466.0], [22.9, 470.0], [23.0, 472.0], [23.1, 475.0], [23.2, 476.0], [23.3, 480.0], [23.4, 485.0], [23.5, 486.0], [23.6, 488.0], [23.7, 490.0], [23.8, 496.0], [23.9, 497.0], [24.0, 498.0], [24.1, 498.0], [24.2, 499.0], [24.3, 501.0], [24.4, 502.0], [24.5, 505.0], [24.6, 506.0], [24.7, 507.0], [24.8, 510.0], [24.9, 513.0], [25.0, 515.0], [25.1, 518.0], [25.2, 525.0], [25.3, 527.0], [25.4, 533.0], [25.5, 540.0], [25.6, 546.0], [25.7, 550.0], [25.8, 560.0], [25.9, 567.0], [26.0, 581.0], [26.1, 588.0], [26.2, 592.0], [26.3, 599.0], [26.4, 601.0], [26.5, 611.0], [26.6, 615.0], [26.7, 622.0], [26.8, 624.0], [26.9, 644.0], [27.0, 654.0], [27.1, 657.0], [27.2, 667.0], [27.3, 669.0], [27.4, 682.0], [27.5, 698.0], [27.6, 706.0], [27.7, 712.0], [27.8, 717.0], [27.9, 723.0], [28.0, 730.0], [28.1, 737.0], [28.2, 772.0], [28.3, 777.0], [28.4, 782.0], [28.5, 797.0], [28.6, 803.0], [28.7, 805.0], [28.8, 808.0], [28.9, 817.0], [29.0, 822.0], [29.1, 834.0], [29.2, 837.0], [29.3, 841.0], [29.4, 848.0], [29.5, 849.0], [29.6, 852.0], [29.7, 856.0], [29.8, 860.0], [29.9, 862.0], [30.0, 864.0], [30.1, 865.0], [30.2, 866.0], [30.3, 871.0], [30.4, 876.0], [30.5, 878.0], [30.6, 881.0], [30.7, 883.0], [30.8, 887.0], [30.9, 893.0], [31.0, 895.0], [31.1, 902.0], [31.2, 902.0], [31.3, 911.0], [31.4, 915.0], [31.5, 917.0], [31.6, 920.0], [31.7, 923.0], [31.8, 929.0], [31.9, 931.0], [32.0, 932.0], [32.1, 936.0], [32.2, 938.0], [32.3, 940.0], [32.4, 943.0], [32.5, 943.0], [32.6, 949.0], [32.7, 950.0], [32.8, 952.0], [32.9, 956.0], [33.0, 956.0], [33.1, 957.0], [33.2, 960.0], [33.3, 964.0], [33.4, 965.0], [33.5, 968.0], [33.6, 970.0], [33.7, 972.0], [33.8, 978.0], [33.9, 979.0], [34.0, 982.0], [34.1, 984.0], [34.2, 985.0], [34.3, 987.0], [34.4, 989.0], [34.5, 991.0], [34.6, 993.0], [34.7, 995.0], [34.8, 997.0], [34.9, 999.0], [35.0, 1005.0], [35.1, 1007.0], [35.2, 1009.0], [35.3, 1014.0], [35.4, 1016.0], [35.5, 1017.0], [35.6, 1018.0], [35.7, 1022.0], [35.8, 1022.0], [35.9, 1023.0], [36.0, 1025.0], [36.1, 1028.0], [36.2, 1030.0], [36.3, 1032.0], [36.4, 1034.0], [36.5, 1035.0], [36.6, 1037.0], [36.7, 1042.0], [36.8, 1045.0], [36.9, 1047.0], [37.0, 1047.0], [37.1, 1049.0], [37.2, 1049.0], [37.3, 1051.0], [37.4, 1052.0], [37.5, 1054.0], [37.6, 1056.0], [37.7, 1056.0], [37.8, 1058.0], [37.9, 1059.0], [38.0, 1060.0], [38.1, 1060.0], [38.2, 1060.0], [38.3, 1061.0], [38.4, 1062.0], [38.5, 1062.0], [38.6, 1063.0], [38.7, 1063.0], [38.8, 1064.0], [38.9, 1064.0], [39.0, 1067.0], [39.1, 1068.0], [39.2, 1068.0], [39.3, 1069.0], [39.4, 1070.0], [39.5, 1072.0], [39.6, 1072.0], [39.7, 1073.0], [39.8, 1073.0], [39.9, 1073.0], [40.0, 1074.0], [40.1, 1075.0], [40.2, 1076.0], [40.3, 1076.0], [40.4, 1077.0], [40.5, 1078.0], [40.6, 1079.0], [40.7, 1079.0], [40.8, 1080.0], [40.9, 1080.0], [41.0, 1081.0], [41.1, 1081.0], [41.2, 1082.0], [41.3, 1082.0], [41.4, 1083.0], [41.5, 1084.0], [41.6, 1084.0], [41.7, 1084.0], [41.8, 1085.0], [41.9, 1085.0], [42.0, 1085.0], [42.1, 1086.0], [42.2, 1086.0], [42.3, 1087.0], [42.4, 1088.0], [42.5, 1088.0], [42.6, 1089.0], [42.7, 1089.0], [42.8, 1089.0], [42.9, 1089.0], [43.0, 1089.0], [43.1, 1090.0], [43.2, 1090.0], [43.3, 1091.0], [43.4, 1091.0], [43.5, 1091.0], [43.6, 1091.0], [43.7, 1092.0], [43.8, 1093.0], [43.9, 1093.0], [44.0, 1093.0], [44.1, 1094.0], [44.2, 1095.0], [44.3, 1095.0], [44.4, 1095.0], [44.5, 1095.0], [44.6, 1095.0], [44.7, 1096.0], [44.8, 1096.0], [44.9, 1097.0], [45.0, 1097.0], [45.1, 1097.0], [45.2, 1098.0], [45.3, 1098.0], [45.4, 1098.0], [45.5, 1099.0], [45.6, 1099.0], [45.7, 1100.0], [45.8, 1100.0], [45.9, 1100.0], [46.0, 1101.0], [46.1, 1101.0], [46.2, 1102.0], [46.3, 1102.0], [46.4, 1103.0], [46.5, 1103.0], [46.6, 1104.0], [46.7, 1104.0], [46.8, 1104.0], [46.9, 1105.0], [47.0, 1105.0], [47.1, 1105.0], [47.2, 1105.0], [47.3, 1106.0], [47.4, 1106.0], [47.5, 1106.0], [47.6, 1107.0], [47.7, 1107.0], [47.8, 1107.0], [47.9, 1108.0], [48.0, 1108.0], [48.1, 1108.0], [48.2, 1109.0], [48.3, 1109.0], [48.4, 1110.0], [48.5, 1110.0], [48.6, 1110.0], [48.7, 1111.0], [48.8, 1111.0], [48.9, 1111.0], [49.0, 1111.0], [49.1, 1111.0], [49.2, 1112.0], [49.3, 1112.0], [49.4, 1112.0], [49.5, 1112.0], [49.6, 1113.0], [49.7, 1113.0], [49.8, 1113.0], [49.9, 1114.0], [50.0, 1114.0], [50.1, 1114.0], [50.2, 1115.0], [50.3, 1115.0], [50.4, 1115.0], [50.5, 1115.0], [50.6, 1116.0], [50.7, 1116.0], [50.8, 1117.0], [50.9, 1117.0], [51.0, 1117.0], [51.1, 1117.0], [51.2, 1118.0], [51.3, 1118.0], [51.4, 1119.0], [51.5, 1119.0], [51.6, 1119.0], [51.7, 1119.0], [51.8, 1120.0], [51.9, 1120.0], [52.0, 1120.0], [52.1, 1121.0], [52.2, 1121.0], [52.3, 1122.0], [52.4, 1122.0], [52.5, 1122.0], [52.6, 1122.0], [52.7, 1123.0], [52.8, 1123.0], [52.9, 1123.0], [53.0, 1124.0], [53.1, 1124.0], [53.2, 1124.0], [53.3, 1124.0], [53.4, 1124.0], [53.5, 1125.0], [53.6, 1125.0], [53.7, 1125.0], [53.8, 1126.0], [53.9, 1126.0], [54.0, 1126.0], [54.1, 1127.0], [54.2, 1128.0], [54.3, 1128.0], [54.4, 1129.0], [54.5, 1129.0], [54.6, 1129.0], [54.7, 1129.0], [54.8, 1129.0], [54.9, 1130.0], [55.0, 1130.0], [55.1, 1130.0], [55.2, 1130.0], [55.3, 1131.0], [55.4, 1131.0], [55.5, 1132.0], [55.6, 1132.0], [55.7, 1132.0], [55.8, 1132.0], [55.9, 1133.0], [56.0, 1134.0], [56.1, 1134.0], [56.2, 1134.0], [56.3, 1135.0], [56.4, 1135.0], [56.5, 1136.0], [56.6, 1136.0], [56.7, 1136.0], [56.8, 1137.0], [56.9, 1137.0], [57.0, 1137.0], [57.1, 1137.0], [57.2, 1137.0], [57.3, 1137.0], [57.4, 1138.0], [57.5, 1138.0], [57.6, 1138.0], [57.7, 1139.0], [57.8, 1139.0], [57.9, 1139.0], [58.0, 1139.0], [58.1, 1140.0], [58.2, 1140.0], [58.3, 1140.0], [58.4, 1141.0], [58.5, 1141.0], [58.6, 1141.0], [58.7, 1142.0], [58.8, 1142.0], [58.9, 1143.0], [59.0, 1143.0], [59.1, 1144.0], [59.2, 1144.0], [59.3, 1144.0], [59.4, 1144.0], [59.5, 1145.0], [59.6, 1145.0], [59.7, 1146.0], [59.8, 1146.0], [59.9, 1146.0], [60.0, 1146.0], [60.1, 1146.0], [60.2, 1147.0], [60.3, 1147.0], [60.4, 1147.0], [60.5, 1147.0], [60.6, 1148.0], [60.7, 1148.0], [60.8, 1148.0], [60.9, 1148.0], [61.0, 1149.0], [61.1, 1149.0], [61.2, 1150.0], [61.3, 1150.0], [61.4, 1150.0], [61.5, 1150.0], [61.6, 1151.0], [61.7, 1151.0], [61.8, 1151.0], [61.9, 1151.0], [62.0, 1151.0], [62.1, 1152.0], [62.2, 1152.0], [62.3, 1152.0], [62.4, 1153.0], [62.5, 1153.0], [62.6, 1153.0], [62.7, 1154.0], [62.8, 1154.0], [62.9, 1154.0], [63.0, 1154.0], [63.1, 1155.0], [63.2, 1155.0], [63.3, 1156.0], [63.4, 1156.0], [63.5, 1156.0], [63.6, 1157.0], [63.7, 1157.0], [63.8, 1157.0], [63.9, 1157.0], [64.0, 1158.0], [64.1, 1158.0], [64.2, 1158.0], [64.3, 1159.0], [64.4, 1159.0], [64.5, 1159.0], [64.6, 1159.0], [64.7, 1160.0], [64.8, 1160.0], [64.9, 1161.0], [65.0, 1161.0], [65.1, 1161.0], [65.2, 1161.0], [65.3, 1162.0], [65.4, 1162.0], [65.5, 1163.0], [65.6, 1163.0], [65.7, 1163.0], [65.8, 1163.0], [65.9, 1164.0], [66.0, 1164.0], [66.1, 1164.0], [66.2, 1165.0], [66.3, 1165.0], [66.4, 1166.0], [66.5, 1167.0], [66.6, 1167.0], [66.7, 1167.0], [66.8, 1168.0], [66.9, 1168.0], [67.0, 1169.0], [67.1, 1169.0], [67.2, 1170.0], [67.3, 1170.0], [67.4, 1170.0], [67.5, 1171.0], [67.6, 1171.0], [67.7, 1171.0], [67.8, 1172.0], [67.9, 1172.0], [68.0, 1173.0], [68.1, 1174.0], [68.2, 1174.0], [68.3, 1175.0], [68.4, 1175.0], [68.5, 1175.0], [68.6, 1176.0], [68.7, 1176.0], [68.8, 1176.0], [68.9, 1177.0], [69.0, 1177.0], [69.1, 1177.0], [69.2, 1178.0], [69.3, 1179.0], [69.4, 1180.0], [69.5, 1181.0], [69.6, 1181.0], [69.7, 1181.0], [69.8, 1182.0], [69.9, 1183.0], [70.0, 1183.0], [70.1, 1184.0], [70.2, 1185.0], [70.3, 1185.0], [70.4, 1185.0], [70.5, 1187.0], [70.6, 1187.0], [70.7, 1189.0], [70.8, 1189.0], [70.9, 1189.0], [71.0, 1190.0], [71.1, 1192.0], [71.2, 1193.0], [71.3, 1193.0], [71.4, 1194.0], [71.5, 1194.0], [71.6, 1195.0], [71.7, 1197.0], [71.8, 1197.0], [71.9, 1198.0], [72.0, 1199.0], [72.1, 1199.0], [72.2, 1200.0], [72.3, 1200.0], [72.4, 1202.0], [72.5, 1203.0], [72.6, 1205.0], [72.7, 1205.0], [72.8, 1206.0], [72.9, 1208.0], [73.0, 1209.0], [73.1, 1209.0], [73.2, 1209.0], [73.3, 1210.0], [73.4, 1214.0], [73.5, 1214.0], [73.6, 1214.0], [73.7, 1215.0], [73.8, 1215.0], [73.9, 1217.0], [74.0, 1217.0], [74.1, 1217.0], [74.2, 1218.0], [74.3, 1220.0], [74.4, 1222.0], [74.5, 1222.0], [74.6, 1224.0], [74.7, 1224.0], [74.8, 1225.0], [74.9, 1226.0], [75.0, 1228.0], [75.1, 1230.0], [75.2, 1231.0], [75.3, 1232.0], [75.4, 1233.0], [75.5, 1235.0], [75.6, 1235.0], [75.7, 1235.0], [75.8, 1236.0], [75.9, 1236.0], [76.0, 1237.0], [76.1, 1237.0], [76.2, 1238.0], [76.3, 1239.0], [76.4, 1240.0], [76.5, 1242.0], [76.6, 1243.0], [76.7, 1244.0], [76.8, 1244.0], [76.9, 1244.0], [77.0, 1249.0], [77.1, 1250.0], [77.2, 1252.0], [77.3, 1254.0], [77.4, 1255.0], [77.5, 1256.0], [77.6, 1256.0], [77.7, 1257.0], [77.8, 1258.0], [77.9, 1260.0], [78.0, 1263.0], [78.1, 1264.0], [78.2, 1265.0], [78.3, 1266.0], [78.4, 1269.0], [78.5, 1270.0], [78.6, 1270.0], [78.7, 1271.0], [78.8, 1274.0], [78.9, 1274.0], [79.0, 1274.0], [79.1, 1276.0], [79.2, 1278.0], [79.3, 1279.0], [79.4, 1280.0], [79.5, 1282.0], [79.6, 1283.0], [79.7, 1285.0], [79.8, 1287.0], [79.9, 1288.0], [80.0, 1289.0], [80.1, 1290.0], [80.2, 1292.0], [80.3, 1294.0], [80.4, 1295.0], [80.5, 1295.0], [80.6, 1298.0], [80.7, 1298.0], [80.8, 1300.0], [80.9, 1302.0], [81.0, 1302.0], [81.1, 1303.0], [81.2, 1305.0], [81.3, 1308.0], [81.4, 1309.0], [81.5, 1311.0], [81.6, 1313.0], [81.7, 1313.0], [81.8, 1315.0], [81.9, 1317.0], [82.0, 1319.0], [82.1, 1320.0], [82.2, 1323.0], [82.3, 1325.0], [82.4, 1327.0], [82.5, 1328.0], [82.6, 1331.0], [82.7, 1334.0], [82.8, 1337.0], [82.9, 1337.0], [83.0, 1339.0], [83.1, 1340.0], [83.2, 1341.0], [83.3, 1344.0], [83.4, 1345.0], [83.5, 1348.0], [83.6, 1349.0], [83.7, 1352.0], [83.8, 1354.0], [83.9, 1355.0], [84.0, 1357.0], [84.1, 1358.0], [84.2, 1361.0], [84.3, 1362.0], [84.4, 1364.0], [84.5, 1368.0], [84.6, 1370.0], [84.7, 1372.0], [84.8, 1374.0], [84.9, 1376.0], [85.0, 1377.0], [85.1, 1379.0], [85.2, 1380.0], [85.3, 1381.0], [85.4, 1382.0], [85.5, 1386.0], [85.6, 1388.0], [85.7, 1391.0], [85.8, 1391.0], [85.9, 1392.0], [86.0, 1393.0], [86.1, 1396.0], [86.2, 1399.0], [86.3, 1401.0], [86.4, 1401.0], [86.5, 1403.0], [86.6, 1404.0], [86.7, 1406.0], [86.8, 1406.0], [86.9, 1408.0], [87.0, 1409.0], [87.1, 1410.0], [87.2, 1412.0], [87.3, 1413.0], [87.4, 1415.0], [87.5, 1416.0], [87.6, 1417.0], [87.7, 1418.0], [87.8, 1419.0], [87.9, 1421.0], [88.0, 1422.0], [88.1, 1423.0], [88.2, 1424.0], [88.3, 1426.0], [88.4, 1428.0], [88.5, 1430.0], [88.6, 1430.0], [88.7, 1431.0], [88.8, 1433.0], [88.9, 1434.0], [89.0, 1435.0], [89.1, 1436.0], [89.2, 1437.0], [89.3, 1438.0], [89.4, 1438.0], [89.5, 1442.0], [89.6, 1444.0], [89.7, 1445.0], [89.8, 1446.0], [89.9, 1447.0], [90.0, 1447.0], [90.1, 1451.0], [90.2, 1456.0], [90.3, 1459.0], [90.4, 1459.0], [90.5, 1460.0], [90.6, 1461.0], [90.7, 1463.0], [90.8, 1464.0], [90.9, 1465.0], [91.0, 1467.0], [91.1, 1468.0], [91.2, 1470.0], [91.3, 1471.0], [91.4, 1473.0], [91.5, 1475.0], [91.6, 1476.0], [91.7, 1477.0], [91.8, 1478.0], [91.9, 1479.0], [92.0, 1480.0], [92.1, 1480.0], [92.2, 1481.0], [92.3, 1482.0], [92.4, 1484.0], [92.5, 1484.0], [92.6, 1486.0], [92.7, 1488.0], [92.8, 1490.0], [92.9, 1497.0], [93.0, 1499.0], [93.1, 1500.0], [93.2, 1507.0], [93.3, 1508.0], [93.4, 1509.0], [93.5, 1510.0], [93.6, 1515.0], [93.7, 1518.0], [93.8, 1519.0], [93.9, 1521.0], [94.0, 1522.0], [94.1, 1525.0], [94.2, 1529.0], [94.3, 1530.0], [94.4, 1532.0], [94.5, 1535.0], [94.6, 1535.0], [94.7, 1536.0], [94.8, 1542.0], [94.9, 1543.0], [95.0, 1544.0], [95.1, 1546.0], [95.2, 1555.0], [95.3, 1560.0], [95.4, 1565.0], [95.5, 1567.0], [95.6, 1571.0], [95.7, 1573.0], [95.8, 1580.0], [95.9, 1582.0], [96.0, 1592.0], [96.1, 1596.0], [96.2, 1600.0], [96.3, 1604.0], [96.4, 1612.0], [96.5, 1621.0], [96.6, 1634.0], [96.7, 1640.0], [96.8, 1648.0], [96.9, 1665.0], [97.0, 1678.0], [97.1, 1683.0], [97.2, 1694.0], [97.3, 1702.0], [97.4, 1702.0], [97.5, 1706.0], [97.6, 1706.0], [97.7, 1717.0], [97.8, 1724.0], [97.9, 1733.0], [98.0, 1736.0], [98.1, 1754.0], [98.2, 1802.0], [98.3, 1807.0], [98.4, 1812.0], [98.5, 1840.0], [98.6, 1845.0], [98.7, 1858.0], [98.8, 1862.0], [98.9, 1868.0], [99.0, 1871.0], [99.1, 1873.0], [99.2, 1875.0], [99.3, 1881.0], [99.4, 1891.0], [99.5, 1893.0], [99.6, 1904.0], [99.7, 1934.0], [99.8, 1979.0], [99.9, 2097.0], [100.0, 2197.0]], "isOverall": false, "label": "Create payment token for a given payment source", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 273.0], [0.3, 275.0], [0.4, 278.0], [0.5, 281.0], [0.6, 286.0], [0.7, 288.0], [0.8, 291.0], [0.9, 296.0], [1.0, 303.0], [1.1, 310.0], [1.2, 311.0], [1.3, 312.0], [1.4, 313.0], [1.5, 314.0], [1.6, 315.0], [1.7, 316.0], [1.8, 317.0], [1.9, 317.0], [2.0, 318.0], [2.1, 319.0], [2.2, 319.0], [2.3, 320.0], [2.4, 320.0], [2.5, 320.0], [2.6, 320.0], [2.7, 321.0], [2.8, 322.0], [2.9, 322.0], [3.0, 322.0], [3.1, 323.0], [3.2, 323.0], [3.3, 323.0], [3.4, 323.0], [3.5, 324.0], [3.6, 324.0], [3.7, 324.0], [3.8, 325.0], [3.9, 326.0], [4.0, 326.0], [4.1, 326.0], [4.2, 327.0], [4.3, 327.0], [4.4, 328.0], [4.5, 328.0], [4.6, 328.0], [4.7, 328.0], [4.8, 329.0], [4.9, 329.0], [5.0, 329.0], [5.1, 330.0], [5.2, 330.0], [5.3, 330.0], [5.4, 330.0], [5.5, 331.0], [5.6, 331.0], [5.7, 332.0], [5.8, 332.0], [5.9, 332.0], [6.0, 333.0], [6.1, 333.0], [6.2, 334.0], [6.3, 334.0], [6.4, 335.0], [6.5, 335.0], [6.6, 335.0], [6.7, 335.0], [6.8, 335.0], [6.9, 336.0], [7.0, 336.0], [7.1, 337.0], [7.2, 337.0], [7.3, 337.0], [7.4, 337.0], [7.5, 337.0], [7.6, 338.0], [7.7, 338.0], [7.8, 338.0], [7.9, 339.0], [8.0, 339.0], [8.1, 339.0], [8.2, 340.0], [8.3, 340.0], [8.4, 340.0], [8.5, 341.0], [8.6, 341.0], [8.7, 341.0], [8.8, 342.0], [8.9, 342.0], [9.0, 343.0], [9.1, 343.0], [9.2, 343.0], [9.3, 343.0], [9.4, 343.0], [9.5, 344.0], [9.6, 345.0], [9.7, 345.0], [9.8, 346.0], [9.9, 347.0], [10.0, 347.0], [10.1, 347.0], [10.2, 348.0], [10.3, 348.0], [10.4, 348.0], [10.5, 349.0], [10.6, 349.0], [10.7, 350.0], [10.8, 350.0], [10.9, 351.0], [11.0, 351.0], [11.1, 352.0], [11.2, 352.0], [11.3, 353.0], [11.4, 353.0], [11.5, 354.0], [11.6, 354.0], [11.7, 355.0], [11.8, 355.0], [11.9, 356.0], [12.0, 356.0], [12.1, 357.0], [12.2, 357.0], [12.3, 357.0], [12.4, 358.0], [12.5, 358.0], [12.6, 359.0], [12.7, 359.0], [12.8, 360.0], [12.9, 360.0], [13.0, 360.0], [13.1, 360.0], [13.2, 361.0], [13.3, 361.0], [13.4, 362.0], [13.5, 362.0], [13.6, 363.0], [13.7, 363.0], [13.8, 364.0], [13.9, 364.0], [14.0, 364.0], [14.1, 365.0], [14.2, 366.0], [14.3, 367.0], [14.4, 367.0], [14.5, 368.0], [14.6, 370.0], [14.7, 371.0], [14.8, 372.0], [14.9, 372.0], [15.0, 374.0], [15.1, 375.0], [15.2, 377.0], [15.3, 377.0], [15.4, 378.0], [15.5, 379.0], [15.6, 379.0], [15.7, 381.0], [15.8, 381.0], [15.9, 382.0], [16.0, 383.0], [16.1, 384.0], [16.2, 385.0], [16.3, 386.0], [16.4, 386.0], [16.5, 387.0], [16.6, 387.0], [16.7, 389.0], [16.8, 389.0], [16.9, 390.0], [17.0, 393.0], [17.1, 394.0], [17.2, 396.0], [17.3, 396.0], [17.4, 397.0], [17.5, 398.0], [17.6, 400.0], [17.7, 401.0], [17.8, 402.0], [17.9, 403.0], [18.0, 405.0], [18.1, 406.0], [18.2, 407.0], [18.3, 407.0], [18.4, 408.0], [18.5, 408.0], [18.6, 409.0], [18.7, 411.0], [18.8, 411.0], [18.9, 413.0], [19.0, 413.0], [19.1, 415.0], [19.2, 415.0], [19.3, 417.0], [19.4, 419.0], [19.5, 420.0], [19.6, 420.0], [19.7, 421.0], [19.8, 422.0], [19.9, 425.0], [20.0, 425.0], [20.1, 426.0], [20.2, 429.0], [20.3, 431.0], [20.4, 432.0], [20.5, 433.0], [20.6, 434.0], [20.7, 436.0], [20.8, 437.0], [20.9, 439.0], [21.0, 440.0], [21.1, 442.0], [21.2, 442.0], [21.3, 443.0], [21.4, 443.0], [21.5, 444.0], [21.6, 445.0], [21.7, 446.0], [21.8, 449.0], [21.9, 450.0], [22.0, 454.0], [22.1, 455.0], [22.2, 456.0], [22.3, 458.0], [22.4, 458.0], [22.5, 461.0], [22.6, 461.0], [22.7, 463.0], [22.8, 465.0], [22.9, 466.0], [23.0, 470.0], [23.1, 473.0], [23.2, 475.0], [23.3, 476.0], [23.4, 480.0], [23.5, 485.0], [23.6, 487.0], [23.7, 488.0], [23.8, 491.0], [23.9, 496.0], [24.0, 497.0], [24.1, 498.0], [24.2, 498.0], [24.3, 500.0], [24.4, 501.0], [24.5, 502.0], [24.6, 505.0], [24.7, 506.0], [24.8, 509.0], [24.9, 510.0], [25.0, 513.0], [25.1, 515.0], [25.2, 518.0], [25.3, 526.0], [25.4, 527.0], [25.5, 538.0], [25.6, 540.0], [25.7, 548.0], [25.8, 551.0], [25.9, 567.0], [26.0, 581.0], [26.1, 588.0], [26.2, 592.0], [26.3, 594.0], [26.4, 599.0], [26.5, 609.0], [26.6, 614.0], [26.7, 620.0], [26.8, 623.0], [26.9, 636.0], [27.0, 654.0], [27.1, 657.0], [27.2, 667.0], [27.3, 669.0], [27.4, 682.0], [27.5, 691.0], [27.6, 706.0], [27.7, 712.0], [27.8, 717.0], [27.9, 723.0], [28.0, 729.0], [28.1, 737.0], [28.2, 764.0], [28.3, 777.0], [28.4, 782.0], [28.5, 797.0], [28.6, 803.0], [28.7, 805.0], [28.8, 808.0], [28.9, 817.0], [29.0, 822.0], [29.1, 834.0], [29.2, 836.0], [29.3, 841.0], [29.4, 848.0], [29.5, 849.0], [29.6, 852.0], [29.7, 855.0], [29.8, 860.0], [29.9, 862.0], [30.0, 864.0], [30.1, 865.0], [30.2, 866.0], [30.3, 871.0], [30.4, 876.0], [30.5, 877.0], [30.6, 880.0], [30.7, 882.0], [30.8, 886.0], [30.9, 891.0], [31.0, 894.0], [31.1, 901.0], [31.2, 902.0], [31.3, 909.0], [31.4, 911.0], [31.5, 915.0], [31.6, 918.0], [31.7, 920.0], [31.8, 925.0], [31.9, 929.0], [32.0, 932.0], [32.1, 933.0], [32.2, 936.0], [32.3, 939.0], [32.4, 940.0], [32.5, 943.0], [32.6, 945.0], [32.7, 949.0], [32.8, 950.0], [32.9, 952.0], [33.0, 956.0], [33.1, 956.0], [33.2, 958.0], [33.3, 961.0], [33.4, 964.0], [33.5, 966.0], [33.6, 968.0], [33.7, 970.0], [33.8, 974.0], [33.9, 978.0], [34.0, 979.0], [34.1, 982.0], [34.2, 985.0], [34.3, 986.0], [34.4, 988.0], [34.5, 989.0], [34.6, 991.0], [34.7, 993.0], [34.8, 995.0], [34.9, 997.0], [35.0, 1001.0], [35.1, 1005.0], [35.2, 1008.0], [35.3, 1014.0], [35.4, 1015.0], [35.5, 1017.0], [35.6, 1017.0], [35.7, 1019.0], [35.8, 1022.0], [35.9, 1023.0], [36.0, 1025.0], [36.1, 1028.0], [36.2, 1029.0], [36.3, 1032.0], [36.4, 1033.0], [36.5, 1034.0], [36.6, 1035.0], [36.7, 1041.0], [36.8, 1043.0], [36.9, 1046.0], [37.0, 1047.0], [37.1, 1048.0], [37.2, 1049.0], [37.3, 1050.0], [37.4, 1052.0], [37.5, 1052.0], [37.6, 1055.0], [37.7, 1056.0], [37.8, 1056.0], [37.9, 1059.0], [38.0, 1059.0], [38.1, 1060.0], [38.2, 1060.0], [38.3, 1061.0], [38.4, 1061.0], [38.5, 1062.0], [38.6, 1062.0], [38.7, 1063.0], [38.8, 1064.0], [38.9, 1064.0], [39.0, 1065.0], [39.1, 1067.0], [39.2, 1068.0], [39.3, 1069.0], [39.4, 1070.0], [39.5, 1071.0], [39.6, 1072.0], [39.7, 1072.0], [39.8, 1073.0], [39.9, 1073.0], [40.0, 1074.0], [40.1, 1074.0], [40.2, 1075.0], [40.3, 1076.0], [40.4, 1076.0], [40.5, 1077.0], [40.6, 1078.0], [40.7, 1079.0], [40.8, 1079.0], [40.9, 1080.0], [41.0, 1080.0], [41.1, 1081.0], [41.2, 1082.0], [41.3, 1082.0], [41.4, 1082.0], [41.5, 1083.0], [41.6, 1084.0], [41.7, 1084.0], [41.8, 1085.0], [41.9, 1085.0], [42.0, 1085.0], [42.1, 1085.0], [42.2, 1086.0], [42.3, 1086.0], [42.4, 1088.0], [42.5, 1088.0], [42.6, 1088.0], [42.7, 1089.0], [42.8, 1089.0], [42.9, 1089.0], [43.0, 1089.0], [43.1, 1089.0], [43.2, 1090.0], [43.3, 1091.0], [43.4, 1091.0], [43.5, 1091.0], [43.6, 1091.0], [43.7, 1091.0], [43.8, 1092.0], [43.9, 1093.0], [44.0, 1093.0], [44.1, 1093.0], [44.2, 1094.0], [44.3, 1095.0], [44.4, 1095.0], [44.5, 1095.0], [44.6, 1095.0], [44.7, 1096.0], [44.8, 1096.0], [44.9, 1097.0], [45.0, 1097.0], [45.1, 1097.0], [45.2, 1097.0], [45.3, 1098.0], [45.4, 1098.0], [45.5, 1098.0], [45.6, 1099.0], [45.7, 1099.0], [45.8, 1100.0], [45.9, 1100.0], [46.0, 1101.0], [46.1, 1101.0], [46.2, 1101.0], [46.3, 1102.0], [46.4, 1102.0], [46.5, 1103.0], [46.6, 1103.0], [46.7, 1104.0], [46.8, 1104.0], [46.9, 1104.0], [47.0, 1105.0], [47.1, 1105.0], [47.2, 1105.0], [47.3, 1105.0], [47.4, 1106.0], [47.5, 1106.0], [47.6, 1107.0], [47.7, 1107.0], [47.8, 1107.0], [47.9, 1107.0], [48.0, 1108.0], [48.1, 1108.0], [48.2, 1108.0], [48.3, 1109.0], [48.4, 1109.0], [48.5, 1110.0], [48.6, 1110.0], [48.7, 1110.0], [48.8, 1111.0], [48.9, 1111.0], [49.0, 1111.0], [49.1, 1111.0], [49.2, 1112.0], [49.3, 1112.0], [49.4, 1112.0], [49.5, 1112.0], [49.6, 1113.0], [49.7, 1113.0], [49.8, 1113.0], [49.9, 1113.0], [50.0, 1114.0], [50.1, 1114.0], [50.2, 1114.0], [50.3, 1115.0], [50.4, 1115.0], [50.5, 1115.0], [50.6, 1115.0], [50.7, 1116.0], [50.8, 1116.0], [50.9, 1117.0], [51.0, 1117.0], [51.1, 1117.0], [51.2, 1117.0], [51.3, 1118.0], [51.4, 1118.0], [51.5, 1119.0], [51.6, 1119.0], [51.7, 1119.0], [51.8, 1119.0], [51.9, 1120.0], [52.0, 1120.0], [52.1, 1121.0], [52.2, 1121.0], [52.3, 1121.0], [52.4, 1122.0], [52.5, 1122.0], [52.6, 1122.0], [52.7, 1123.0], [52.8, 1123.0], [52.9, 1123.0], [53.0, 1124.0], [53.1, 1124.0], [53.2, 1124.0], [53.3, 1124.0], [53.4, 1124.0], [53.5, 1124.0], [53.6, 1125.0], [53.7, 1125.0], [53.8, 1125.0], [53.9, 1126.0], [54.0, 1126.0], [54.1, 1127.0], [54.2, 1127.0], [54.3, 1128.0], [54.4, 1128.0], [54.5, 1129.0], [54.6, 1129.0], [54.7, 1129.0], [54.8, 1129.0], [54.9, 1130.0], [55.0, 1130.0], [55.1, 1130.0], [55.2, 1130.0], [55.3, 1131.0], [55.4, 1131.0], [55.5, 1132.0], [55.6, 1132.0], [55.7, 1132.0], [55.8, 1132.0], [55.9, 1133.0], [56.0, 1133.0], [56.1, 1134.0], [56.2, 1134.0], [56.3, 1135.0], [56.4, 1135.0], [56.5, 1136.0], [56.6, 1136.0], [56.7, 1136.0], [56.8, 1137.0], [56.9, 1137.0], [57.0, 1137.0], [57.1, 1137.0], [57.2, 1137.0], [57.3, 1137.0], [57.4, 1138.0], [57.5, 1138.0], [57.6, 1138.0], [57.7, 1139.0], [57.8, 1139.0], [57.9, 1139.0], [58.0, 1139.0], [58.1, 1140.0], [58.2, 1140.0], [58.3, 1141.0], [58.4, 1141.0], [58.5, 1141.0], [58.6, 1141.0], [58.7, 1142.0], [58.8, 1143.0], [58.9, 1143.0], [59.0, 1143.0], [59.1, 1144.0], [59.2, 1144.0], [59.3, 1144.0], [59.4, 1144.0], [59.5, 1145.0], [59.6, 1146.0], [59.7, 1146.0], [59.8, 1146.0], [59.9, 1146.0], [60.0, 1146.0], [60.1, 1146.0], [60.2, 1147.0], [60.3, 1147.0], [60.4, 1147.0], [60.5, 1148.0], [60.6, 1148.0], [60.7, 1148.0], [60.8, 1148.0], [60.9, 1149.0], [61.0, 1149.0], [61.1, 1149.0], [61.2, 1150.0], [61.3, 1150.0], [61.4, 1150.0], [61.5, 1151.0], [61.6, 1151.0], [61.7, 1151.0], [61.8, 1151.0], [61.9, 1151.0], [62.0, 1152.0], [62.1, 1152.0], [62.2, 1152.0], [62.3, 1152.0], [62.4, 1153.0], [62.5, 1153.0], [62.6, 1154.0], [62.7, 1154.0], [62.8, 1154.0], [62.9, 1154.0], [63.0, 1155.0], [63.1, 1155.0], [63.2, 1156.0], [63.3, 1156.0], [63.4, 1156.0], [63.5, 1157.0], [63.6, 1157.0], [63.7, 1157.0], [63.8, 1157.0], [63.9, 1158.0], [64.0, 1158.0], [64.1, 1158.0], [64.2, 1159.0], [64.3, 1159.0], [64.4, 1159.0], [64.5, 1160.0], [64.6, 1160.0], [64.7, 1160.0], [64.8, 1161.0], [64.9, 1161.0], [65.0, 1161.0], [65.1, 1162.0], [65.2, 1162.0], [65.3, 1162.0], [65.4, 1163.0], [65.5, 1163.0], [65.6, 1163.0], [65.7, 1163.0], [65.8, 1164.0], [65.9, 1164.0], [66.0, 1164.0], [66.1, 1165.0], [66.2, 1165.0], [66.3, 1167.0], [66.4, 1167.0], [66.5, 1167.0], [66.6, 1168.0], [66.7, 1168.0], [66.8, 1168.0], [66.9, 1169.0], [67.0, 1169.0], [67.1, 1170.0], [67.2, 1170.0], [67.3, 1171.0], [67.4, 1171.0], [67.5, 1171.0], [67.6, 1172.0], [67.7, 1172.0], [67.8, 1173.0], [67.9, 1173.0], [68.0, 1174.0], [68.1, 1175.0], [68.2, 1175.0], [68.3, 1175.0], [68.4, 1176.0], [68.5, 1176.0], [68.6, 1176.0], [68.7, 1176.0], [68.8, 1177.0], [68.9, 1177.0], [69.0, 1177.0], [69.1, 1179.0], [69.2, 1179.0], [69.3, 1180.0], [69.4, 1181.0], [69.5, 1181.0], [69.6, 1182.0], [69.7, 1182.0], [69.8, 1183.0], [69.9, 1183.0], [70.0, 1185.0], [70.1, 1185.0], [70.2, 1185.0], [70.3, 1186.0], [70.4, 1187.0], [70.5, 1188.0], [70.6, 1189.0], [70.7, 1189.0], [70.8, 1192.0], [70.9, 1193.0], [71.0, 1193.0], [71.1, 1194.0], [71.2, 1194.0], [71.3, 1195.0], [71.4, 1195.0], [71.5, 1197.0], [71.6, 1197.0], [71.7, 1199.0], [71.8, 1199.0], [71.9, 1199.0], [72.0, 1200.0], [72.1, 1200.0], [72.2, 1202.0], [72.3, 1203.0], [72.4, 1205.0], [72.5, 1205.0], [72.6, 1206.0], [72.7, 1208.0], [72.8, 1209.0], [72.9, 1209.0], [73.0, 1209.0], [73.1, 1210.0], [73.2, 1214.0], [73.3, 1214.0], [73.4, 1214.0], [73.5, 1215.0], [73.6, 1215.0], [73.7, 1217.0], [73.8, 1217.0], [73.9, 1218.0], [74.0, 1219.0], [74.1, 1220.0], [74.2, 1222.0], [74.3, 1223.0], [74.4, 1224.0], [74.5, 1224.0], [74.6, 1226.0], [74.7, 1227.0], [74.8, 1229.0], [74.9, 1231.0], [75.0, 1231.0], [75.1, 1233.0], [75.2, 1235.0], [75.3, 1235.0], [75.4, 1236.0], [75.5, 1236.0], [75.6, 1237.0], [75.7, 1237.0], [75.8, 1238.0], [75.9, 1239.0], [76.0, 1240.0], [76.1, 1242.0], [76.2, 1244.0], [76.3, 1244.0], [76.4, 1244.0], [76.5, 1245.0], [76.6, 1249.0], [76.7, 1250.0], [76.8, 1254.0], [76.9, 1255.0], [77.0, 1256.0], [77.1, 1256.0], [77.2, 1257.0], [77.3, 1258.0], [77.4, 1259.0], [77.5, 1263.0], [77.6, 1264.0], [77.7, 1265.0], [77.8, 1268.0], [77.9, 1269.0], [78.0, 1270.0], [78.1, 1270.0], [78.2, 1271.0], [78.3, 1272.0], [78.4, 1274.0], [78.5, 1274.0], [78.6, 1276.0], [78.7, 1276.0], [78.8, 1278.0], [78.9, 1279.0], [79.0, 1280.0], [79.1, 1281.0], [79.2, 1283.0], [79.3, 1285.0], [79.4, 1287.0], [79.5, 1288.0], [79.6, 1289.0], [79.7, 1290.0], [79.8, 1290.0], [79.9, 1293.0], [80.0, 1294.0], [80.1, 1295.0], [80.2, 1295.0], [80.3, 1296.0], [80.4, 1298.0], [80.5, 1299.0], [80.6, 1300.0], [80.7, 1300.0], [80.8, 1302.0], [80.9, 1303.0], [81.0, 1304.0], [81.1, 1305.0], [81.2, 1308.0], [81.3, 1308.0], [81.4, 1310.0], [81.5, 1313.0], [81.6, 1313.0], [81.7, 1315.0], [81.8, 1317.0], [81.9, 1319.0], [82.0, 1320.0], [82.1, 1323.0], [82.2, 1325.0], [82.3, 1327.0], [82.4, 1328.0], [82.5, 1328.0], [82.6, 1331.0], [82.7, 1336.0], [82.8, 1337.0], [82.9, 1338.0], [83.0, 1339.0], [83.1, 1340.0], [83.2, 1342.0], [83.3, 1344.0], [83.4, 1348.0], [83.5, 1348.0], [83.6, 1350.0], [83.7, 1353.0], [83.8, 1354.0], [83.9, 1356.0], [84.0, 1358.0], [84.1, 1361.0], [84.2, 1362.0], [84.3, 1364.0], [84.4, 1368.0], [84.5, 1370.0], [84.6, 1372.0], [84.7, 1374.0], [84.8, 1376.0], [84.9, 1377.0], [85.0, 1379.0], [85.1, 1380.0], [85.2, 1381.0], [85.3, 1382.0], [85.4, 1386.0], [85.5, 1388.0], [85.6, 1391.0], [85.7, 1391.0], [85.8, 1392.0], [85.9, 1393.0], [86.0, 1396.0], [86.1, 1399.0], [86.2, 1401.0], [86.3, 1401.0], [86.4, 1403.0], [86.5, 1404.0], [86.6, 1406.0], [86.7, 1406.0], [86.8, 1408.0], [86.9, 1409.0], [87.0, 1409.0], [87.1, 1412.0], [87.2, 1413.0], [87.3, 1414.0], [87.4, 1416.0], [87.5, 1417.0], [87.6, 1418.0], [87.7, 1418.0], [87.8, 1420.0], [87.9, 1421.0], [88.0, 1423.0], [88.1, 1424.0], [88.2, 1426.0], [88.3, 1427.0], [88.4, 1428.0], [88.5, 1431.0], [88.6, 1431.0], [88.7, 1432.0], [88.8, 1434.0], [88.9, 1435.0], [89.0, 1436.0], [89.1, 1436.0], [89.2, 1437.0], [89.3, 1438.0], [89.4, 1439.0], [89.5, 1442.0], [89.6, 1444.0], [89.7, 1445.0], [89.8, 1446.0], [89.9, 1447.0], [90.0, 1448.0], [90.1, 1455.0], [90.2, 1457.0], [90.3, 1458.0], [90.4, 1459.0], [90.5, 1460.0], [90.6, 1461.0], [90.7, 1463.0], [90.8, 1464.0], [90.9, 1466.0], [91.0, 1467.0], [91.1, 1468.0], [91.2, 1471.0], [91.3, 1471.0], [91.4, 1473.0], [91.5, 1474.0], [91.6, 1476.0], [91.7, 1477.0], [91.8, 1478.0], [91.9, 1479.0], [92.0, 1479.0], [92.1, 1480.0], [92.2, 1481.0], [92.3, 1482.0], [92.4, 1484.0], [92.5, 1485.0], [92.6, 1486.0], [92.7, 1488.0], [92.8, 1490.0], [92.9, 1497.0], [93.0, 1499.0], [93.1, 1501.0], [93.2, 1507.0], [93.3, 1508.0], [93.4, 1509.0], [93.5, 1511.0], [93.6, 1516.0], [93.7, 1518.0], [93.8, 1521.0], [93.9, 1521.0], [94.0, 1525.0], [94.1, 1528.0], [94.2, 1530.0], [94.3, 1531.0], [94.4, 1532.0], [94.5, 1535.0], [94.6, 1537.0], [94.7, 1538.0], [94.8, 1543.0], [94.9, 1543.0], [95.0, 1545.0], [95.1, 1550.0], [95.2, 1558.0], [95.3, 1562.0], [95.4, 1565.0], [95.5, 1567.0], [95.6, 1571.0], [95.7, 1573.0], [95.8, 1580.0], [95.9, 1582.0], [96.0, 1593.0], [96.1, 1596.0], [96.2, 1600.0], [96.3, 1604.0], [96.4, 1612.0], [96.5, 1621.0], [96.6, 1629.0], [96.7, 1641.0], [96.8, 1648.0], [96.9, 1665.0], [97.0, 1678.0], [97.1, 1682.0], [97.2, 1695.0], [97.3, 1702.0], [97.4, 1703.0], [97.5, 1706.0], [97.6, 1706.0], [97.7, 1717.0], [97.8, 1724.0], [97.9, 1733.0], [98.0, 1737.0], [98.1, 1754.0], [98.2, 1803.0], [98.3, 1807.0], [98.4, 1812.0], [98.5, 1840.0], [98.6, 1845.0], [98.7, 1859.0], [98.8, 1862.0], [98.9, 1871.0], [99.0, 1872.0], [99.1, 1873.0], [99.2, 1875.0], [99.3, 1881.0], [99.4, 1891.0], [99.5, 1893.0], [99.6, 1904.0], [99.7, 1934.0], [99.8, 1979.0], [99.9, 2097.0], [100.0, 2197.0]], "isOverall": false, "label": "(SpikeTesting)CreatePaymentToken_tr_ForGivenPaymentSource", "isController": true}, {"data": [[0.0, 310.0], [0.1, 310.0], [0.2, 310.0], [0.3, 310.0], [0.4, 314.0], [0.5, 314.0], [0.6, 314.0], [0.7, 316.0], [0.8, 316.0], [0.9, 316.0], [1.0, 318.0], [1.1, 318.0], [1.2, 318.0], [1.3, 322.0], [1.4, 322.0], [1.5, 322.0], [1.6, 322.0], [1.7, 322.0], [1.8, 322.0], [1.9, 322.0], [2.0, 323.0], [2.1, 323.0], [2.2, 323.0], [2.3, 324.0], [2.4, 324.0], [2.5, 324.0], [2.6, 325.0], [2.7, 325.0], [2.8, 325.0], [2.9, 325.0], [3.0, 325.0], [3.1, 325.0], [3.2, 326.0], [3.3, 326.0], [3.4, 326.0], [3.5, 326.0], [3.6, 326.0], [3.7, 326.0], [3.8, 326.0], [3.9, 327.0], [4.0, 327.0], [4.1, 327.0], [4.2, 329.0], [4.3, 329.0], [4.4, 329.0], [4.5, 329.0], [4.6, 329.0], [4.7, 329.0], [4.8, 330.0], [4.9, 330.0], [5.0, 330.0], [5.1, 330.0], [5.2, 330.0], [5.3, 330.0], [5.4, 330.0], [5.5, 332.0], [5.6, 332.0], [5.7, 332.0], [5.8, 333.0], [5.9, 333.0], [6.0, 333.0], [6.1, 333.0], [6.2, 333.0], [6.3, 333.0], [6.4, 333.0], [6.5, 333.0], [6.6, 333.0], [6.7, 335.0], [6.8, 335.0], [6.9, 335.0], [7.0, 335.0], [7.1, 337.0], [7.2, 337.0], [7.3, 337.0], [7.4, 337.0], [7.5, 337.0], [7.6, 337.0], [7.7, 338.0], [7.8, 338.0], [7.9, 338.0], [8.0, 339.0], [8.1, 339.0], [8.2, 339.0], [8.3, 340.0], [8.4, 340.0], [8.5, 340.0], [8.6, 340.0], [8.7, 340.0], [8.8, 340.0], [8.9, 340.0], [9.0, 341.0], [9.1, 341.0], [9.2, 341.0], [9.3, 342.0], [9.4, 342.0], [9.5, 342.0], [9.6, 342.0], [9.7, 342.0], [9.8, 342.0], [9.9, 342.0], [10.0, 342.0], [10.1, 342.0], [10.2, 342.0], [10.3, 342.0], [10.4, 342.0], [10.5, 342.0], [10.6, 344.0], [10.7, 344.0], [10.8, 344.0], [10.9, 344.0], [11.0, 344.0], [11.1, 344.0], [11.2, 345.0], [11.3, 345.0], [11.4, 345.0], [11.5, 345.0], [11.6, 345.0], [11.7, 345.0], [11.8, 346.0], [11.9, 346.0], [12.0, 346.0], [12.1, 346.0], [12.2, 346.0], [12.3, 346.0], [12.4, 346.0], [12.5, 346.0], [12.6, 346.0], [12.7, 346.0], [12.8, 348.0], [12.9, 348.0], [13.0, 348.0], [13.1, 348.0], [13.2, 348.0], [13.3, 348.0], [13.4, 348.0], [13.5, 348.0], [13.6, 348.0], [13.7, 348.0], [13.8, 348.0], [13.9, 348.0], [14.0, 348.0], [14.1, 348.0], [14.2, 348.0], [14.3, 348.0], [14.4, 348.0], [14.5, 348.0], [14.6, 348.0], [14.7, 350.0], [14.8, 350.0], [14.9, 350.0], [15.0, 350.0], [15.1, 350.0], [15.2, 350.0], [15.3, 350.0], [15.4, 350.0], [15.5, 350.0], [15.6, 350.0], [15.7, 352.0], [15.8, 352.0], [15.9, 352.0], [16.0, 352.0], [16.1, 352.0], [16.2, 352.0], [16.3, 353.0], [16.4, 353.0], [16.5, 353.0], [16.6, 353.0], [16.7, 353.0], [16.8, 353.0], [16.9, 353.0], [17.0, 353.0], [17.1, 353.0], [17.2, 356.0], [17.3, 356.0], [17.4, 356.0], [17.5, 356.0], [17.6, 356.0], [17.7, 356.0], [17.8, 356.0], [17.9, 357.0], [18.0, 357.0], [18.1, 357.0], [18.2, 357.0], [18.3, 357.0], [18.4, 357.0], [18.5, 358.0], [18.6, 358.0], [18.7, 358.0], [18.8, 358.0], [18.9, 358.0], [19.0, 358.0], [19.1, 358.0], [19.2, 359.0], [19.3, 359.0], [19.4, 359.0], [19.5, 359.0], [19.6, 359.0], [19.7, 359.0], [19.8, 359.0], [19.9, 359.0], [20.0, 359.0], [20.1, 359.0], [20.2, 359.0], [20.3, 359.0], [20.4, 360.0], [20.5, 360.0], [20.6, 360.0], [20.7, 360.0], [20.8, 360.0], [20.9, 360.0], [21.0, 360.0], [21.1, 360.0], [21.2, 360.0], [21.3, 360.0], [21.4, 361.0], [21.5, 361.0], [21.6, 361.0], [21.7, 362.0], [21.8, 362.0], [21.9, 362.0], [22.0, 362.0], [22.1, 362.0], [22.2, 362.0], [22.3, 362.0], [22.4, 362.0], [22.5, 362.0], [22.6, 362.0], [22.7, 362.0], [22.8, 362.0], [22.9, 362.0], [23.0, 362.0], [23.1, 362.0], [23.2, 362.0], [23.3, 363.0], [23.4, 363.0], [23.5, 363.0], [23.6, 363.0], [23.7, 363.0], [23.8, 363.0], [23.9, 363.0], [24.0, 363.0], [24.1, 363.0], [24.2, 363.0], [24.3, 364.0], [24.4, 364.0], [24.5, 364.0], [24.6, 364.0], [24.7, 364.0], [24.8, 364.0], [24.9, 364.0], [25.0, 364.0], [25.1, 364.0], [25.2, 364.0], [25.3, 364.0], [25.4, 364.0], [25.5, 364.0], [25.6, 364.0], [25.7, 364.0], [25.8, 365.0], [25.9, 365.0], [26.0, 365.0], [26.1, 365.0], [26.2, 365.0], [26.3, 365.0], [26.4, 365.0], [26.5, 366.0], [26.6, 366.0], [26.7, 366.0], [26.8, 366.0], [26.9, 366.0], [27.0, 366.0], [27.1, 366.0], [27.2, 366.0], [27.3, 366.0], [27.4, 366.0], [27.5, 366.0], [27.6, 366.0], [27.7, 366.0], [27.8, 367.0], [27.9, 367.0], [28.0, 367.0], [28.1, 367.0], [28.2, 367.0], [28.3, 367.0], [28.4, 368.0], [28.5, 368.0], [28.6, 368.0], [28.7, 368.0], [28.8, 368.0], [28.9, 368.0], [29.0, 369.0], [29.1, 369.0], [29.2, 369.0], [29.3, 369.0], [29.4, 369.0], [29.5, 369.0], [29.6, 369.0], [29.7, 369.0], [29.8, 369.0], [29.9, 369.0], [30.0, 369.0], [30.1, 369.0], [30.2, 369.0], [30.3, 369.0], [30.4, 369.0], [30.5, 369.0], [30.6, 369.0], [30.7, 369.0], [30.8, 369.0], [30.9, 370.0], [31.0, 370.0], [31.1, 370.0], [31.2, 370.0], [31.3, 370.0], [31.4, 370.0], [31.5, 370.0], [31.6, 371.0], [31.7, 371.0], [31.8, 371.0], [31.9, 371.0], [32.0, 371.0], [32.1, 371.0], [32.2, 371.0], [32.3, 371.0], [32.4, 371.0], [32.5, 371.0], [32.6, 371.0], [32.7, 371.0], [32.8, 371.0], [32.9, 371.0], [33.0, 371.0], [33.1, 371.0], [33.2, 372.0], [33.3, 372.0], [33.4, 372.0], [33.5, 372.0], [33.6, 372.0], [33.7, 372.0], [33.8, 372.0], [33.9, 372.0], [34.0, 372.0], [34.1, 372.0], [34.2, 372.0], [34.3, 372.0], [34.4, 372.0], [34.5, 372.0], [34.6, 372.0], [34.7, 372.0], [34.8, 372.0], [34.9, 372.0], [35.0, 372.0], [35.1, 372.0], [35.2, 372.0], [35.3, 372.0], [35.4, 373.0], [35.5, 373.0], [35.6, 373.0], [35.7, 373.0], [35.8, 373.0], [35.9, 373.0], [36.0, 373.0], [36.1, 373.0], [36.2, 373.0], [36.3, 373.0], [36.4, 374.0], [36.5, 374.0], [36.6, 374.0], [36.7, 374.0], [36.8, 374.0], [36.9, 374.0], [37.0, 374.0], [37.1, 374.0], [37.2, 374.0], [37.3, 374.0], [37.4, 374.0], [37.5, 374.0], [37.6, 375.0], [37.7, 375.0], [37.8, 375.0], [37.9, 375.0], [38.0, 375.0], [38.1, 375.0], [38.2, 375.0], [38.3, 375.0], [38.4, 375.0], [38.5, 375.0], [38.6, 375.0], [38.7, 375.0], [38.8, 375.0], [38.9, 375.0], [39.0, 375.0], [39.1, 375.0], [39.2, 376.0], [39.3, 376.0], [39.4, 376.0], [39.5, 376.0], [39.6, 376.0], [39.7, 376.0], [39.8, 376.0], [39.9, 376.0], [40.0, 376.0], [40.1, 376.0], [40.2, 377.0], [40.3, 377.0], [40.4, 377.0], [40.5, 377.0], [40.6, 377.0], [40.7, 377.0], [40.8, 377.0], [40.9, 377.0], [41.0, 377.0], [41.1, 377.0], [41.2, 377.0], [41.3, 377.0], [41.4, 377.0], [41.5, 378.0], [41.6, 378.0], [41.7, 378.0], [41.8, 378.0], [41.9, 378.0], [42.0, 378.0], [42.1, 378.0], [42.2, 378.0], [42.3, 378.0], [42.4, 378.0], [42.5, 378.0], [42.6, 378.0], [42.7, 378.0], [42.8, 378.0], [42.9, 378.0], [43.0, 378.0], [43.1, 378.0], [43.2, 378.0], [43.3, 378.0], [43.4, 378.0], [43.5, 378.0], [43.6, 378.0], [43.7, 380.0], [43.8, 380.0], [43.9, 380.0], [44.0, 380.0], [44.1, 380.0], [44.2, 380.0], [44.3, 380.0], [44.4, 380.0], [44.5, 380.0], [44.6, 380.0], [44.7, 380.0], [44.8, 380.0], [44.9, 380.0], [45.0, 381.0], [45.1, 381.0], [45.2, 381.0], [45.3, 381.0], [45.4, 381.0], [45.5, 381.0], [45.6, 381.0], [45.7, 381.0], [45.8, 381.0], [45.9, 381.0], [46.0, 381.0], [46.1, 381.0], [46.2, 382.0], [46.3, 382.0], [46.4, 382.0], [46.5, 382.0], [46.6, 382.0], [46.7, 382.0], [46.8, 382.0], [46.9, 383.0], [47.0, 383.0], [47.1, 383.0], [47.2, 383.0], [47.3, 383.0], [47.4, 383.0], [47.5, 383.0], [47.6, 383.0], [47.7, 383.0], [47.8, 383.0], [47.9, 383.0], [48.0, 383.0], [48.1, 384.0], [48.2, 384.0], [48.3, 384.0], [48.4, 384.0], [48.5, 385.0], [48.6, 385.0], [48.7, 385.0], [48.8, 385.0], [48.9, 385.0], [49.0, 385.0], [49.1, 386.0], [49.2, 386.0], [49.3, 386.0], [49.4, 386.0], [49.5, 386.0], [49.6, 386.0], [49.7, 386.0], [49.8, 386.0], [49.9, 386.0], [50.0, 386.0], [50.1, 386.0], [50.2, 386.0], [50.3, 386.0], [50.4, 387.0], [50.5, 387.0], [50.6, 387.0], [50.7, 387.0], [50.8, 387.0], [50.9, 387.0], [51.0, 387.0], [51.1, 387.0], [51.2, 387.0], [51.3, 387.0], [51.4, 387.0], [51.5, 387.0], [51.6, 387.0], [51.7, 387.0], [51.8, 387.0], [51.9, 387.0], [52.0, 387.0], [52.1, 387.0], [52.2, 387.0], [52.3, 388.0], [52.4, 388.0], [52.5, 388.0], [52.6, 389.0], [52.7, 389.0], [52.8, 389.0], [52.9, 389.0], [53.0, 389.0], [53.1, 389.0], [53.2, 389.0], [53.3, 389.0], [53.4, 389.0], [53.5, 389.0], [53.6, 389.0], [53.7, 389.0], [53.8, 389.0], [53.9, 389.0], [54.0, 389.0], [54.1, 389.0], [54.2, 390.0], [54.3, 390.0], [54.4, 390.0], [54.5, 391.0], [54.6, 391.0], [54.7, 391.0], [54.8, 391.0], [54.9, 391.0], [55.0, 391.0], [55.1, 392.0], [55.2, 392.0], [55.3, 392.0], [55.4, 392.0], [55.5, 392.0], [55.6, 392.0], [55.7, 392.0], [55.8, 392.0], [55.9, 392.0], [56.0, 392.0], [56.1, 393.0], [56.2, 393.0], [56.3, 393.0], [56.4, 393.0], [56.5, 393.0], [56.6, 393.0], [56.7, 393.0], [56.8, 393.0], [56.9, 393.0], [57.0, 393.0], [57.1, 393.0], [57.2, 393.0], [57.3, 393.0], [57.4, 394.0], [57.5, 394.0], [57.6, 394.0], [57.7, 395.0], [57.8, 395.0], [57.9, 395.0], [58.0, 395.0], [58.1, 395.0], [58.2, 395.0], [58.3, 396.0], [58.4, 396.0], [58.5, 396.0], [58.6, 396.0], [58.7, 396.0], [58.8, 396.0], [58.9, 396.0], [59.0, 396.0], [59.1, 396.0], [59.2, 396.0], [59.3, 396.0], [59.4, 396.0], [59.5, 396.0], [59.6, 396.0], [59.7, 396.0], [59.8, 396.0], [59.9, 397.0], [60.0, 397.0], [60.1, 397.0], [60.2, 397.0], [60.3, 397.0], [60.4, 397.0], [60.5, 397.0], [60.6, 397.0], [60.7, 397.0], [60.8, 397.0], [60.9, 397.0], [61.0, 397.0], [61.1, 397.0], [61.2, 398.0], [61.3, 398.0], [61.4, 398.0], [61.5, 398.0], [61.6, 398.0], [61.7, 398.0], [61.8, 398.0], [61.9, 398.0], [62.0, 398.0], [62.1, 398.0], [62.2, 398.0], [62.3, 398.0], [62.4, 398.0], [62.5, 399.0], [62.6, 399.0], [62.7, 399.0], [62.8, 399.0], [62.9, 399.0], [63.0, 399.0], [63.1, 399.0], [63.2, 399.0], [63.3, 399.0], [63.4, 400.0], [63.5, 400.0], [63.6, 400.0], [63.7, 401.0], [63.8, 401.0], [63.9, 401.0], [64.0, 401.0], [64.1, 401.0], [64.2, 401.0], [64.3, 401.0], [64.4, 402.0], [64.5, 402.0], [64.6, 402.0], [64.7, 402.0], [64.8, 402.0], [64.9, 402.0], [65.0, 403.0], [65.1, 403.0], [65.2, 403.0], [65.3, 403.0], [65.4, 403.0], [65.5, 403.0], [65.6, 403.0], [65.7, 403.0], [65.8, 403.0], [65.9, 403.0], [66.0, 404.0], [66.1, 404.0], [66.2, 404.0], [66.3, 405.0], [66.4, 405.0], [66.5, 405.0], [66.6, 405.0], [66.7, 405.0], [66.8, 405.0], [66.9, 405.0], [67.0, 405.0], [67.1, 405.0], [67.2, 405.0], [67.3, 405.0], [67.4, 405.0], [67.5, 405.0], [67.6, 406.0], [67.7, 406.0], [67.8, 406.0], [67.9, 406.0], [68.0, 406.0], [68.1, 406.0], [68.2, 406.0], [68.3, 406.0], [68.4, 406.0], [68.5, 407.0], [68.6, 407.0], [68.7, 407.0], [68.8, 407.0], [68.9, 407.0], [69.0, 407.0], [69.1, 407.0], [69.2, 409.0], [69.3, 409.0], [69.4, 409.0], [69.5, 410.0], [69.6, 410.0], [69.7, 410.0], [69.8, 410.0], [69.9, 410.0], [70.0, 410.0], [70.1, 410.0], [70.2, 410.0], [70.3, 410.0], [70.4, 410.0], [70.5, 410.0], [70.6, 410.0], [70.7, 410.0], [70.8, 411.0], [70.9, 411.0], [71.0, 411.0], [71.1, 412.0], [71.2, 412.0], [71.3, 412.0], [71.4, 412.0], [71.5, 412.0], [71.6, 412.0], [71.7, 413.0], [71.8, 413.0], [71.9, 413.0], [72.0, 414.0], [72.1, 414.0], [72.2, 414.0], [72.3, 416.0], [72.4, 416.0], [72.5, 416.0], [72.6, 416.0], [72.7, 417.0], [72.8, 417.0], [72.9, 417.0], [73.0, 419.0], [73.1, 419.0], [73.2, 419.0], [73.3, 420.0], [73.4, 420.0], [73.5, 420.0], [73.6, 420.0], [73.7, 420.0], [73.8, 420.0], [73.9, 421.0], [74.0, 421.0], [74.1, 421.0], [74.2, 421.0], [74.3, 421.0], [74.4, 421.0], [74.5, 421.0], [74.6, 421.0], [74.7, 421.0], [74.8, 421.0], [74.9, 423.0], [75.0, 423.0], [75.1, 423.0], [75.2, 423.0], [75.3, 423.0], [75.4, 423.0], [75.5, 424.0], [75.6, 424.0], [75.7, 424.0], [75.8, 426.0], [75.9, 426.0], [76.0, 426.0], [76.1, 426.0], [76.2, 426.0], [76.3, 426.0], [76.4, 426.0], [76.5, 426.0], [76.6, 426.0], [76.7, 426.0], [76.8, 426.0], [76.9, 426.0], [77.0, 426.0], [77.1, 427.0], [77.2, 427.0], [77.3, 427.0], [77.4, 427.0], [77.5, 427.0], [77.6, 427.0], [77.7, 427.0], [77.8, 428.0], [77.9, 428.0], [78.0, 428.0], [78.1, 429.0], [78.2, 429.0], [78.3, 429.0], [78.4, 431.0], [78.5, 431.0], [78.6, 431.0], [78.7, 432.0], [78.8, 432.0], [78.9, 432.0], [79.0, 432.0], [79.1, 432.0], [79.2, 432.0], [79.3, 433.0], [79.4, 433.0], [79.5, 433.0], [79.6, 433.0], [79.7, 435.0], [79.8, 435.0], [79.9, 435.0], [80.0, 436.0], [80.1, 436.0], [80.2, 436.0], [80.3, 440.0], [80.4, 440.0], [80.5, 440.0], [80.6, 445.0], [80.7, 445.0], [80.8, 445.0], [80.9, 446.0], [81.0, 446.0], [81.1, 446.0], [81.2, 446.0], [81.3, 448.0], [81.4, 448.0], [81.5, 448.0], [81.6, 449.0], [81.7, 449.0], [81.8, 449.0], [81.9, 451.0], [82.0, 451.0], [82.1, 451.0], [82.2, 452.0], [82.3, 452.0], [82.4, 452.0], [82.5, 453.0], [82.6, 453.0], [82.7, 453.0], [82.8, 453.0], [82.9, 454.0], [83.0, 454.0], [83.1, 454.0], [83.2, 456.0], [83.3, 456.0], [83.4, 456.0], [83.5, 457.0], [83.6, 457.0], [83.7, 457.0], [83.8, 459.0], [83.9, 459.0], [84.0, 459.0], [84.1, 465.0], [84.2, 465.0], [84.3, 465.0], [84.4, 466.0], [84.5, 466.0], [84.6, 466.0], [84.7, 466.0], [84.8, 469.0], [84.9, 469.0], [85.0, 469.0], [85.1, 474.0], [85.2, 474.0], [85.3, 474.0], [85.4, 478.0], [85.5, 478.0], [85.6, 478.0], [85.7, 483.0], [85.8, 483.0], [85.9, 483.0], [86.0, 485.0], [86.1, 485.0], [86.2, 485.0], [86.3, 485.0], [86.4, 494.0], [86.5, 494.0], [86.6, 494.0], [86.7, 523.0], [86.8, 523.0], [86.9, 523.0], [87.0, 524.0], [87.1, 524.0], [87.2, 524.0], [87.3, 533.0], [87.4, 533.0], [87.5, 533.0], [87.6, 547.0], [87.7, 547.0], [87.8, 547.0], [87.9, 548.0], [88.0, 548.0], [88.1, 548.0], [88.2, 548.0], [88.3, 583.0], [88.4, 583.0], [88.5, 583.0], [88.6, 584.0], [88.7, 584.0], [88.8, 584.0], [88.9, 584.0], [89.0, 584.0], [89.1, 584.0], [89.2, 589.0], [89.3, 589.0], [89.4, 589.0], [89.5, 591.0], [89.6, 591.0], [89.7, 591.0], [89.8, 591.0], [89.9, 591.0], [90.0, 591.0], [90.1, 591.0], [90.2, 653.0], [90.3, 653.0], [90.4, 653.0], [90.5, 706.0], [90.6, 706.0], [90.7, 706.0], [90.8, 712.0], [90.9, 712.0], [91.0, 712.0], [91.1, 724.0], [91.2, 724.0], [91.3, 724.0], [91.4, 724.0], [91.5, 725.0], [91.6, 725.0], [91.7, 725.0], [91.8, 754.0], [91.9, 754.0], [92.0, 754.0], [92.1, 772.0], [92.2, 772.0], [92.3, 772.0], [92.4, 801.0], [92.5, 801.0], [92.6, 801.0], [92.7, 829.0], [92.8, 829.0], [92.9, 829.0], [93.0, 837.0], [93.1, 837.0], [93.2, 837.0], [93.3, 837.0], [93.4, 848.0], [93.5, 848.0], [93.6, 848.0], [93.7, 849.0], [93.8, 849.0], [93.9, 849.0], [94.0, 850.0], [94.1, 850.0], [94.2, 850.0], [94.3, 851.0], [94.4, 851.0], [94.5, 851.0], [94.6, 855.0], [94.7, 855.0], [94.8, 855.0], [94.9, 855.0], [95.0, 856.0], [95.1, 856.0], [95.2, 856.0], [95.3, 856.0], [95.4, 856.0], [95.5, 856.0], [95.6, 860.0], [95.7, 860.0], [95.8, 860.0], [95.9, 860.0], [96.0, 860.0], [96.1, 860.0], [96.2, 866.0], [96.3, 866.0], [96.4, 866.0], [96.5, 867.0], [96.6, 867.0], [96.7, 867.0], [96.8, 867.0], [96.9, 867.0], [97.0, 867.0], [97.1, 867.0], [97.2, 869.0], [97.3, 869.0], [97.4, 869.0], [97.5, 870.0], [97.6, 870.0], [97.7, 870.0], [97.8, 871.0], [97.9, 871.0], [98.0, 871.0], [98.1, 884.0], [98.2, 884.0], [98.3, 884.0], [98.4, 884.0], [98.5, 886.0], [98.6, 886.0], [98.7, 886.0], [98.8, 892.0], [98.9, 892.0], [99.0, 892.0], [99.1, 916.0], [99.2, 916.0], [99.3, 916.0], [99.4, 927.0], [99.5, 927.0], [99.6, 927.0], [99.7, 1012.0], [99.8, 1012.0], [99.9, 1012.0], [100.0, 1012.0]], "isOverall": false, "label": "Get Auth Token", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 686.0, "series": [{"data": [[2100.0, 2.0], [600.0, 30.0], [700.0, 27.0], [200.0, 22.0], [800.0, 64.0], [900.0, 100.0], [1000.0, 278.0], [1100.0, 686.0], [300.0, 429.0], [1200.0, 221.0], [1300.0, 142.0], [1400.0, 176.0], [1500.0, 81.0], [400.0, 175.0], [1600.0, 29.0], [1700.0, 23.0], [1800.0, 35.0], [1900.0, 8.0], [500.0, 56.0], [2000.0, 2.0]], "isOverall": false, "label": "Create payment token for a given payment source", "isController": false}, {"data": [[2100.0, 2.0], [0.0, 3.0], [600.0, 29.0], [700.0, 27.0], [200.0, 22.0], [800.0, 65.0], [900.0, 101.0], [1000.0, 278.0], [1100.0, 679.0], [300.0, 429.0], [1200.0, 223.0], [1300.0, 144.0], [1400.0, 179.0], [1500.0, 81.0], [400.0, 175.0], [1600.0, 29.0], [1700.0, 23.0], [1800.0, 35.0], [1900.0, 8.0], [500.0, 55.0], [2000.0, 2.0]], "isOverall": false, "label": "(SpikeTesting)CreatePaymentToken_tr_ForGivenPaymentSource", "isController": true}, {"data": [[300.0, 199.0], [600.0, 1.0], [700.0, 6.0], [800.0, 21.0], [400.0, 73.0], [900.0, 2.0], [500.0, 11.0], [1000.0, 1.0]], "isOverall": false, "label": "Get Auth Token", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 2100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2007.0, "series": [{"data": [[0.0, 900.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 2007.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 303.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 3.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 33.05048543689314, "minX": 1.71751704E12, "maxY": 89.73935091277883, "series": [{"data": [[1.7175171E12, 89.73935091277883], [1.71751704E12, 33.05048543689314]], "isOverall": false, "label": "CreatePaymentToken_SpikeTesting", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7175171E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 273.0, "minX": 39.0, "maxY": 2044.0, "series": [{"data": [[63.0, 288.0], [75.0, 286.0], [82.0, 298.5], [83.0, 289.25], [84.0, 282.5], [85.0, 413.75], [86.0, 815.0], [87.0, 457.6], [88.0, 528.0], [89.0, 426.0], [90.0, 500.0], [91.0, 552.4], [92.0, 849.5], [93.0, 600.5], [94.0, 409.3333333333333], [95.0, 876.0], [96.0, 358.0], [97.0, 600.0], [98.0, 389.5], [100.0, 463.5], [101.0, 367.5], [103.0, 327.6666666666667], [104.0, 351.0], [105.0, 330.0], [106.0, 348.25], [107.0, 273.0], [108.0, 517.1666666666666], [109.0, 402.8333333333333], [110.0, 423.0], [111.0, 345.8333333333333], [112.0, 454.14285714285717], [113.0, 556.8], [114.0, 435.5], [115.0, 416.6666666666667], [116.0, 381.66666666666663], [117.0, 503.0], [123.0, 410.0], [124.0, 691.0], [126.0, 345.0], [128.0, 539.0], [134.0, 861.0], [135.0, 393.0], [136.0, 613.5], [137.0, 339.0], [138.0, 323.0], [139.0, 321.0], [141.0, 598.0], [144.0, 343.0], [146.0, 348.0], [148.0, 352.5], [149.0, 339.0], [151.0, 335.0], [155.0, 322.0], [156.0, 329.0], [157.0, 341.0], [159.0, 319.6666666666667], [161.0, 335.0], [164.0, 371.6666666666667], [172.0, 346.0], [173.0, 469.4], [174.0, 497.1666666666667], [175.0, 448.8333333333333], [176.0, 421.8333333333333], [177.0, 359.90000000000003], [178.0, 359.66666666666663], [179.0, 349.0], [180.0, 378.5714285714286], [181.0, 328.6666666666667], [182.0, 371.0], [183.0, 419.50000000000006], [184.0, 372.8333333333333], [185.0, 347.6], [186.0, 323.75], [187.0, 351.85714285714283], [188.0, 332.0], [189.0, 426.63636363636357], [190.0, 450.6666666666667], [191.0, 410.8571428571429], [192.0, 395.6], [193.0, 377.6666666666667], [194.0, 362.33333333333326], [195.0, 375.0], [196.0, 358.7142857142857], [197.0, 327.0], [198.0, 332.0], [199.0, 376.2], [200.0, 349.2], [202.0, 337.0], [204.0, 357.0], [205.0, 341.0], [211.0, 367.0], [212.0, 372.0], [214.0, 382.0], [219.0, 412.0], [221.0, 338.0], [223.0, 352.0], [224.0, 348.0], [225.0, 422.0], [226.0, 327.0], [227.0, 332.0], [228.0, 316.0], [229.0, 338.0], [232.0, 332.0], [233.0, 339.0], [234.0, 335.0], [238.0, 320.0], [239.0, 320.0], [241.0, 336.6666666666667], [242.0, 305.0], [243.0, 313.6666666666667], [246.0, 311.0], [248.0, 342.0], [252.0, 339.0], [251.0, 330.0], [255.0, 355.0], [257.0, 322.3333333333333], [256.0, 330.75], [258.0, 379.6], [259.0, 435.3333333333333], [260.0, 357.6], [261.0, 399.3], [262.0, 345.0], [263.0, 361.4], [264.0, 342.25], [270.0, 554.4285714285714], [271.0, 352.77777777777777], [268.0, 338.25], [269.0, 335.0], [265.0, 369.0], [266.0, 355.4444444444445], [267.0, 370.7142857142857], [273.0, 372.0], [272.0, 368.5], [274.0, 357.0], [275.0, 349.8], [276.0, 327.8], [277.0, 338.6666666666667], [278.0, 349.57142857142856], [279.0, 366.8], [280.0, 349.0], [284.0, 415.0], [281.0, 342.0], [282.0, 439.0], [283.0, 394.0], [288.0, 392.0], [289.0, 398.0], [294.0, 406.5], [295.0, 349.5], [296.0, 380.0], [298.0, 326.0], [307.0, 375.0], [305.0, 368.0], [308.0, 383.0], [311.0, 363.0], [313.0, 342.0], [315.0, 379.0], [317.0, 362.0], [318.0, 382.0], [321.0, 394.0], [326.0, 407.0], [329.0, 443.0], [331.0, 446.0], [332.0, 425.6666666666667], [338.0, 421.75], [337.0, 449.0], [339.0, 361.0], [348.0, 414.4], [349.0, 435.79999999999995], [351.0, 438.0], [350.0, 506.8], [340.0, 489.3333333333333], [342.0, 513.375], [343.0, 435.0], [344.0, 464.91666666666663], [345.0, 422.4], [346.0, 429.0], [347.0, 413.0], [353.0, 499.25], [352.0, 594.2857142857143], [354.0, 494.0], [355.0, 486.1428571428571], [356.0, 648.0714285714286], [357.0, 528.4], [358.0, 561.4], [359.0, 553.0], [360.0, 472.12499999999994], [367.0, 638.5], [366.0, 900.0], [364.0, 870.0], [365.0, 913.5], [361.0, 944.8705882352941], [362.0, 679.1428571428571], [363.0, 742.0], [369.0, 851.0], [368.0, 791.5], [371.0, 1312.6666666666667], [370.0, 1835.4], [380.0, 1099.75], [381.0, 1211.2857142857142], [382.0, 1063.0], [372.0, 1337.0], [373.0, 1452.0000000000002], [374.0, 1563.0], [375.0, 1556.25], [376.0, 1330.181818181818], [377.0, 1334.8750000000002], [378.0, 1127.1666666666667], [379.0, 1095.0], [397.0, 1885.0], [384.0, 1221.3333333333333], [385.0, 1066.9333333333325], [391.0, 1158.5], [390.0, 1892.0], [389.0, 1566.6666666666667], [392.0, 1147.3333333333333], [395.0, 960.0], [399.0, 2044.0], [396.0, 1681.0], [386.0, 1460.0], [394.0, 1641.5], [414.0, 1619.1], [403.0, 1203.6666666666667], [404.0, 1276.5], [405.0, 1328.0], [407.0, 1471.0], [402.0, 1675.6666666666667], [400.0, 1508.0], [406.0, 1476.0], [410.0, 1124.0], [413.0, 1262.6363636363637], [415.0, 1302.5], [412.0, 1589.0], [411.0, 1177.555948174323], [408.0, 1341.0], [430.0, 1376.8], [421.0, 1270.857142857143], [420.0, 1292.5], [423.0, 1514.6666666666667], [422.0, 1314.5], [416.0, 1291.3636363636363], [424.0, 1220.0], [425.0, 1293.6], [427.0, 1314.5], [426.0, 1251.0], [428.0, 1318.5], [419.0, 1343.25], [418.0, 1264.0], [417.0, 1448.5], [431.0, 1448.0], [429.0, 1167.0], [446.0, 1393.4], [434.0, 1213.375], [433.0, 1289.2857142857142], [432.0, 1331.0], [438.0, 1226.0], [437.0, 1363.0], [436.0, 1416.5], [435.0, 1209.6666666666667], [444.0, 1314.0], [447.0, 1259.75], [445.0, 1288.0], [443.0, 1383.0], [442.0, 1289.5], [441.0, 1372.0], [440.0, 1295.6666666666667], [462.0, 1400.3333333333333], [449.0, 1464.0], [448.0, 1594.0], [457.0, 1239.6], [456.0, 1199.0], [455.0, 1321.0], [454.0, 1261.0], [452.0, 1312.6666666666667], [453.0, 1397.0], [463.0, 1352.75], [461.0, 1205.6], [451.0, 1487.5], [460.0, 1503.0], [450.0, 1545.5], [459.0, 1318.3333333333333], [458.0, 1373.0], [477.0, 1052.7142857142858], [466.0, 1225.166666666667], [467.0, 1247.0], [469.0, 1197.0], [468.0, 1378.5], [471.0, 1307.75], [465.0, 1197.0], [464.0, 1722.0], [470.0, 1428.5], [472.0, 1299.0], [474.0, 1084.6666666666665], [473.0, 1544.0], [475.0, 1391.0], [478.0, 1085.5714285714287], [479.0, 1296.142857142857], [476.0, 1168.5], [481.0, 1296.0], [480.0, 1212.75], [482.0, 1219.1111111111113], [483.0, 1252.6666666666667], [485.0, 1186.8999999999999], [484.0, 1108.4285714285716], [486.0, 1196.5], [487.0, 1137.9375], [488.0, 1187.8], [494.0, 1095.375], [495.0, 1217.6666666666667], [492.0, 1127.7], [493.0, 1180.5], [489.0, 1098.6666666666667], [490.0, 1290.4], [491.0, 1223.0], [509.0, 1339.0], [496.0, 1168.7142857142858], [503.0, 1590.6666666666667], [508.0, 1412.5], [498.0, 1719.5], [511.0, 1735.0], [510.0, 1982.0], [507.0, 1499.0], [506.0, 1510.0], [505.0, 1521.0], [504.0, 1554.0], [514.0, 1473.5], [513.0, 1360.75], [515.0, 1591.0], [516.0, 1365.6666666666667], [520.0, 1510.0], [522.0, 1331.0], [523.0, 1110.0], [526.0, 1468.6666666666667], [525.0, 1510.5000000000002], [527.0, 1419.2], [530.0, 1307.0], [538.0, 1410.8571428571427], [537.0, 1415.25], [517.0, 1675.0], [539.0, 1594.0], [541.0, 1318.0], [540.0, 1407.0], [543.0, 1495.5], [529.0, 1736.0], [528.0, 1495.0], [542.0, 1423.2], [532.0, 1452.0], [531.0, 1410.0], [533.0, 1411.0], [535.0, 1430.0], [534.0, 1546.0], [571.0, 1258.7777777777778], [563.0, 1220.7142857142858], [560.0, 1322.7857142857142], [564.0, 1220.0], [567.0, 1137.0000000000002], [570.0, 1193.7777777777778], [569.0, 1249.2857142857142], [559.0, 1327.6], [544.0, 1336.0], [546.0, 1381.0], [545.0, 1406.0], [549.0, 1362.0], [548.0, 1357.3333333333333], [558.0, 1235.0], [557.0, 1230.3333333333333], [556.0, 1244.0], [555.0, 1325.0000000000002], [553.0, 1414.1666666666667], [562.0, 1245.0], [561.0, 1177.5]], "isOverall": false, "label": "Create payment token for a given payment source", "isController": false}, {"data": [[377.4338747099761, 988.5108275328713]], "isOverall": false, "label": "Create payment token for a given payment source-Aggregated", "isController": false}, {"data": [[63.0, 288.0], [75.0, 286.0], [82.0, 298.5], [83.0, 289.25], [84.0, 282.5], [85.0, 413.75], [86.0, 815.0], [87.0, 457.6], [88.0, 528.0], [89.0, 426.0], [90.0, 500.0], [91.0, 552.4], [92.0, 849.5], [93.0, 600.5], [94.0, 409.3333333333333], [95.0, 876.0], [96.0, 358.0], [97.0, 600.0], [98.0, 389.5], [100.0, 463.5], [101.0, 367.5], [103.0, 327.6666666666667], [104.0, 351.0], [105.0, 330.0], [106.0, 348.25], [107.0, 273.0], [108.0, 517.1666666666666], [109.0, 402.8333333333333], [110.0, 423.0], [111.0, 345.8333333333333], [112.0, 454.14285714285717], [113.0, 556.8], [114.0, 435.5], [115.0, 416.6666666666667], [116.0, 381.66666666666663], [117.0, 503.0], [123.0, 410.0], [124.0, 691.0], [126.0, 345.0], [128.0, 539.0], [134.0, 861.0], [135.0, 393.0], [136.0, 613.5], [137.0, 339.0], [138.0, 323.0], [139.0, 321.0], [141.0, 598.0], [144.0, 343.0], [146.0, 348.0], [148.0, 352.5], [149.0, 339.0], [151.0, 335.0], [155.0, 322.0], [156.0, 329.0], [157.0, 341.0], [159.0, 319.6666666666667], [161.0, 335.0], [164.0, 371.6666666666667], [172.0, 346.0], [173.0, 469.4], [174.0, 497.1666666666667], [175.0, 448.8333333333333], [176.0, 421.8333333333333], [177.0, 359.90000000000003], [178.0, 359.66666666666663], [179.0, 349.0], [180.0, 378.5714285714286], [181.0, 328.6666666666667], [182.0, 371.0], [183.0, 419.50000000000006], [184.0, 372.8333333333333], [185.0, 347.6], [186.0, 323.75], [187.0, 351.85714285714283], [188.0, 332.0], [189.0, 426.63636363636357], [190.0, 450.6666666666667], [191.0, 410.8571428571429], [192.0, 395.6], [193.0, 377.6666666666667], [194.0, 362.33333333333326], [195.0, 375.0], [196.0, 358.7142857142857], [197.0, 327.0], [198.0, 332.0], [199.0, 376.2], [200.0, 349.2], [202.0, 337.0], [204.0, 357.0], [205.0, 341.0], [211.0, 367.0], [212.0, 372.0], [214.0, 382.0], [219.0, 412.0], [221.0, 338.0], [223.0, 352.0], [224.0, 348.0], [225.0, 422.0], [226.0, 327.0], [227.0, 332.0], [228.0, 316.0], [229.0, 338.0], [232.0, 332.0], [233.0, 339.0], [234.0, 335.0], [238.0, 320.0], [239.0, 320.0], [241.0, 336.6666666666667], [242.0, 305.0], [243.0, 313.6666666666667], [246.0, 311.0], [248.0, 342.0], [252.0, 339.0], [251.0, 330.0], [255.0, 355.0], [257.0, 322.3333333333333], [256.0, 330.75], [258.0, 379.6], [259.0, 435.3333333333333], [260.0, 357.6], [261.0, 399.3], [262.0, 345.0], [263.0, 361.4], [264.0, 342.25], [270.0, 554.4285714285714], [271.0, 352.77777777777777], [268.0, 338.25], [269.0, 335.0], [265.0, 369.0], [266.0, 355.4444444444445], [267.0, 370.7142857142857], [273.0, 372.0], [272.0, 368.5], [274.0, 357.0], [275.0, 349.8], [276.0, 327.8], [277.0, 338.6666666666667], [278.0, 349.57142857142856], [279.0, 366.8], [280.0, 349.0], [284.0, 415.0], [281.0, 342.0], [282.0, 439.0], [283.0, 394.0], [288.0, 392.0], [289.0, 398.0], [294.0, 406.5], [295.0, 349.5], [296.0, 380.0], [298.0, 326.0], [306.0, 367.0], [307.0, 375.0], [305.0, 369.0], [308.0, 383.0], [311.0, 363.0], [313.0, 342.0], [315.0, 379.0], [317.0, 362.0], [318.0, 382.0], [321.0, 394.0], [326.0, 407.0], [329.0, 443.0], [331.0, 446.0], [332.0, 425.6666666666667], [338.0, 421.75], [337.0, 449.0], [339.0, 361.0], [348.0, 414.4], [349.0, 435.79999999999995], [351.0, 438.0], [350.0, 506.8], [340.0, 489.3333333333333], [342.0, 513.375], [343.0, 435.0], [344.0, 464.91666666666663], [345.0, 422.4], [346.0, 429.0], [347.0, 413.0], [353.0, 548.5], [352.0, 612.0], [354.0, 494.0], [355.0, 517.4285714285714], [356.0, 656.2142857142858], [357.0, 440.3333333333333], [358.0, 588.6], [359.0, 491.55555555555554], [360.0, 478.24999999999994], [367.0, 638.5], [366.0, 900.25], [364.0, 870.0], [365.0, 913.5], [361.0, 933.8837209302326], [362.0, 679.1428571428571], [363.0, 742.1428571428571], [369.0, 851.0], [368.0, 791.5], [371.0, 1312.6666666666667], [370.0, 1835.4], [380.0, 1099.75], [381.0, 1211.4285714285713], [382.0, 1063.0], [383.0, 1875.0], [372.0, 1337.0], [373.0, 1452.1250000000002], [374.0, 1563.0], [375.0, 1556.25], [376.0, 1330.181818181818], [377.0, 1335.0000000000002], [378.0, 1127.1666666666667], [379.0, 1095.0], [397.0, 1885.0], [384.0, 1221.3333333333333], [385.0, 1059.173076923076], [391.0, 1159.0], [390.0, 1893.0], [389.0, 1567.3333333333333], [392.0, 1147.3333333333333], [395.0, 1426.0], [399.0, 2044.0], [396.0, 1471.0], [386.0, 1460.0], [394.0, 1642.0], [414.0, 1619.1], [403.0, 1203.6666666666667], [404.0, 1276.5], [405.0, 1328.0], [407.0, 1471.0], [402.0, 1676.0], [400.0, 1508.0], [406.0, 1476.0], [410.0, 1124.0], [413.0, 1262.6363636363637], [415.0, 1337.0], [412.0, 1589.0], [411.0, 1177.5559481743232], [408.0, 1342.0], [430.0, 1237.75], [421.0, 1271.0], [420.0, 1292.5], [423.0, 1514.6666666666667], [422.0, 1314.5], [416.0, 1291.3636363636363], [424.0, 1220.3333333333333], [425.0, 1293.6], [427.0, 1314.5], [426.0, 1251.0], [428.0, 1369.6666666666667], [419.0, 1343.75], [418.0, 1264.0], [417.0, 1457.0], [431.0, 1448.0], [429.0, 1320.0], [446.0, 1397.6], [434.0, 1213.5], [433.0, 1289.2857142857142], [432.0, 1331.6666666666667], [438.0, 1226.0], [437.0, 1363.3333333333333], [436.0, 1416.75], [435.0, 1210.0], [444.0, 1326.0], [447.0, 1276.0], [445.0, 1295.0], [443.0, 1357.0], [442.0, 1290.0], [441.0, 1380.2857142857142], [440.0, 1295.6666666666667], [462.0, 1400.6666666666667], [449.0, 1536.0], [448.0, 1513.0], [457.0, 1252.8], [456.0, 1199.0], [455.0, 1328.0], [454.0, 1261.0], [452.0, 1327.0], [453.0, 1398.0], [463.0, 1418.0], [461.0, 1219.8], [451.0, 1487.5], [460.0, 1503.0], [450.0, 1546.0], [459.0, 1318.6666666666667], [458.0, 1373.25], [477.0, 1065.2857142857144], [466.0, 1193.0], [467.0, 1247.3333333333333], [469.0, 1210.0], [468.0, 1379.0], [471.0, 1334.5], [465.0, 1271.5], [464.0, 1722.0], [470.0, 1442.75], [472.0, 1299.0], [474.0, 1084.75], [473.0, 1544.5], [475.0, 1391.5], [478.0, 1085.5714285714287], [479.0, 1313.142857142857], [476.0, 1194.5], [481.0, 1326.0], [480.0, 1240.75], [482.0, 1219.2222222222224], [483.0, 1252.8333333333335], [485.0, 1191.5], [484.0, 1108.4285714285716], [486.0, 1196.75], [487.0, 1137.9375], [488.0, 1187.8], [494.0, 1095.5], [495.0, 1217.8333333333335], [492.0, 1133.3999999999999], [493.0, 1180.5], [489.0, 1106.3333333333333], [490.0, 1290.6], [491.0, 1223.0], [508.0, 1412.5], [496.0, 1183.5], [497.0, 1124.0], [498.0, 1720.5], [503.0, 1533.0], [500.0, 1706.5], [509.0, 1339.0], [511.0, 1735.0], [505.0, 1521.0], [504.0, 1554.0], [510.0, 1982.0], [507.0, 1499.0], [506.0, 1511.0], [514.0, 1473.5], [513.0, 1328.6666666666667], [512.0, 1457.0], [515.0, 1591.0], [516.0, 1365.6666666666667], [520.0, 1510.0], [522.0, 1331.0], [523.0, 1110.0], [526.0, 1468.6666666666667], [525.0, 1510.75], [527.0, 1419.2], [530.0, 1307.0], [538.0, 1410.8571428571427], [537.0, 1415.25], [517.0, 1675.0], [539.0, 1594.0], [541.0, 1343.0], [540.0, 1407.0], [543.0, 1495.5], [529.0, 1737.0], [528.0, 1495.5], [542.0, 1437.0], [532.0, 1452.0], [531.0, 1410.0], [533.0, 1411.5], [535.0, 1430.0], [534.0, 1546.5], [571.0, 1258.7777777777778], [563.0, 1220.857142857143], [560.0, 1322.7857142857142], [564.0, 1220.3333333333333], [567.0, 1137.041666666667], [570.0, 1193.888888888889], [569.0, 1249.2857142857142], [559.0, 1327.6], [544.0, 1336.0], [546.0, 1381.0], [545.0, 1406.0], [549.0, 1363.0], [548.0, 1357.3333333333333], [558.0, 1235.0], [557.0, 1230.3333333333333], [556.0, 1244.0], [555.0, 1325.0277777777778], [553.0, 1414.25], [562.0, 1245.0], [561.0, 1177.5555555555557]], "isOverall": false, "label": "(SpikeTesting)CreatePaymentToken_tr_ForGivenPaymentSource", "isController": true}, {"data": [[377.4090382387018, 988.2893008883739]], "isOverall": false, "label": "(SpikeTesting)CreatePaymentToken_tr_ForGivenPaymentSource-Aggregated", "isController": true}, {"data": [[39.0, 330.0], [52.0, 333.0], [75.0, 360.0], [78.0, 856.0], [79.0, 582.0], [81.0, 731.75], [82.0, 628.0], [83.0, 895.25], [84.0, 851.5], [85.0, 860.5], [98.0, 329.0], [101.0, 323.0], [103.0, 326.0], [104.0, 340.0], [106.0, 333.0], [107.0, 327.0], [108.0, 860.0], [109.0, 330.5], [111.0, 849.0], [415.0, 393.0], [418.0, 361.3333333333333], [420.0, 345.5], [419.0, 342.0], [417.0, 350.0], [416.0, 372.0], [421.0, 322.0], [423.0, 332.0], [424.0, 329.5], [430.0, 377.0], [434.0, 373.0], [435.0, 415.0], [440.0, 440.5], [443.0, 433.0], [446.0, 440.0], [448.0, 552.8333333333334], [449.0, 522.75], [452.0, 401.0], [453.0, 366.0], [455.0, 345.6666666666667], [458.0, 374.0], [463.0, 453.0], [478.0, 476.2], [466.0, 484.16666666666663], [465.0, 483.0], [467.0, 418.6666666666667], [476.0, 365.0], [477.0, 376.5], [469.0, 381.0], [471.0, 368.6666666666667], [472.0, 440.0], [473.0, 363.5], [475.0, 606.0], [474.0, 364.0], [479.0, 366.8333333333333], [492.0, 360.0], [481.0, 498.3333333333333], [482.0, 423.4], [483.0, 342.0], [485.0, 369.0], [486.0, 423.3333333333333], [487.0, 487.0], [488.0, 363.0], [489.0, 325.0], [490.0, 350.5], [493.0, 533.0], [494.0, 348.6666666666667], [495.0, 344.0], [496.0, 445.25], [501.0, 425.5], [502.0, 411.5], [503.0, 402.5], [507.0, 397.0], [508.0, 372.5], [509.0, 394.0], [510.0, 400.75], [525.0, 361.5], [515.0, 361.5], [516.0, 380.0], [519.0, 419.3333333333333], [538.0, 411.0], [539.0, 385.0], [540.0, 372.0], [541.0, 378.0], [520.0, 457.0], [522.0, 379.5], [524.0, 357.0], [526.0, 355.5], [530.0, 384.6666666666667], [531.0, 348.0], [532.0, 357.0], [549.0, 377.3333333333333], [559.0, 421.0], [560.0, 391.0], [571.0, 393.0952380952381], [568.0, 375.0], [569.0, 432.47619047619054], [570.0, 426.8125], [555.0, 399.0], [552.0, 383.0], [547.0, 382.5], [546.0, 380.0], [544.0, 409.0], [562.0, 390.6], [565.0, 374.0], [566.0, 365.6666666666667], [567.0, 410.7142857142857]], "isOverall": false, "label": "Get Auth Token", "isController": false}, {"data": [[462.2420382165602, 434.16242038216546]], "isOverall": false, "label": "Get Auth Token-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 571.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 5818.533333333334, "minX": 1.71751704E12, "maxY": 78019.81666666667, "series": [{"data": [[1.7175171E12, 78019.81666666667], [1.71751704E12, 22269.783333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.7175171E12, 18022.1], [1.71751704E12, 5818.533333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7175171E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 411.55714285714316, "minX": 1.71751704E12, "maxY": 1216.1172940534645, "series": [{"data": [[1.7175171E12, 1216.1172940534645], [1.71751704E12, 434.45683930942926]], "isOverall": false, "label": "Create payment token for a given payment source", "isController": false}, {"data": [[1.7175171E12, 1214.5308574549435], [1.71751704E12, 441.7875989445912]], "isOverall": false, "label": "(SpikeTesting)CreatePaymentToken_tr_ForGivenPaymentSource", "isController": true}, {"data": [[1.7175171E12, 411.55714285714316], [1.71751704E12, 620.3235294117648]], "isOverall": false, "label": "Get Auth Token", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7175171E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.71751704E12, "maxY": 1216.1123840698294, "series": [{"data": [[1.7175171E12, 1216.1123840698294], [1.71751704E12, 434.4462151394421]], "isOverall": false, "label": "Create payment token for a given payment source", "isController": false}, {"data": [[1.7175171E12, 0.0], [1.71751704E12, 0.0]], "isOverall": false, "label": "(SpikeTesting)CreatePaymentToken_tr_ForGivenPaymentSource", "isController": true}, {"data": [[1.7175171E12, 411.142857142857], [1.71751704E12, 620.0588235294116]], "isOverall": false, "label": "Get Auth Token", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7175171E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 51.11764705882353, "minX": 1.71751704E12, "maxY": 89.0357142857143, "series": [{"data": [[1.7175171E12, 83.51827605019089], [1.71751704E12, 66.38512616201864]], "isOverall": false, "label": "Create payment token for a given payment source", "isController": false}, {"data": [[1.7175171E12, 70.27252867285621], [1.71751704E12, 71.86939313984173]], "isOverall": false, "label": "(SpikeTesting)CreatePaymentToken_tr_ForGivenPaymentSource", "isController": true}, {"data": [[1.7175171E12, 89.0357142857143], [1.71751704E12, 51.11764705882353]], "isOverall": false, "label": "Get Auth Token", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7175171E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 268.0, "minX": 1.71751704E12, "maxY": 2197.0, "series": [{"data": [[1.7175171E12, 2197.0], [1.71751704E12, 1600.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.7175171E12, 322.0], [1.71751704E12, 268.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.7175171E12, 1535.0], [1.71751704E12, 683.8000000000004]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.7175171E12, 1892.0], [1.71751704E12, 1304.0800000000002]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.7175171E12, 1157.0], [1.71751704E12, 371.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.7175171E12, 1706.0], [1.71751704E12, 860.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7175171E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 2.0, "maxY": 1647.5, "series": [{"data": [[33.0, 363.0], [32.0, 665.5], [2.0, 1374.0], [34.0, 443.0], [35.0, 360.0], [37.0, 334.0], [38.0, 364.0], [44.0, 1151.5], [47.0, 1139.0], [48.0, 1165.5], [49.0, 1179.0], [51.0, 1113.0], [50.0, 1136.5], [53.0, 1137.0], [52.0, 1143.0], [55.0, 1124.0], [54.0, 1138.0], [56.0, 1124.5], [59.0, 1256.0], [72.0, 447.5], [90.0, 1647.5], [8.0, 788.5], [134.0, 936.0], [140.0, 1271.0], [143.0, 394.0], [145.0, 1149.0], [9.0, 993.0], [10.0, 862.5], [180.0, 1109.0], [181.0, 1422.0], [11.0, 817.0], [220.0, 1535.0], [14.0, 782.0], [20.0, 1197.5], [22.0, 601.0], [23.0, 349.0], [27.0, 993.0], [30.0, 1245.0], [31.0, 470.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[14.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 220.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 2.0, "maxY": 1395.0, "series": [{"data": [[33.0, 363.0], [32.0, 665.5], [2.0, 656.0], [34.0, 443.0], [35.0, 360.0], [37.0, 334.0], [38.0, 364.0], [44.0, 1151.5], [47.0, 1139.0], [48.0, 1165.5], [49.0, 1179.0], [51.0, 1113.0], [50.0, 1136.5], [53.0, 1137.0], [52.0, 1143.0], [55.0, 1124.0], [54.0, 1138.0], [56.0, 1124.5], [59.0, 1235.0], [72.0, 447.0], [90.0, 1342.0], [8.0, 708.0], [134.0, 890.5], [140.0, 1235.5], [143.0, 393.0], [145.0, 1084.0], [9.0, 993.0], [10.0, 862.0], [180.0, 1090.0], [181.0, 1327.0], [11.0, 817.0], [220.0, 1395.0], [14.0, 772.0], [20.0, 1197.5], [22.0, 601.0], [23.0, 348.0], [27.0, 993.0], [30.0, 1245.0], [31.0, 470.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[14.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 220.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 13.683333333333334, "minX": 1.71751704E12, "maxY": 39.86666666666667, "series": [{"data": [[1.7175171E12, 39.86666666666667], [1.71751704E12, 13.683333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7175171E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.71751704E12, "maxY": 40.38333333333333, "series": [{"data": [[1.7175171E12, 40.38333333333333], [1.71751704E12, 13.116666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.7175171E12, 0.05]], "isOverall": false, "label": "EMPTY_RES_CODE", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7175171E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.71751704E12, "maxY": 30.55, "series": [{"data": [[1.7175171E12, 0.05]], "isOverall": false, "label": "(SpikeTesting)CreatePaymentToken_tr_ForGivenPaymentSource-failure", "isController": false}, {"data": [[1.7175171E12, 30.55], [1.71751704E12, 12.55]], "isOverall": false, "label": "Create payment token for a given payment source-success", "isController": false}, {"data": [[1.7175171E12, 30.466666666666665], [1.71751704E12, 12.633333333333333]], "isOverall": false, "label": "(SpikeTesting)CreatePaymentToken_tr_ForGivenPaymentSource-success", "isController": true}, {"data": [[1.7175171E12, 4.666666666666667], [1.71751704E12, 0.5666666666666667]], "isOverall": false, "label": "Get Auth Token-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7175171E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.71751704E12, "maxY": 65.68333333333334, "series": [{"data": [[1.7175171E12, 65.68333333333334], [1.71751704E12, 25.75]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.7175171E12, 0.05]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7175171E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

